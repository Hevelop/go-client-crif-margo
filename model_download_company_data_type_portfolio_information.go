/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
)

// checks if the DownloadCompanyDataTypePortfolioInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DownloadCompanyDataTypePortfolioInformation{}

// DownloadCompanyDataTypePortfolioInformation struct for DownloadCompanyDataTypePortfolioInformation
type DownloadCompanyDataTypePortfolioInformation struct {
	MargoId *string `json:"margoId,omitempty"`
	IdentificationCode *string `json:"identificationCode,omitempty"`
	CompanyPortfolioStatus *string `json:"companyPortfolioStatus,omitempty"`
	Tags []string `json:"tags,omitempty"`
	Amount *float32 `json:"amount,omitempty"`
	AreaManager *DownloadCompanyDataTypePortfolioInformationAreaManager `json:"areaManager,omitempty"`
	Sales *DownloadCompanyDataTypePortfolioInformationSales `json:"sales,omitempty"`
	Product *DownloadCompanyDataTypePortfolioInformationProduct `json:"product,omitempty"`
	CustomVariables []DownloadCompanyDataTypePortfolioInformationCustomVariablesInner `json:"customVariables,omitempty"`
}

// NewDownloadCompanyDataTypePortfolioInformation instantiates a new DownloadCompanyDataTypePortfolioInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDownloadCompanyDataTypePortfolioInformation() *DownloadCompanyDataTypePortfolioInformation {
	this := DownloadCompanyDataTypePortfolioInformation{}
	return &this
}

// NewDownloadCompanyDataTypePortfolioInformationWithDefaults instantiates a new DownloadCompanyDataTypePortfolioInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDownloadCompanyDataTypePortfolioInformationWithDefaults() *DownloadCompanyDataTypePortfolioInformation {
	this := DownloadCompanyDataTypePortfolioInformation{}
	return &this
}

// GetMargoId returns the MargoId field value if set, zero value otherwise.
func (o *DownloadCompanyDataTypePortfolioInformation) GetMargoId() string {
	if o == nil || IsNil(o.MargoId) {
		var ret string
		return ret
	}
	return *o.MargoId
}

// GetMargoIdOk returns a tuple with the MargoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadCompanyDataTypePortfolioInformation) GetMargoIdOk() (*string, bool) {
	if o == nil || IsNil(o.MargoId) {
		return nil, false
	}
	return o.MargoId, true
}

// HasMargoId returns a boolean if a field has been set.
func (o *DownloadCompanyDataTypePortfolioInformation) HasMargoId() bool {
	if o != nil && !IsNil(o.MargoId) {
		return true
	}

	return false
}

// SetMargoId gets a reference to the given string and assigns it to the MargoId field.
func (o *DownloadCompanyDataTypePortfolioInformation) SetMargoId(v string) {
	o.MargoId = &v
}

// GetIdentificationCode returns the IdentificationCode field value if set, zero value otherwise.
func (o *DownloadCompanyDataTypePortfolioInformation) GetIdentificationCode() string {
	if o == nil || IsNil(o.IdentificationCode) {
		var ret string
		return ret
	}
	return *o.IdentificationCode
}

// GetIdentificationCodeOk returns a tuple with the IdentificationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadCompanyDataTypePortfolioInformation) GetIdentificationCodeOk() (*string, bool) {
	if o == nil || IsNil(o.IdentificationCode) {
		return nil, false
	}
	return o.IdentificationCode, true
}

// HasIdentificationCode returns a boolean if a field has been set.
func (o *DownloadCompanyDataTypePortfolioInformation) HasIdentificationCode() bool {
	if o != nil && !IsNil(o.IdentificationCode) {
		return true
	}

	return false
}

// SetIdentificationCode gets a reference to the given string and assigns it to the IdentificationCode field.
func (o *DownloadCompanyDataTypePortfolioInformation) SetIdentificationCode(v string) {
	o.IdentificationCode = &v
}

// GetCompanyPortfolioStatus returns the CompanyPortfolioStatus field value if set, zero value otherwise.
func (o *DownloadCompanyDataTypePortfolioInformation) GetCompanyPortfolioStatus() string {
	if o == nil || IsNil(o.CompanyPortfolioStatus) {
		var ret string
		return ret
	}
	return *o.CompanyPortfolioStatus
}

// GetCompanyPortfolioStatusOk returns a tuple with the CompanyPortfolioStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadCompanyDataTypePortfolioInformation) GetCompanyPortfolioStatusOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyPortfolioStatus) {
		return nil, false
	}
	return o.CompanyPortfolioStatus, true
}

// HasCompanyPortfolioStatus returns a boolean if a field has been set.
func (o *DownloadCompanyDataTypePortfolioInformation) HasCompanyPortfolioStatus() bool {
	if o != nil && !IsNil(o.CompanyPortfolioStatus) {
		return true
	}

	return false
}

// SetCompanyPortfolioStatus gets a reference to the given string and assigns it to the CompanyPortfolioStatus field.
func (o *DownloadCompanyDataTypePortfolioInformation) SetCompanyPortfolioStatus(v string) {
	o.CompanyPortfolioStatus = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *DownloadCompanyDataTypePortfolioInformation) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadCompanyDataTypePortfolioInformation) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *DownloadCompanyDataTypePortfolioInformation) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *DownloadCompanyDataTypePortfolioInformation) SetTags(v []string) {
	o.Tags = v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *DownloadCompanyDataTypePortfolioInformation) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadCompanyDataTypePortfolioInformation) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *DownloadCompanyDataTypePortfolioInformation) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *DownloadCompanyDataTypePortfolioInformation) SetAmount(v float32) {
	o.Amount = &v
}

// GetAreaManager returns the AreaManager field value if set, zero value otherwise.
func (o *DownloadCompanyDataTypePortfolioInformation) GetAreaManager() DownloadCompanyDataTypePortfolioInformationAreaManager {
	if o == nil || IsNil(o.AreaManager) {
		var ret DownloadCompanyDataTypePortfolioInformationAreaManager
		return ret
	}
	return *o.AreaManager
}

// GetAreaManagerOk returns a tuple with the AreaManager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadCompanyDataTypePortfolioInformation) GetAreaManagerOk() (*DownloadCompanyDataTypePortfolioInformationAreaManager, bool) {
	if o == nil || IsNil(o.AreaManager) {
		return nil, false
	}
	return o.AreaManager, true
}

// HasAreaManager returns a boolean if a field has been set.
func (o *DownloadCompanyDataTypePortfolioInformation) HasAreaManager() bool {
	if o != nil && !IsNil(o.AreaManager) {
		return true
	}

	return false
}

// SetAreaManager gets a reference to the given DownloadCompanyDataTypePortfolioInformationAreaManager and assigns it to the AreaManager field.
func (o *DownloadCompanyDataTypePortfolioInformation) SetAreaManager(v DownloadCompanyDataTypePortfolioInformationAreaManager) {
	o.AreaManager = &v
}

// GetSales returns the Sales field value if set, zero value otherwise.
func (o *DownloadCompanyDataTypePortfolioInformation) GetSales() DownloadCompanyDataTypePortfolioInformationSales {
	if o == nil || IsNil(o.Sales) {
		var ret DownloadCompanyDataTypePortfolioInformationSales
		return ret
	}
	return *o.Sales
}

// GetSalesOk returns a tuple with the Sales field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadCompanyDataTypePortfolioInformation) GetSalesOk() (*DownloadCompanyDataTypePortfolioInformationSales, bool) {
	if o == nil || IsNil(o.Sales) {
		return nil, false
	}
	return o.Sales, true
}

// HasSales returns a boolean if a field has been set.
func (o *DownloadCompanyDataTypePortfolioInformation) HasSales() bool {
	if o != nil && !IsNil(o.Sales) {
		return true
	}

	return false
}

// SetSales gets a reference to the given DownloadCompanyDataTypePortfolioInformationSales and assigns it to the Sales field.
func (o *DownloadCompanyDataTypePortfolioInformation) SetSales(v DownloadCompanyDataTypePortfolioInformationSales) {
	o.Sales = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *DownloadCompanyDataTypePortfolioInformation) GetProduct() DownloadCompanyDataTypePortfolioInformationProduct {
	if o == nil || IsNil(o.Product) {
		var ret DownloadCompanyDataTypePortfolioInformationProduct
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadCompanyDataTypePortfolioInformation) GetProductOk() (*DownloadCompanyDataTypePortfolioInformationProduct, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *DownloadCompanyDataTypePortfolioInformation) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given DownloadCompanyDataTypePortfolioInformationProduct and assigns it to the Product field.
func (o *DownloadCompanyDataTypePortfolioInformation) SetProduct(v DownloadCompanyDataTypePortfolioInformationProduct) {
	o.Product = &v
}

// GetCustomVariables returns the CustomVariables field value if set, zero value otherwise.
func (o *DownloadCompanyDataTypePortfolioInformation) GetCustomVariables() []DownloadCompanyDataTypePortfolioInformationCustomVariablesInner {
	if o == nil || IsNil(o.CustomVariables) {
		var ret []DownloadCompanyDataTypePortfolioInformationCustomVariablesInner
		return ret
	}
	return o.CustomVariables
}

// GetCustomVariablesOk returns a tuple with the CustomVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadCompanyDataTypePortfolioInformation) GetCustomVariablesOk() ([]DownloadCompanyDataTypePortfolioInformationCustomVariablesInner, bool) {
	if o == nil || IsNil(o.CustomVariables) {
		return nil, false
	}
	return o.CustomVariables, true
}

// HasCustomVariables returns a boolean if a field has been set.
func (o *DownloadCompanyDataTypePortfolioInformation) HasCustomVariables() bool {
	if o != nil && !IsNil(o.CustomVariables) {
		return true
	}

	return false
}

// SetCustomVariables gets a reference to the given []DownloadCompanyDataTypePortfolioInformationCustomVariablesInner and assigns it to the CustomVariables field.
func (o *DownloadCompanyDataTypePortfolioInformation) SetCustomVariables(v []DownloadCompanyDataTypePortfolioInformationCustomVariablesInner) {
	o.CustomVariables = v
}

func (o DownloadCompanyDataTypePortfolioInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DownloadCompanyDataTypePortfolioInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MargoId) {
		toSerialize["margoId"] = o.MargoId
	}
	if !IsNil(o.IdentificationCode) {
		toSerialize["identificationCode"] = o.IdentificationCode
	}
	if !IsNil(o.CompanyPortfolioStatus) {
		toSerialize["companyPortfolioStatus"] = o.CompanyPortfolioStatus
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.AreaManager) {
		toSerialize["areaManager"] = o.AreaManager
	}
	if !IsNil(o.Sales) {
		toSerialize["sales"] = o.Sales
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.CustomVariables) {
		toSerialize["customVariables"] = o.CustomVariables
	}
	return toSerialize, nil
}

type NullableDownloadCompanyDataTypePortfolioInformation struct {
	value *DownloadCompanyDataTypePortfolioInformation
	isSet bool
}

func (v NullableDownloadCompanyDataTypePortfolioInformation) Get() *DownloadCompanyDataTypePortfolioInformation {
	return v.value
}

func (v *NullableDownloadCompanyDataTypePortfolioInformation) Set(val *DownloadCompanyDataTypePortfolioInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableDownloadCompanyDataTypePortfolioInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableDownloadCompanyDataTypePortfolioInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDownloadCompanyDataTypePortfolioInformation(val *DownloadCompanyDataTypePortfolioInformation) *NullableDownloadCompanyDataTypePortfolioInformation {
	return &NullableDownloadCompanyDataTypePortfolioInformation{value: val, isSet: true}
}

func (v NullableDownloadCompanyDataTypePortfolioInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDownloadCompanyDataTypePortfolioInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


