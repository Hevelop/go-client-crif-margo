/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
	"time"
)

// checks if the SearchCompanyDataTypeCompanyDates type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchCompanyDataTypeCompanyDates{}

// SearchCompanyDataTypeCompanyDates struct for SearchCompanyDataTypeCompanyDates
type SearchCompanyDataTypeCompanyDates struct {
	RegistrationDate *time.Time `json:"registrationDate,omitempty"`
	StartDate *time.Time `json:"startDate,omitempty"`
	IncorporationDate *time.Time `json:"incorporationDate,omitempty"`
	FoundingDate *time.Time `json:"foundingDate,omitempty"`
	EndDate *time.Time `json:"endDate,omitempty"`
}

// NewSearchCompanyDataTypeCompanyDates instantiates a new SearchCompanyDataTypeCompanyDates object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchCompanyDataTypeCompanyDates() *SearchCompanyDataTypeCompanyDates {
	this := SearchCompanyDataTypeCompanyDates{}
	return &this
}

// NewSearchCompanyDataTypeCompanyDatesWithDefaults instantiates a new SearchCompanyDataTypeCompanyDates object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchCompanyDataTypeCompanyDatesWithDefaults() *SearchCompanyDataTypeCompanyDates {
	this := SearchCompanyDataTypeCompanyDates{}
	return &this
}

// GetRegistrationDate returns the RegistrationDate field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeCompanyDates) GetRegistrationDate() time.Time {
	if o == nil || IsNil(o.RegistrationDate) {
		var ret time.Time
		return ret
	}
	return *o.RegistrationDate
}

// GetRegistrationDateOk returns a tuple with the RegistrationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeCompanyDates) GetRegistrationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RegistrationDate) {
		return nil, false
	}
	return o.RegistrationDate, true
}

// HasRegistrationDate returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeCompanyDates) HasRegistrationDate() bool {
	if o != nil && !IsNil(o.RegistrationDate) {
		return true
	}

	return false
}

// SetRegistrationDate gets a reference to the given time.Time and assigns it to the RegistrationDate field.
func (o *SearchCompanyDataTypeCompanyDates) SetRegistrationDate(v time.Time) {
	o.RegistrationDate = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeCompanyDates) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeCompanyDates) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeCompanyDates) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *SearchCompanyDataTypeCompanyDates) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetIncorporationDate returns the IncorporationDate field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeCompanyDates) GetIncorporationDate() time.Time {
	if o == nil || IsNil(o.IncorporationDate) {
		var ret time.Time
		return ret
	}
	return *o.IncorporationDate
}

// GetIncorporationDateOk returns a tuple with the IncorporationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeCompanyDates) GetIncorporationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.IncorporationDate) {
		return nil, false
	}
	return o.IncorporationDate, true
}

// HasIncorporationDate returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeCompanyDates) HasIncorporationDate() bool {
	if o != nil && !IsNil(o.IncorporationDate) {
		return true
	}

	return false
}

// SetIncorporationDate gets a reference to the given time.Time and assigns it to the IncorporationDate field.
func (o *SearchCompanyDataTypeCompanyDates) SetIncorporationDate(v time.Time) {
	o.IncorporationDate = &v
}

// GetFoundingDate returns the FoundingDate field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeCompanyDates) GetFoundingDate() time.Time {
	if o == nil || IsNil(o.FoundingDate) {
		var ret time.Time
		return ret
	}
	return *o.FoundingDate
}

// GetFoundingDateOk returns a tuple with the FoundingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeCompanyDates) GetFoundingDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FoundingDate) {
		return nil, false
	}
	return o.FoundingDate, true
}

// HasFoundingDate returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeCompanyDates) HasFoundingDate() bool {
	if o != nil && !IsNil(o.FoundingDate) {
		return true
	}

	return false
}

// SetFoundingDate gets a reference to the given time.Time and assigns it to the FoundingDate field.
func (o *SearchCompanyDataTypeCompanyDates) SetFoundingDate(v time.Time) {
	o.FoundingDate = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeCompanyDates) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeCompanyDates) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeCompanyDates) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *SearchCompanyDataTypeCompanyDates) SetEndDate(v time.Time) {
	o.EndDate = &v
}

func (o SearchCompanyDataTypeCompanyDates) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchCompanyDataTypeCompanyDates) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RegistrationDate) {
		toSerialize["registrationDate"] = o.RegistrationDate
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.IncorporationDate) {
		toSerialize["incorporationDate"] = o.IncorporationDate
	}
	if !IsNil(o.FoundingDate) {
		toSerialize["foundingDate"] = o.FoundingDate
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	return toSerialize, nil
}

type NullableSearchCompanyDataTypeCompanyDates struct {
	value *SearchCompanyDataTypeCompanyDates
	isSet bool
}

func (v NullableSearchCompanyDataTypeCompanyDates) Get() *SearchCompanyDataTypeCompanyDates {
	return v.value
}

func (v *NullableSearchCompanyDataTypeCompanyDates) Set(val *SearchCompanyDataTypeCompanyDates) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchCompanyDataTypeCompanyDates) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchCompanyDataTypeCompanyDates) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchCompanyDataTypeCompanyDates(val *SearchCompanyDataTypeCompanyDates) *NullableSearchCompanyDataTypeCompanyDates {
	return &NullableSearchCompanyDataTypeCompanyDates{value: val, isSet: true}
}

func (v NullableSearchCompanyDataTypeCompanyDates) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchCompanyDataTypeCompanyDates) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


