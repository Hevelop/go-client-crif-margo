/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
)

// checks if the DomainType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DomainType{}

// DomainType struct for DomainType
type DomainType struct {
	Code *string `json:"code,omitempty"`
	Text *string `json:"text,omitempty"`
}

// NewDomainType instantiates a new DomainType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainType() *DomainType {
	this := DomainType{}
	return &this
}

// NewDomainTypeWithDefaults instantiates a new DomainType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainTypeWithDefaults() *DomainType {
	this := DomainType{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *DomainType) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainType) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *DomainType) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *DomainType) SetCode(v string) {
	o.Code = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *DomainType) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainType) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *DomainType) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *DomainType) SetText(v string) {
	o.Text = &v
}

func (o DomainType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DomainType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	return toSerialize, nil
}

type NullableDomainType struct {
	value *DomainType
	isSet bool
}

func (v NullableDomainType) Get() *DomainType {
	return v.value
}

func (v *NullableDomainType) Set(val *DomainType) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainType) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainType(val *DomainType) *NullableDomainType {
	return &NullableDomainType{value: val, isSet: true}
}

func (v NullableDomainType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


