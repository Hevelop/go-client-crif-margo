/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
)

// checks if the PortfolioFiltersType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortfolioFiltersType{}

// PortfolioFiltersType The portfolioFilters contains all portfolio's filter parameters associated to the companies that it contains.  Each key in the object identify the fields created using the method **POST /portfolios/{portfolioId}/companies/_**.
type PortfolioFiltersType struct {
	Amount *PortfolioFiltersTypeAmount `json:"amount,omitempty"`
	AreaManagers []string `json:"areaManagers,omitempty"`
	Sales []string `json:"sales,omitempty"`
	Products []string `json:"products,omitempty"`
	Tags []string `json:"tags,omitempty"`
	CustomVariablesFilters *CustomVariablesFiltersType `json:"customVariablesFilters,omitempty"`
}

// NewPortfolioFiltersType instantiates a new PortfolioFiltersType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortfolioFiltersType() *PortfolioFiltersType {
	this := PortfolioFiltersType{}
	return &this
}

// NewPortfolioFiltersTypeWithDefaults instantiates a new PortfolioFiltersType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortfolioFiltersTypeWithDefaults() *PortfolioFiltersType {
	this := PortfolioFiltersType{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *PortfolioFiltersType) GetAmount() PortfolioFiltersTypeAmount {
	if o == nil || IsNil(o.Amount) {
		var ret PortfolioFiltersTypeAmount
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioFiltersType) GetAmountOk() (*PortfolioFiltersTypeAmount, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *PortfolioFiltersType) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given PortfolioFiltersTypeAmount and assigns it to the Amount field.
func (o *PortfolioFiltersType) SetAmount(v PortfolioFiltersTypeAmount) {
	o.Amount = &v
}

// GetAreaManagers returns the AreaManagers field value if set, zero value otherwise.
func (o *PortfolioFiltersType) GetAreaManagers() []string {
	if o == nil || IsNil(o.AreaManagers) {
		var ret []string
		return ret
	}
	return o.AreaManagers
}

// GetAreaManagersOk returns a tuple with the AreaManagers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioFiltersType) GetAreaManagersOk() ([]string, bool) {
	if o == nil || IsNil(o.AreaManagers) {
		return nil, false
	}
	return o.AreaManagers, true
}

// HasAreaManagers returns a boolean if a field has been set.
func (o *PortfolioFiltersType) HasAreaManagers() bool {
	if o != nil && !IsNil(o.AreaManagers) {
		return true
	}

	return false
}

// SetAreaManagers gets a reference to the given []string and assigns it to the AreaManagers field.
func (o *PortfolioFiltersType) SetAreaManagers(v []string) {
	o.AreaManagers = v
}

// GetSales returns the Sales field value if set, zero value otherwise.
func (o *PortfolioFiltersType) GetSales() []string {
	if o == nil || IsNil(o.Sales) {
		var ret []string
		return ret
	}
	return o.Sales
}

// GetSalesOk returns a tuple with the Sales field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioFiltersType) GetSalesOk() ([]string, bool) {
	if o == nil || IsNil(o.Sales) {
		return nil, false
	}
	return o.Sales, true
}

// HasSales returns a boolean if a field has been set.
func (o *PortfolioFiltersType) HasSales() bool {
	if o != nil && !IsNil(o.Sales) {
		return true
	}

	return false
}

// SetSales gets a reference to the given []string and assigns it to the Sales field.
func (o *PortfolioFiltersType) SetSales(v []string) {
	o.Sales = v
}

// GetProducts returns the Products field value if set, zero value otherwise.
func (o *PortfolioFiltersType) GetProducts() []string {
	if o == nil || IsNil(o.Products) {
		var ret []string
		return ret
	}
	return o.Products
}

// GetProductsOk returns a tuple with the Products field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioFiltersType) GetProductsOk() ([]string, bool) {
	if o == nil || IsNil(o.Products) {
		return nil, false
	}
	return o.Products, true
}

// HasProducts returns a boolean if a field has been set.
func (o *PortfolioFiltersType) HasProducts() bool {
	if o != nil && !IsNil(o.Products) {
		return true
	}

	return false
}

// SetProducts gets a reference to the given []string and assigns it to the Products field.
func (o *PortfolioFiltersType) SetProducts(v []string) {
	o.Products = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PortfolioFiltersType) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioFiltersType) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PortfolioFiltersType) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *PortfolioFiltersType) SetTags(v []string) {
	o.Tags = v
}

// GetCustomVariablesFilters returns the CustomVariablesFilters field value if set, zero value otherwise.
func (o *PortfolioFiltersType) GetCustomVariablesFilters() CustomVariablesFiltersType {
	if o == nil || IsNil(o.CustomVariablesFilters) {
		var ret CustomVariablesFiltersType
		return ret
	}
	return *o.CustomVariablesFilters
}

// GetCustomVariablesFiltersOk returns a tuple with the CustomVariablesFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortfolioFiltersType) GetCustomVariablesFiltersOk() (*CustomVariablesFiltersType, bool) {
	if o == nil || IsNil(o.CustomVariablesFilters) {
		return nil, false
	}
	return o.CustomVariablesFilters, true
}

// HasCustomVariablesFilters returns a boolean if a field has been set.
func (o *PortfolioFiltersType) HasCustomVariablesFilters() bool {
	if o != nil && !IsNil(o.CustomVariablesFilters) {
		return true
	}

	return false
}

// SetCustomVariablesFilters gets a reference to the given CustomVariablesFiltersType and assigns it to the CustomVariablesFilters field.
func (o *PortfolioFiltersType) SetCustomVariablesFilters(v CustomVariablesFiltersType) {
	o.CustomVariablesFilters = &v
}

func (o PortfolioFiltersType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortfolioFiltersType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.AreaManagers) {
		toSerialize["areaManagers"] = o.AreaManagers
	}
	if !IsNil(o.Sales) {
		toSerialize["sales"] = o.Sales
	}
	if !IsNil(o.Products) {
		toSerialize["products"] = o.Products
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.CustomVariablesFilters) {
		toSerialize["customVariablesFilters"] = o.CustomVariablesFilters
	}
	return toSerialize, nil
}

type NullablePortfolioFiltersType struct {
	value *PortfolioFiltersType
	isSet bool
}

func (v NullablePortfolioFiltersType) Get() *PortfolioFiltersType {
	return v.value
}

func (v *NullablePortfolioFiltersType) Set(val *PortfolioFiltersType) {
	v.value = val
	v.isSet = true
}

func (v NullablePortfolioFiltersType) IsSet() bool {
	return v.isSet
}

func (v *NullablePortfolioFiltersType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortfolioFiltersType(val *PortfolioFiltersType) *NullablePortfolioFiltersType {
	return &NullablePortfolioFiltersType{value: val, isSet: true}
}

func (v NullablePortfolioFiltersType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortfolioFiltersType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


