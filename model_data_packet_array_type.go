/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
)

// checks if the DataPacketArrayType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataPacketArrayType{}

// DataPacketArrayType struct for DataPacketArrayType
type DataPacketArrayType struct {
	DataPacketList []string `json:"dataPacketList,omitempty"`
}

// NewDataPacketArrayType instantiates a new DataPacketArrayType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataPacketArrayType() *DataPacketArrayType {
	this := DataPacketArrayType{}
	return &this
}

// NewDataPacketArrayTypeWithDefaults instantiates a new DataPacketArrayType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataPacketArrayTypeWithDefaults() *DataPacketArrayType {
	this := DataPacketArrayType{}
	return &this
}

// GetDataPacketList returns the DataPacketList field value if set, zero value otherwise.
func (o *DataPacketArrayType) GetDataPacketList() []string {
	if o == nil || IsNil(o.DataPacketList) {
		var ret []string
		return ret
	}
	return o.DataPacketList
}

// GetDataPacketListOk returns a tuple with the DataPacketList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataPacketArrayType) GetDataPacketListOk() ([]string, bool) {
	if o == nil || IsNil(o.DataPacketList) {
		return nil, false
	}
	return o.DataPacketList, true
}

// HasDataPacketList returns a boolean if a field has been set.
func (o *DataPacketArrayType) HasDataPacketList() bool {
	if o != nil && !IsNil(o.DataPacketList) {
		return true
	}

	return false
}

// SetDataPacketList gets a reference to the given []string and assigns it to the DataPacketList field.
func (o *DataPacketArrayType) SetDataPacketList(v []string) {
	o.DataPacketList = v
}

func (o DataPacketArrayType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataPacketArrayType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DataPacketList) {
		toSerialize["dataPacketList"] = o.DataPacketList
	}
	return toSerialize, nil
}

type NullableDataPacketArrayType struct {
	value *DataPacketArrayType
	isSet bool
}

func (v NullableDataPacketArrayType) Get() *DataPacketArrayType {
	return v.value
}

func (v *NullableDataPacketArrayType) Set(val *DataPacketArrayType) {
	v.value = val
	v.isSet = true
}

func (v NullableDataPacketArrayType) IsSet() bool {
	return v.isSet
}

func (v *NullableDataPacketArrayType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataPacketArrayType(val *DataPacketArrayType) *NullableDataPacketArrayType {
	return &NullableDataPacketArrayType{value: val, isSet: true}
}

func (v NullableDataPacketArrayType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataPacketArrayType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


