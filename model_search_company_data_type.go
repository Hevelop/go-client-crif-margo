/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
)

// checks if the SearchCompanyDataType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchCompanyDataType{}

// SearchCompanyDataType struct for SearchCompanyDataType
type SearchCompanyDataType struct {
	IdentificationCode *string `json:"identificationCode,omitempty"`
	CrifNumber *string `json:"crifNumber,omitempty"`
	CompanyUnitId *string `json:"companyUnitId,omitempty"`
	PortfolioAssociated []string `json:"portfolioAssociated,omitempty"`
	CompanyName *string `json:"companyName,omitempty"`
	Town *string `json:"town,omitempty"`
	Ateco *SearchCompanyDataTypeAteco `json:"ateco,omitempty"`
	OfficeType *SearchCompanyDataTypeOfficeType `json:"officeType,omitempty"`
	CompanyDetails *SearchCompanyDataTypeCompanyDetails `json:"companyDetails,omitempty"`
	LegalForm *SearchCompanyDataTypeLegalForm `json:"legalForm,omitempty"`
	CompanyStatus *SearchCompanyDataTypeCompanyStatus `json:"companyStatus,omitempty"`
	CompanyDates *SearchCompanyDataTypeCompanyDates `json:"companyDates,omitempty"`
	Address *SearchCompanyDataTypeAddress `json:"address,omitempty"`
	IstatTownCode *SearchCompanyDataTypeIstatTownCode `json:"istatTownCode,omitempty"`
	GeoCoordinates *SearchCompanyDataTypeGeoCoordinates `json:"geoCoordinates,omitempty"`
	Marketable *SearchCompanyDataTypeMarketable `json:"marketable,omitempty"`
	Branches *SearchCompanyDataTypeBranches `json:"branches,omitempty"`
	AtecoClassification *SearchCompanyDataTypeAtecoClassification `json:"atecoClassification,omitempty"`
	InternationalClassification *SearchCompanyDataTypeInternationalClassification `json:"internationalClassification,omitempty"`
	Ecofin *SearchCompanyDataTypeEcofin `json:"ecofin,omitempty"`
	OperatingResults *SearchCompanyDataTypeOperatingResults `json:"operatingResults,omitempty"`
	Employees *SearchCompanyDataTypeEmployees `json:"employees,omitempty"`
	EmployeesStatistic *SearchCompanyDataTypeEmployeesStatistic `json:"employeesStatistic,omitempty"`
	Mail *SearchCompanyDataTypeMail `json:"mail,omitempty"`
	Pec *string `json:"pec,omitempty"`
	Contacts *SearchCompanyDataTypeContacts `json:"contacts,omitempty"`
	WebAndSocial *SearchCompanyDataTypeWebAndSocial `json:"webAndSocial,omitempty"`
	StateOwned *SearchCompanyDataTypeStateOwned `json:"stateOwned,omitempty"`
	StateOwnedTelco *SearchCompanyDataTypeStateOwnedTelco `json:"stateOwnedTelco,omitempty"`
	PublicTenders []SearchCompanyDataTypePublicTendersInner `json:"publicTenders,omitempty"`
	ForeignTrade *SearchCompanyDataTypeForeignTrade `json:"foreignTrade,omitempty"`
	InnovativeSmeAndSu *SearchCompanyDataTypeInnovativeSmeAndSu `json:"innovativeSmeAndSu,omitempty"`
	Managers []SearchCompanyDataTypeManagersInner `json:"managers,omitempty"`
	ShareholdersInfo []SearchCompanyDataTypeShareholdersInfoInner `json:"shareholdersInfo,omitempty"`
	CorporateGroups *SearchCompanyDataTypeCorporateGroups `json:"corporateGroups,omitempty"`
	Subsidiaries []SearchCompanyDataTypeSubsidiariesInner `json:"subsidiaries,omitempty"`
	AffiliateCompanies []SearchCompanyDataTypeAffiliateCompaniesInner `json:"affiliateCompanies,omitempty"`
	ArtisanBusinessRegistry *SearchCompanyDataTypeArtisanBusinessRegistry `json:"artisanBusinessRegistry,omitempty"`
	SoaCertification *SearchCompanyDataTypeSoaCertification `json:"soaCertification,omitempty"`
	IsoCertifications []SearchCompanyDataTypeIsoCertificationsInner `json:"isoCertifications,omitempty"`
	FinancialCycle *SearchCompanyDataTypeFinancialCycle `json:"financialCycle,omitempty"`
	CoverageRatios *SearchCompanyDataTypeCoverageRatios `json:"coverageRatios,omitempty"`
	Efficiency *SearchCompanyDataTypeEfficiency `json:"efficiency,omitempty"`
	LeverageRatios *SearchCompanyDataTypeLeverageRatios `json:"leverageRatios,omitempty"`
	LiquidityRatios *SearchCompanyDataTypeLiquidityRatios `json:"liquidityRatios,omitempty"`
	Profitability *SearchCompanyDataTypeProfitability `json:"profitability,omitempty"`
	FinancialBurden *SearchCompanyDataTypeFinancialBurden `json:"financialBurden,omitempty"`
	Indebtedness *SearchCompanyDataTypeIndebtedness `json:"indebtedness,omitempty"`
	FinancialStability *SearchCompanyDataTypeFinancialStability `json:"financialStability,omitempty"`
	StructureRatios *SearchCompanyDataTypeStructureRatios `json:"structureRatios,omitempty"`
	Development *SearchCompanyDataTypeDevelopment `json:"development,omitempty"`
	FinancialStatementKpi *SearchCompanyDataTypeFinancialStatementKpi `json:"financialStatementKpi,omitempty"`
	TelcoAnalytics *SearchCompanyDataTypeTelcoAnalytics `json:"telcoAnalytics,omitempty"`
	Seasonality *SearchCompanyDataTypeSeasonality `json:"seasonality,omitempty"`
	CreditNeeds *SearchCompanyDataTypeCreditNeeds `json:"creditNeeds,omitempty"`
	CribisDnBRating *SearchCompanyDataTypeCribisDnBRating `json:"cribisDnBRating,omitempty"`
	FinancialStrenght *string `json:"financialStrenght,omitempty"`
	FailureScore *float32 `json:"failureScore,omitempty"`
	CribisDnBPaydex *float32 `json:"cribisDnBPaydex,omitempty"`
	DelinquencyScore *float32 `json:"delinquencyScore,omitempty"`
	CribisDnBCommercialCreditAppraisal *float32 `json:"cribisDnBCommercialCreditAppraisal,omitempty"`
	ItpRisk *float32 `json:"itpRisk,omitempty"`
	GovernanceRiskIndex *SearchCompanyDataTypeGovernanceRiskIndex `json:"governanceRiskIndex,omitempty"`
	CrifBusinessIndex *SearchCompanyDataTypeCrifBusinessIndex `json:"crifBusinessIndex,omitempty"`
	IndustryRating *SearchCompanyDataTypeCribisDnBRating `json:"industryRating,omitempty"`
	DelinquencySectorRating *float32 `json:"delinquencySectorRating,omitempty"`
	IndustryFailureScore *float32 `json:"industryFailureScore,omitempty"`
	IndustryPaydex *float32 `json:"industryPaydex,omitempty"`
	CribisScoreStateOwned *SearchCompanyDataTypeCribisScoreStateOwned `json:"cribisScoreStateOwned,omitempty"`
	FinancialEconomicScore *float32 `json:"financialEconomicScore,omitempty"`
	TerritorialScore *SearchCompanyDataTypeTerritorialScore `json:"territorialScore,omitempty"`
	SupplierScore *SearchCompanyDataTypeSupplierScore `json:"supplierScore,omitempty"`
	Utilities *SearchCompanyDataTypeUtilities `json:"utilities,omitempty"`
	RetailAnalytics *SearchCompanyDataTypeRetailAnalytics `json:"retailAnalytics,omitempty"`
	InternazionalizationScore *SearchCompanyDataTypeInternazionalizationScore `json:"internazionalizationScore,omitempty"`
	DigitalAttitudeScore *SearchCompanyDataTypeDigitalAttitudeScore `json:"digitalAttitudeScore,omitempty"`
	InnovationScore *SearchCompanyDataTypeInnovationScore `json:"innovationScore,omitempty"`
	EstimatedTurnover *float32 `json:"estimatedTurnover,omitempty"`
	CompanyIdentification *SearchCompanyDataTypeCompanyIdentification `json:"companyIdentification,omitempty"`
	InternationalIdentification *SearchCompanyDataTypeInternationalIdentification `json:"internationalIdentification,omitempty"`
	AffidabilityScore *SearchCompanyDataTypeAffidabilityScore `json:"affidabilityScore,omitempty"`
	SemanticCluster *SearchCompanyDataTypeSemanticCluster `json:"semanticCluster,omitempty"`
	AssetsAggregateValues []SearchCompanyDataTypeAssetsAggregateValuesInner `json:"assetsAggregateValues,omitempty"`
	CreditsToShareholders []SearchCompanyDataTypeAssetsAggregateValuesInner `json:"creditsToShareholders,omitempty"`
	IntangibleFixedAssets []SearchCompanyDataTypeAssetsAggregateValuesInner `json:"intangibleFixedAssets,omitempty"`
	TangibleFixedAssets []SearchCompanyDataTypeAssetsAggregateValuesInner `json:"tangibleFixedAssets,omitempty"`
	FinancialFixedAssets []SearchCompanyDataTypeAssetsAggregateValuesInner `json:"financialFixedAssets,omitempty"`
	Inventory []SearchCompanyDataTypeAssetsAggregateValuesInner `json:"inventory,omitempty"`
	Credits []SearchCompanyDataTypeAssetsAggregateValuesInner `json:"credits,omitempty"`
	FinancialAssets []SearchCompanyDataTypeAssetsAggregateValuesInner `json:"financialAssets,omitempty"`
	CashEquivalents []SearchCompanyDataTypeAssetsAggregateValuesInner `json:"cashEquivalents,omitempty"`
	LiabilitiesAggregateValues []SearchCompanyDataTypeAssetsAggregateValuesInner `json:"liabilitiesAggregateValues,omitempty"`
	NetWorth []SearchCompanyDataTypeAssetsAggregateValuesInner `json:"netWorth,omitempty"`
	RiskProvisions []SearchCompanyDataTypeAssetsAggregateValuesInner `json:"riskProvisions,omitempty"`
	Debts []SearchCompanyDataTypeAssetsAggregateValuesInner `json:"debts,omitempty"`
	IncomeStatementAggregateValues []SearchCompanyDataTypeAssetsAggregateValuesInner `json:"incomeStatementAggregateValues,omitempty"`
	ProductionValue []SearchCompanyDataTypeAssetsAggregateValuesInner `json:"productionValue,omitempty"`
	ProductionCosts []SearchCompanyDataTypeAssetsAggregateValuesInner `json:"productionCosts,omitempty"`
	RevenuesFinancialCharges []SearchCompanyDataTypeAssetsAggregateValuesInner `json:"revenuesFinancialCharges,omitempty"`
	Adjustments []SearchCompanyDataTypeAssetsAggregateValuesInner `json:"adjustments,omitempty"`
	AnnualResult []SearchCompanyDataTypeAssetsAggregateValuesInner `json:"annualResult,omitempty"`
}

// NewSearchCompanyDataType instantiates a new SearchCompanyDataType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchCompanyDataType() *SearchCompanyDataType {
	this := SearchCompanyDataType{}
	return &this
}

// NewSearchCompanyDataTypeWithDefaults instantiates a new SearchCompanyDataType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchCompanyDataTypeWithDefaults() *SearchCompanyDataType {
	this := SearchCompanyDataType{}
	return &this
}

// GetIdentificationCode returns the IdentificationCode field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetIdentificationCode() string {
	if o == nil || IsNil(o.IdentificationCode) {
		var ret string
		return ret
	}
	return *o.IdentificationCode
}

// GetIdentificationCodeOk returns a tuple with the IdentificationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetIdentificationCodeOk() (*string, bool) {
	if o == nil || IsNil(o.IdentificationCode) {
		return nil, false
	}
	return o.IdentificationCode, true
}

// HasIdentificationCode returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasIdentificationCode() bool {
	if o != nil && !IsNil(o.IdentificationCode) {
		return true
	}

	return false
}

// SetIdentificationCode gets a reference to the given string and assigns it to the IdentificationCode field.
func (o *SearchCompanyDataType) SetIdentificationCode(v string) {
	o.IdentificationCode = &v
}

// GetCrifNumber returns the CrifNumber field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetCrifNumber() string {
	if o == nil || IsNil(o.CrifNumber) {
		var ret string
		return ret
	}
	return *o.CrifNumber
}

// GetCrifNumberOk returns a tuple with the CrifNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetCrifNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CrifNumber) {
		return nil, false
	}
	return o.CrifNumber, true
}

// HasCrifNumber returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasCrifNumber() bool {
	if o != nil && !IsNil(o.CrifNumber) {
		return true
	}

	return false
}

// SetCrifNumber gets a reference to the given string and assigns it to the CrifNumber field.
func (o *SearchCompanyDataType) SetCrifNumber(v string) {
	o.CrifNumber = &v
}

// GetCompanyUnitId returns the CompanyUnitId field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetCompanyUnitId() string {
	if o == nil || IsNil(o.CompanyUnitId) {
		var ret string
		return ret
	}
	return *o.CompanyUnitId
}

// GetCompanyUnitIdOk returns a tuple with the CompanyUnitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetCompanyUnitIdOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyUnitId) {
		return nil, false
	}
	return o.CompanyUnitId, true
}

// HasCompanyUnitId returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasCompanyUnitId() bool {
	if o != nil && !IsNil(o.CompanyUnitId) {
		return true
	}

	return false
}

// SetCompanyUnitId gets a reference to the given string and assigns it to the CompanyUnitId field.
func (o *SearchCompanyDataType) SetCompanyUnitId(v string) {
	o.CompanyUnitId = &v
}

// GetPortfolioAssociated returns the PortfolioAssociated field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetPortfolioAssociated() []string {
	if o == nil || IsNil(o.PortfolioAssociated) {
		var ret []string
		return ret
	}
	return o.PortfolioAssociated
}

// GetPortfolioAssociatedOk returns a tuple with the PortfolioAssociated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetPortfolioAssociatedOk() ([]string, bool) {
	if o == nil || IsNil(o.PortfolioAssociated) {
		return nil, false
	}
	return o.PortfolioAssociated, true
}

// HasPortfolioAssociated returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasPortfolioAssociated() bool {
	if o != nil && !IsNil(o.PortfolioAssociated) {
		return true
	}

	return false
}

// SetPortfolioAssociated gets a reference to the given []string and assigns it to the PortfolioAssociated field.
func (o *SearchCompanyDataType) SetPortfolioAssociated(v []string) {
	o.PortfolioAssociated = v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *SearchCompanyDataType) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetTown returns the Town field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetTown() string {
	if o == nil || IsNil(o.Town) {
		var ret string
		return ret
	}
	return *o.Town
}

// GetTownOk returns a tuple with the Town field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetTownOk() (*string, bool) {
	if o == nil || IsNil(o.Town) {
		return nil, false
	}
	return o.Town, true
}

// HasTown returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasTown() bool {
	if o != nil && !IsNil(o.Town) {
		return true
	}

	return false
}

// SetTown gets a reference to the given string and assigns it to the Town field.
func (o *SearchCompanyDataType) SetTown(v string) {
	o.Town = &v
}

// GetAteco returns the Ateco field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetAteco() SearchCompanyDataTypeAteco {
	if o == nil || IsNil(o.Ateco) {
		var ret SearchCompanyDataTypeAteco
		return ret
	}
	return *o.Ateco
}

// GetAtecoOk returns a tuple with the Ateco field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetAtecoOk() (*SearchCompanyDataTypeAteco, bool) {
	if o == nil || IsNil(o.Ateco) {
		return nil, false
	}
	return o.Ateco, true
}

// HasAteco returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasAteco() bool {
	if o != nil && !IsNil(o.Ateco) {
		return true
	}

	return false
}

// SetAteco gets a reference to the given SearchCompanyDataTypeAteco and assigns it to the Ateco field.
func (o *SearchCompanyDataType) SetAteco(v SearchCompanyDataTypeAteco) {
	o.Ateco = &v
}

// GetOfficeType returns the OfficeType field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetOfficeType() SearchCompanyDataTypeOfficeType {
	if o == nil || IsNil(o.OfficeType) {
		var ret SearchCompanyDataTypeOfficeType
		return ret
	}
	return *o.OfficeType
}

// GetOfficeTypeOk returns a tuple with the OfficeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetOfficeTypeOk() (*SearchCompanyDataTypeOfficeType, bool) {
	if o == nil || IsNil(o.OfficeType) {
		return nil, false
	}
	return o.OfficeType, true
}

// HasOfficeType returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasOfficeType() bool {
	if o != nil && !IsNil(o.OfficeType) {
		return true
	}

	return false
}

// SetOfficeType gets a reference to the given SearchCompanyDataTypeOfficeType and assigns it to the OfficeType field.
func (o *SearchCompanyDataType) SetOfficeType(v SearchCompanyDataTypeOfficeType) {
	o.OfficeType = &v
}

// GetCompanyDetails returns the CompanyDetails field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetCompanyDetails() SearchCompanyDataTypeCompanyDetails {
	if o == nil || IsNil(o.CompanyDetails) {
		var ret SearchCompanyDataTypeCompanyDetails
		return ret
	}
	return *o.CompanyDetails
}

// GetCompanyDetailsOk returns a tuple with the CompanyDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetCompanyDetailsOk() (*SearchCompanyDataTypeCompanyDetails, bool) {
	if o == nil || IsNil(o.CompanyDetails) {
		return nil, false
	}
	return o.CompanyDetails, true
}

// HasCompanyDetails returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasCompanyDetails() bool {
	if o != nil && !IsNil(o.CompanyDetails) {
		return true
	}

	return false
}

// SetCompanyDetails gets a reference to the given SearchCompanyDataTypeCompanyDetails and assigns it to the CompanyDetails field.
func (o *SearchCompanyDataType) SetCompanyDetails(v SearchCompanyDataTypeCompanyDetails) {
	o.CompanyDetails = &v
}

// GetLegalForm returns the LegalForm field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetLegalForm() SearchCompanyDataTypeLegalForm {
	if o == nil || IsNil(o.LegalForm) {
		var ret SearchCompanyDataTypeLegalForm
		return ret
	}
	return *o.LegalForm
}

// GetLegalFormOk returns a tuple with the LegalForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetLegalFormOk() (*SearchCompanyDataTypeLegalForm, bool) {
	if o == nil || IsNil(o.LegalForm) {
		return nil, false
	}
	return o.LegalForm, true
}

// HasLegalForm returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasLegalForm() bool {
	if o != nil && !IsNil(o.LegalForm) {
		return true
	}

	return false
}

// SetLegalForm gets a reference to the given SearchCompanyDataTypeLegalForm and assigns it to the LegalForm field.
func (o *SearchCompanyDataType) SetLegalForm(v SearchCompanyDataTypeLegalForm) {
	o.LegalForm = &v
}

// GetCompanyStatus returns the CompanyStatus field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetCompanyStatus() SearchCompanyDataTypeCompanyStatus {
	if o == nil || IsNil(o.CompanyStatus) {
		var ret SearchCompanyDataTypeCompanyStatus
		return ret
	}
	return *o.CompanyStatus
}

// GetCompanyStatusOk returns a tuple with the CompanyStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetCompanyStatusOk() (*SearchCompanyDataTypeCompanyStatus, bool) {
	if o == nil || IsNil(o.CompanyStatus) {
		return nil, false
	}
	return o.CompanyStatus, true
}

// HasCompanyStatus returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasCompanyStatus() bool {
	if o != nil && !IsNil(o.CompanyStatus) {
		return true
	}

	return false
}

// SetCompanyStatus gets a reference to the given SearchCompanyDataTypeCompanyStatus and assigns it to the CompanyStatus field.
func (o *SearchCompanyDataType) SetCompanyStatus(v SearchCompanyDataTypeCompanyStatus) {
	o.CompanyStatus = &v
}

// GetCompanyDates returns the CompanyDates field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetCompanyDates() SearchCompanyDataTypeCompanyDates {
	if o == nil || IsNil(o.CompanyDates) {
		var ret SearchCompanyDataTypeCompanyDates
		return ret
	}
	return *o.CompanyDates
}

// GetCompanyDatesOk returns a tuple with the CompanyDates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetCompanyDatesOk() (*SearchCompanyDataTypeCompanyDates, bool) {
	if o == nil || IsNil(o.CompanyDates) {
		return nil, false
	}
	return o.CompanyDates, true
}

// HasCompanyDates returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasCompanyDates() bool {
	if o != nil && !IsNil(o.CompanyDates) {
		return true
	}

	return false
}

// SetCompanyDates gets a reference to the given SearchCompanyDataTypeCompanyDates and assigns it to the CompanyDates field.
func (o *SearchCompanyDataType) SetCompanyDates(v SearchCompanyDataTypeCompanyDates) {
	o.CompanyDates = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetAddress() SearchCompanyDataTypeAddress {
	if o == nil || IsNil(o.Address) {
		var ret SearchCompanyDataTypeAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetAddressOk() (*SearchCompanyDataTypeAddress, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given SearchCompanyDataTypeAddress and assigns it to the Address field.
func (o *SearchCompanyDataType) SetAddress(v SearchCompanyDataTypeAddress) {
	o.Address = &v
}

// GetIstatTownCode returns the IstatTownCode field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetIstatTownCode() SearchCompanyDataTypeIstatTownCode {
	if o == nil || IsNil(o.IstatTownCode) {
		var ret SearchCompanyDataTypeIstatTownCode
		return ret
	}
	return *o.IstatTownCode
}

// GetIstatTownCodeOk returns a tuple with the IstatTownCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetIstatTownCodeOk() (*SearchCompanyDataTypeIstatTownCode, bool) {
	if o == nil || IsNil(o.IstatTownCode) {
		return nil, false
	}
	return o.IstatTownCode, true
}

// HasIstatTownCode returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasIstatTownCode() bool {
	if o != nil && !IsNil(o.IstatTownCode) {
		return true
	}

	return false
}

// SetIstatTownCode gets a reference to the given SearchCompanyDataTypeIstatTownCode and assigns it to the IstatTownCode field.
func (o *SearchCompanyDataType) SetIstatTownCode(v SearchCompanyDataTypeIstatTownCode) {
	o.IstatTownCode = &v
}

// GetGeoCoordinates returns the GeoCoordinates field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetGeoCoordinates() SearchCompanyDataTypeGeoCoordinates {
	if o == nil || IsNil(o.GeoCoordinates) {
		var ret SearchCompanyDataTypeGeoCoordinates
		return ret
	}
	return *o.GeoCoordinates
}

// GetGeoCoordinatesOk returns a tuple with the GeoCoordinates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetGeoCoordinatesOk() (*SearchCompanyDataTypeGeoCoordinates, bool) {
	if o == nil || IsNil(o.GeoCoordinates) {
		return nil, false
	}
	return o.GeoCoordinates, true
}

// HasGeoCoordinates returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasGeoCoordinates() bool {
	if o != nil && !IsNil(o.GeoCoordinates) {
		return true
	}

	return false
}

// SetGeoCoordinates gets a reference to the given SearchCompanyDataTypeGeoCoordinates and assigns it to the GeoCoordinates field.
func (o *SearchCompanyDataType) SetGeoCoordinates(v SearchCompanyDataTypeGeoCoordinates) {
	o.GeoCoordinates = &v
}

// GetMarketable returns the Marketable field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetMarketable() SearchCompanyDataTypeMarketable {
	if o == nil || IsNil(o.Marketable) {
		var ret SearchCompanyDataTypeMarketable
		return ret
	}
	return *o.Marketable
}

// GetMarketableOk returns a tuple with the Marketable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetMarketableOk() (*SearchCompanyDataTypeMarketable, bool) {
	if o == nil || IsNil(o.Marketable) {
		return nil, false
	}
	return o.Marketable, true
}

// HasMarketable returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasMarketable() bool {
	if o != nil && !IsNil(o.Marketable) {
		return true
	}

	return false
}

// SetMarketable gets a reference to the given SearchCompanyDataTypeMarketable and assigns it to the Marketable field.
func (o *SearchCompanyDataType) SetMarketable(v SearchCompanyDataTypeMarketable) {
	o.Marketable = &v
}

// GetBranches returns the Branches field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetBranches() SearchCompanyDataTypeBranches {
	if o == nil || IsNil(o.Branches) {
		var ret SearchCompanyDataTypeBranches
		return ret
	}
	return *o.Branches
}

// GetBranchesOk returns a tuple with the Branches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetBranchesOk() (*SearchCompanyDataTypeBranches, bool) {
	if o == nil || IsNil(o.Branches) {
		return nil, false
	}
	return o.Branches, true
}

// HasBranches returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasBranches() bool {
	if o != nil && !IsNil(o.Branches) {
		return true
	}

	return false
}

// SetBranches gets a reference to the given SearchCompanyDataTypeBranches and assigns it to the Branches field.
func (o *SearchCompanyDataType) SetBranches(v SearchCompanyDataTypeBranches) {
	o.Branches = &v
}

// GetAtecoClassification returns the AtecoClassification field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetAtecoClassification() SearchCompanyDataTypeAtecoClassification {
	if o == nil || IsNil(o.AtecoClassification) {
		var ret SearchCompanyDataTypeAtecoClassification
		return ret
	}
	return *o.AtecoClassification
}

// GetAtecoClassificationOk returns a tuple with the AtecoClassification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetAtecoClassificationOk() (*SearchCompanyDataTypeAtecoClassification, bool) {
	if o == nil || IsNil(o.AtecoClassification) {
		return nil, false
	}
	return o.AtecoClassification, true
}

// HasAtecoClassification returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasAtecoClassification() bool {
	if o != nil && !IsNil(o.AtecoClassification) {
		return true
	}

	return false
}

// SetAtecoClassification gets a reference to the given SearchCompanyDataTypeAtecoClassification and assigns it to the AtecoClassification field.
func (o *SearchCompanyDataType) SetAtecoClassification(v SearchCompanyDataTypeAtecoClassification) {
	o.AtecoClassification = &v
}

// GetInternationalClassification returns the InternationalClassification field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetInternationalClassification() SearchCompanyDataTypeInternationalClassification {
	if o == nil || IsNil(o.InternationalClassification) {
		var ret SearchCompanyDataTypeInternationalClassification
		return ret
	}
	return *o.InternationalClassification
}

// GetInternationalClassificationOk returns a tuple with the InternationalClassification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetInternationalClassificationOk() (*SearchCompanyDataTypeInternationalClassification, bool) {
	if o == nil || IsNil(o.InternationalClassification) {
		return nil, false
	}
	return o.InternationalClassification, true
}

// HasInternationalClassification returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasInternationalClassification() bool {
	if o != nil && !IsNil(o.InternationalClassification) {
		return true
	}

	return false
}

// SetInternationalClassification gets a reference to the given SearchCompanyDataTypeInternationalClassification and assigns it to the InternationalClassification field.
func (o *SearchCompanyDataType) SetInternationalClassification(v SearchCompanyDataTypeInternationalClassification) {
	o.InternationalClassification = &v
}

// GetEcofin returns the Ecofin field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetEcofin() SearchCompanyDataTypeEcofin {
	if o == nil || IsNil(o.Ecofin) {
		var ret SearchCompanyDataTypeEcofin
		return ret
	}
	return *o.Ecofin
}

// GetEcofinOk returns a tuple with the Ecofin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetEcofinOk() (*SearchCompanyDataTypeEcofin, bool) {
	if o == nil || IsNil(o.Ecofin) {
		return nil, false
	}
	return o.Ecofin, true
}

// HasEcofin returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasEcofin() bool {
	if o != nil && !IsNil(o.Ecofin) {
		return true
	}

	return false
}

// SetEcofin gets a reference to the given SearchCompanyDataTypeEcofin and assigns it to the Ecofin field.
func (o *SearchCompanyDataType) SetEcofin(v SearchCompanyDataTypeEcofin) {
	o.Ecofin = &v
}

// GetOperatingResults returns the OperatingResults field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetOperatingResults() SearchCompanyDataTypeOperatingResults {
	if o == nil || IsNil(o.OperatingResults) {
		var ret SearchCompanyDataTypeOperatingResults
		return ret
	}
	return *o.OperatingResults
}

// GetOperatingResultsOk returns a tuple with the OperatingResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetOperatingResultsOk() (*SearchCompanyDataTypeOperatingResults, bool) {
	if o == nil || IsNil(o.OperatingResults) {
		return nil, false
	}
	return o.OperatingResults, true
}

// HasOperatingResults returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasOperatingResults() bool {
	if o != nil && !IsNil(o.OperatingResults) {
		return true
	}

	return false
}

// SetOperatingResults gets a reference to the given SearchCompanyDataTypeOperatingResults and assigns it to the OperatingResults field.
func (o *SearchCompanyDataType) SetOperatingResults(v SearchCompanyDataTypeOperatingResults) {
	o.OperatingResults = &v
}

// GetEmployees returns the Employees field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetEmployees() SearchCompanyDataTypeEmployees {
	if o == nil || IsNil(o.Employees) {
		var ret SearchCompanyDataTypeEmployees
		return ret
	}
	return *o.Employees
}

// GetEmployeesOk returns a tuple with the Employees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetEmployeesOk() (*SearchCompanyDataTypeEmployees, bool) {
	if o == nil || IsNil(o.Employees) {
		return nil, false
	}
	return o.Employees, true
}

// HasEmployees returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasEmployees() bool {
	if o != nil && !IsNil(o.Employees) {
		return true
	}

	return false
}

// SetEmployees gets a reference to the given SearchCompanyDataTypeEmployees and assigns it to the Employees field.
func (o *SearchCompanyDataType) SetEmployees(v SearchCompanyDataTypeEmployees) {
	o.Employees = &v
}

// GetEmployeesStatistic returns the EmployeesStatistic field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetEmployeesStatistic() SearchCompanyDataTypeEmployeesStatistic {
	if o == nil || IsNil(o.EmployeesStatistic) {
		var ret SearchCompanyDataTypeEmployeesStatistic
		return ret
	}
	return *o.EmployeesStatistic
}

// GetEmployeesStatisticOk returns a tuple with the EmployeesStatistic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetEmployeesStatisticOk() (*SearchCompanyDataTypeEmployeesStatistic, bool) {
	if o == nil || IsNil(o.EmployeesStatistic) {
		return nil, false
	}
	return o.EmployeesStatistic, true
}

// HasEmployeesStatistic returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasEmployeesStatistic() bool {
	if o != nil && !IsNil(o.EmployeesStatistic) {
		return true
	}

	return false
}

// SetEmployeesStatistic gets a reference to the given SearchCompanyDataTypeEmployeesStatistic and assigns it to the EmployeesStatistic field.
func (o *SearchCompanyDataType) SetEmployeesStatistic(v SearchCompanyDataTypeEmployeesStatistic) {
	o.EmployeesStatistic = &v
}

// GetMail returns the Mail field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetMail() SearchCompanyDataTypeMail {
	if o == nil || IsNil(o.Mail) {
		var ret SearchCompanyDataTypeMail
		return ret
	}
	return *o.Mail
}

// GetMailOk returns a tuple with the Mail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetMailOk() (*SearchCompanyDataTypeMail, bool) {
	if o == nil || IsNil(o.Mail) {
		return nil, false
	}
	return o.Mail, true
}

// HasMail returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasMail() bool {
	if o != nil && !IsNil(o.Mail) {
		return true
	}

	return false
}

// SetMail gets a reference to the given SearchCompanyDataTypeMail and assigns it to the Mail field.
func (o *SearchCompanyDataType) SetMail(v SearchCompanyDataTypeMail) {
	o.Mail = &v
}

// GetPec returns the Pec field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetPec() string {
	if o == nil || IsNil(o.Pec) {
		var ret string
		return ret
	}
	return *o.Pec
}

// GetPecOk returns a tuple with the Pec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetPecOk() (*string, bool) {
	if o == nil || IsNil(o.Pec) {
		return nil, false
	}
	return o.Pec, true
}

// HasPec returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasPec() bool {
	if o != nil && !IsNil(o.Pec) {
		return true
	}

	return false
}

// SetPec gets a reference to the given string and assigns it to the Pec field.
func (o *SearchCompanyDataType) SetPec(v string) {
	o.Pec = &v
}

// GetContacts returns the Contacts field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetContacts() SearchCompanyDataTypeContacts {
	if o == nil || IsNil(o.Contacts) {
		var ret SearchCompanyDataTypeContacts
		return ret
	}
	return *o.Contacts
}

// GetContactsOk returns a tuple with the Contacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetContactsOk() (*SearchCompanyDataTypeContacts, bool) {
	if o == nil || IsNil(o.Contacts) {
		return nil, false
	}
	return o.Contacts, true
}

// HasContacts returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasContacts() bool {
	if o != nil && !IsNil(o.Contacts) {
		return true
	}

	return false
}

// SetContacts gets a reference to the given SearchCompanyDataTypeContacts and assigns it to the Contacts field.
func (o *SearchCompanyDataType) SetContacts(v SearchCompanyDataTypeContacts) {
	o.Contacts = &v
}

// GetWebAndSocial returns the WebAndSocial field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetWebAndSocial() SearchCompanyDataTypeWebAndSocial {
	if o == nil || IsNil(o.WebAndSocial) {
		var ret SearchCompanyDataTypeWebAndSocial
		return ret
	}
	return *o.WebAndSocial
}

// GetWebAndSocialOk returns a tuple with the WebAndSocial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetWebAndSocialOk() (*SearchCompanyDataTypeWebAndSocial, bool) {
	if o == nil || IsNil(o.WebAndSocial) {
		return nil, false
	}
	return o.WebAndSocial, true
}

// HasWebAndSocial returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasWebAndSocial() bool {
	if o != nil && !IsNil(o.WebAndSocial) {
		return true
	}

	return false
}

// SetWebAndSocial gets a reference to the given SearchCompanyDataTypeWebAndSocial and assigns it to the WebAndSocial field.
func (o *SearchCompanyDataType) SetWebAndSocial(v SearchCompanyDataTypeWebAndSocial) {
	o.WebAndSocial = &v
}

// GetStateOwned returns the StateOwned field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetStateOwned() SearchCompanyDataTypeStateOwned {
	if o == nil || IsNil(o.StateOwned) {
		var ret SearchCompanyDataTypeStateOwned
		return ret
	}
	return *o.StateOwned
}

// GetStateOwnedOk returns a tuple with the StateOwned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetStateOwnedOk() (*SearchCompanyDataTypeStateOwned, bool) {
	if o == nil || IsNil(o.StateOwned) {
		return nil, false
	}
	return o.StateOwned, true
}

// HasStateOwned returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasStateOwned() bool {
	if o != nil && !IsNil(o.StateOwned) {
		return true
	}

	return false
}

// SetStateOwned gets a reference to the given SearchCompanyDataTypeStateOwned and assigns it to the StateOwned field.
func (o *SearchCompanyDataType) SetStateOwned(v SearchCompanyDataTypeStateOwned) {
	o.StateOwned = &v
}

// GetStateOwnedTelco returns the StateOwnedTelco field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetStateOwnedTelco() SearchCompanyDataTypeStateOwnedTelco {
	if o == nil || IsNil(o.StateOwnedTelco) {
		var ret SearchCompanyDataTypeStateOwnedTelco
		return ret
	}
	return *o.StateOwnedTelco
}

// GetStateOwnedTelcoOk returns a tuple with the StateOwnedTelco field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetStateOwnedTelcoOk() (*SearchCompanyDataTypeStateOwnedTelco, bool) {
	if o == nil || IsNil(o.StateOwnedTelco) {
		return nil, false
	}
	return o.StateOwnedTelco, true
}

// HasStateOwnedTelco returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasStateOwnedTelco() bool {
	if o != nil && !IsNil(o.StateOwnedTelco) {
		return true
	}

	return false
}

// SetStateOwnedTelco gets a reference to the given SearchCompanyDataTypeStateOwnedTelco and assigns it to the StateOwnedTelco field.
func (o *SearchCompanyDataType) SetStateOwnedTelco(v SearchCompanyDataTypeStateOwnedTelco) {
	o.StateOwnedTelco = &v
}

// GetPublicTenders returns the PublicTenders field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetPublicTenders() []SearchCompanyDataTypePublicTendersInner {
	if o == nil || IsNil(o.PublicTenders) {
		var ret []SearchCompanyDataTypePublicTendersInner
		return ret
	}
	return o.PublicTenders
}

// GetPublicTendersOk returns a tuple with the PublicTenders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetPublicTendersOk() ([]SearchCompanyDataTypePublicTendersInner, bool) {
	if o == nil || IsNil(o.PublicTenders) {
		return nil, false
	}
	return o.PublicTenders, true
}

// HasPublicTenders returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasPublicTenders() bool {
	if o != nil && !IsNil(o.PublicTenders) {
		return true
	}

	return false
}

// SetPublicTenders gets a reference to the given []SearchCompanyDataTypePublicTendersInner and assigns it to the PublicTenders field.
func (o *SearchCompanyDataType) SetPublicTenders(v []SearchCompanyDataTypePublicTendersInner) {
	o.PublicTenders = v
}

// GetForeignTrade returns the ForeignTrade field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetForeignTrade() SearchCompanyDataTypeForeignTrade {
	if o == nil || IsNil(o.ForeignTrade) {
		var ret SearchCompanyDataTypeForeignTrade
		return ret
	}
	return *o.ForeignTrade
}

// GetForeignTradeOk returns a tuple with the ForeignTrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetForeignTradeOk() (*SearchCompanyDataTypeForeignTrade, bool) {
	if o == nil || IsNil(o.ForeignTrade) {
		return nil, false
	}
	return o.ForeignTrade, true
}

// HasForeignTrade returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasForeignTrade() bool {
	if o != nil && !IsNil(o.ForeignTrade) {
		return true
	}

	return false
}

// SetForeignTrade gets a reference to the given SearchCompanyDataTypeForeignTrade and assigns it to the ForeignTrade field.
func (o *SearchCompanyDataType) SetForeignTrade(v SearchCompanyDataTypeForeignTrade) {
	o.ForeignTrade = &v
}

// GetInnovativeSmeAndSu returns the InnovativeSmeAndSu field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetInnovativeSmeAndSu() SearchCompanyDataTypeInnovativeSmeAndSu {
	if o == nil || IsNil(o.InnovativeSmeAndSu) {
		var ret SearchCompanyDataTypeInnovativeSmeAndSu
		return ret
	}
	return *o.InnovativeSmeAndSu
}

// GetInnovativeSmeAndSuOk returns a tuple with the InnovativeSmeAndSu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetInnovativeSmeAndSuOk() (*SearchCompanyDataTypeInnovativeSmeAndSu, bool) {
	if o == nil || IsNil(o.InnovativeSmeAndSu) {
		return nil, false
	}
	return o.InnovativeSmeAndSu, true
}

// HasInnovativeSmeAndSu returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasInnovativeSmeAndSu() bool {
	if o != nil && !IsNil(o.InnovativeSmeAndSu) {
		return true
	}

	return false
}

// SetInnovativeSmeAndSu gets a reference to the given SearchCompanyDataTypeInnovativeSmeAndSu and assigns it to the InnovativeSmeAndSu field.
func (o *SearchCompanyDataType) SetInnovativeSmeAndSu(v SearchCompanyDataTypeInnovativeSmeAndSu) {
	o.InnovativeSmeAndSu = &v
}

// GetManagers returns the Managers field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetManagers() []SearchCompanyDataTypeManagersInner {
	if o == nil || IsNil(o.Managers) {
		var ret []SearchCompanyDataTypeManagersInner
		return ret
	}
	return o.Managers
}

// GetManagersOk returns a tuple with the Managers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetManagersOk() ([]SearchCompanyDataTypeManagersInner, bool) {
	if o == nil || IsNil(o.Managers) {
		return nil, false
	}
	return o.Managers, true
}

// HasManagers returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasManagers() bool {
	if o != nil && !IsNil(o.Managers) {
		return true
	}

	return false
}

// SetManagers gets a reference to the given []SearchCompanyDataTypeManagersInner and assigns it to the Managers field.
func (o *SearchCompanyDataType) SetManagers(v []SearchCompanyDataTypeManagersInner) {
	o.Managers = v
}

// GetShareholdersInfo returns the ShareholdersInfo field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetShareholdersInfo() []SearchCompanyDataTypeShareholdersInfoInner {
	if o == nil || IsNil(o.ShareholdersInfo) {
		var ret []SearchCompanyDataTypeShareholdersInfoInner
		return ret
	}
	return o.ShareholdersInfo
}

// GetShareholdersInfoOk returns a tuple with the ShareholdersInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetShareholdersInfoOk() ([]SearchCompanyDataTypeShareholdersInfoInner, bool) {
	if o == nil || IsNil(o.ShareholdersInfo) {
		return nil, false
	}
	return o.ShareholdersInfo, true
}

// HasShareholdersInfo returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasShareholdersInfo() bool {
	if o != nil && !IsNil(o.ShareholdersInfo) {
		return true
	}

	return false
}

// SetShareholdersInfo gets a reference to the given []SearchCompanyDataTypeShareholdersInfoInner and assigns it to the ShareholdersInfo field.
func (o *SearchCompanyDataType) SetShareholdersInfo(v []SearchCompanyDataTypeShareholdersInfoInner) {
	o.ShareholdersInfo = v
}

// GetCorporateGroups returns the CorporateGroups field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetCorporateGroups() SearchCompanyDataTypeCorporateGroups {
	if o == nil || IsNil(o.CorporateGroups) {
		var ret SearchCompanyDataTypeCorporateGroups
		return ret
	}
	return *o.CorporateGroups
}

// GetCorporateGroupsOk returns a tuple with the CorporateGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetCorporateGroupsOk() (*SearchCompanyDataTypeCorporateGroups, bool) {
	if o == nil || IsNil(o.CorporateGroups) {
		return nil, false
	}
	return o.CorporateGroups, true
}

// HasCorporateGroups returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasCorporateGroups() bool {
	if o != nil && !IsNil(o.CorporateGroups) {
		return true
	}

	return false
}

// SetCorporateGroups gets a reference to the given SearchCompanyDataTypeCorporateGroups and assigns it to the CorporateGroups field.
func (o *SearchCompanyDataType) SetCorporateGroups(v SearchCompanyDataTypeCorporateGroups) {
	o.CorporateGroups = &v
}

// GetSubsidiaries returns the Subsidiaries field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetSubsidiaries() []SearchCompanyDataTypeSubsidiariesInner {
	if o == nil || IsNil(o.Subsidiaries) {
		var ret []SearchCompanyDataTypeSubsidiariesInner
		return ret
	}
	return o.Subsidiaries
}

// GetSubsidiariesOk returns a tuple with the Subsidiaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetSubsidiariesOk() ([]SearchCompanyDataTypeSubsidiariesInner, bool) {
	if o == nil || IsNil(o.Subsidiaries) {
		return nil, false
	}
	return o.Subsidiaries, true
}

// HasSubsidiaries returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasSubsidiaries() bool {
	if o != nil && !IsNil(o.Subsidiaries) {
		return true
	}

	return false
}

// SetSubsidiaries gets a reference to the given []SearchCompanyDataTypeSubsidiariesInner and assigns it to the Subsidiaries field.
func (o *SearchCompanyDataType) SetSubsidiaries(v []SearchCompanyDataTypeSubsidiariesInner) {
	o.Subsidiaries = v
}

// GetAffiliateCompanies returns the AffiliateCompanies field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetAffiliateCompanies() []SearchCompanyDataTypeAffiliateCompaniesInner {
	if o == nil || IsNil(o.AffiliateCompanies) {
		var ret []SearchCompanyDataTypeAffiliateCompaniesInner
		return ret
	}
	return o.AffiliateCompanies
}

// GetAffiliateCompaniesOk returns a tuple with the AffiliateCompanies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetAffiliateCompaniesOk() ([]SearchCompanyDataTypeAffiliateCompaniesInner, bool) {
	if o == nil || IsNil(o.AffiliateCompanies) {
		return nil, false
	}
	return o.AffiliateCompanies, true
}

// HasAffiliateCompanies returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasAffiliateCompanies() bool {
	if o != nil && !IsNil(o.AffiliateCompanies) {
		return true
	}

	return false
}

// SetAffiliateCompanies gets a reference to the given []SearchCompanyDataTypeAffiliateCompaniesInner and assigns it to the AffiliateCompanies field.
func (o *SearchCompanyDataType) SetAffiliateCompanies(v []SearchCompanyDataTypeAffiliateCompaniesInner) {
	o.AffiliateCompanies = v
}

// GetArtisanBusinessRegistry returns the ArtisanBusinessRegistry field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetArtisanBusinessRegistry() SearchCompanyDataTypeArtisanBusinessRegistry {
	if o == nil || IsNil(o.ArtisanBusinessRegistry) {
		var ret SearchCompanyDataTypeArtisanBusinessRegistry
		return ret
	}
	return *o.ArtisanBusinessRegistry
}

// GetArtisanBusinessRegistryOk returns a tuple with the ArtisanBusinessRegistry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetArtisanBusinessRegistryOk() (*SearchCompanyDataTypeArtisanBusinessRegistry, bool) {
	if o == nil || IsNil(o.ArtisanBusinessRegistry) {
		return nil, false
	}
	return o.ArtisanBusinessRegistry, true
}

// HasArtisanBusinessRegistry returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasArtisanBusinessRegistry() bool {
	if o != nil && !IsNil(o.ArtisanBusinessRegistry) {
		return true
	}

	return false
}

// SetArtisanBusinessRegistry gets a reference to the given SearchCompanyDataTypeArtisanBusinessRegistry and assigns it to the ArtisanBusinessRegistry field.
func (o *SearchCompanyDataType) SetArtisanBusinessRegistry(v SearchCompanyDataTypeArtisanBusinessRegistry) {
	o.ArtisanBusinessRegistry = &v
}

// GetSoaCertification returns the SoaCertification field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetSoaCertification() SearchCompanyDataTypeSoaCertification {
	if o == nil || IsNil(o.SoaCertification) {
		var ret SearchCompanyDataTypeSoaCertification
		return ret
	}
	return *o.SoaCertification
}

// GetSoaCertificationOk returns a tuple with the SoaCertification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetSoaCertificationOk() (*SearchCompanyDataTypeSoaCertification, bool) {
	if o == nil || IsNil(o.SoaCertification) {
		return nil, false
	}
	return o.SoaCertification, true
}

// HasSoaCertification returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasSoaCertification() bool {
	if o != nil && !IsNil(o.SoaCertification) {
		return true
	}

	return false
}

// SetSoaCertification gets a reference to the given SearchCompanyDataTypeSoaCertification and assigns it to the SoaCertification field.
func (o *SearchCompanyDataType) SetSoaCertification(v SearchCompanyDataTypeSoaCertification) {
	o.SoaCertification = &v
}

// GetIsoCertifications returns the IsoCertifications field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetIsoCertifications() []SearchCompanyDataTypeIsoCertificationsInner {
	if o == nil || IsNil(o.IsoCertifications) {
		var ret []SearchCompanyDataTypeIsoCertificationsInner
		return ret
	}
	return o.IsoCertifications
}

// GetIsoCertificationsOk returns a tuple with the IsoCertifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetIsoCertificationsOk() ([]SearchCompanyDataTypeIsoCertificationsInner, bool) {
	if o == nil || IsNil(o.IsoCertifications) {
		return nil, false
	}
	return o.IsoCertifications, true
}

// HasIsoCertifications returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasIsoCertifications() bool {
	if o != nil && !IsNil(o.IsoCertifications) {
		return true
	}

	return false
}

// SetIsoCertifications gets a reference to the given []SearchCompanyDataTypeIsoCertificationsInner and assigns it to the IsoCertifications field.
func (o *SearchCompanyDataType) SetIsoCertifications(v []SearchCompanyDataTypeIsoCertificationsInner) {
	o.IsoCertifications = v
}

// GetFinancialCycle returns the FinancialCycle field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetFinancialCycle() SearchCompanyDataTypeFinancialCycle {
	if o == nil || IsNil(o.FinancialCycle) {
		var ret SearchCompanyDataTypeFinancialCycle
		return ret
	}
	return *o.FinancialCycle
}

// GetFinancialCycleOk returns a tuple with the FinancialCycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetFinancialCycleOk() (*SearchCompanyDataTypeFinancialCycle, bool) {
	if o == nil || IsNil(o.FinancialCycle) {
		return nil, false
	}
	return o.FinancialCycle, true
}

// HasFinancialCycle returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasFinancialCycle() bool {
	if o != nil && !IsNil(o.FinancialCycle) {
		return true
	}

	return false
}

// SetFinancialCycle gets a reference to the given SearchCompanyDataTypeFinancialCycle and assigns it to the FinancialCycle field.
func (o *SearchCompanyDataType) SetFinancialCycle(v SearchCompanyDataTypeFinancialCycle) {
	o.FinancialCycle = &v
}

// GetCoverageRatios returns the CoverageRatios field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetCoverageRatios() SearchCompanyDataTypeCoverageRatios {
	if o == nil || IsNil(o.CoverageRatios) {
		var ret SearchCompanyDataTypeCoverageRatios
		return ret
	}
	return *o.CoverageRatios
}

// GetCoverageRatiosOk returns a tuple with the CoverageRatios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetCoverageRatiosOk() (*SearchCompanyDataTypeCoverageRatios, bool) {
	if o == nil || IsNil(o.CoverageRatios) {
		return nil, false
	}
	return o.CoverageRatios, true
}

// HasCoverageRatios returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasCoverageRatios() bool {
	if o != nil && !IsNil(o.CoverageRatios) {
		return true
	}

	return false
}

// SetCoverageRatios gets a reference to the given SearchCompanyDataTypeCoverageRatios and assigns it to the CoverageRatios field.
func (o *SearchCompanyDataType) SetCoverageRatios(v SearchCompanyDataTypeCoverageRatios) {
	o.CoverageRatios = &v
}

// GetEfficiency returns the Efficiency field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetEfficiency() SearchCompanyDataTypeEfficiency {
	if o == nil || IsNil(o.Efficiency) {
		var ret SearchCompanyDataTypeEfficiency
		return ret
	}
	return *o.Efficiency
}

// GetEfficiencyOk returns a tuple with the Efficiency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetEfficiencyOk() (*SearchCompanyDataTypeEfficiency, bool) {
	if o == nil || IsNil(o.Efficiency) {
		return nil, false
	}
	return o.Efficiency, true
}

// HasEfficiency returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasEfficiency() bool {
	if o != nil && !IsNil(o.Efficiency) {
		return true
	}

	return false
}

// SetEfficiency gets a reference to the given SearchCompanyDataTypeEfficiency and assigns it to the Efficiency field.
func (o *SearchCompanyDataType) SetEfficiency(v SearchCompanyDataTypeEfficiency) {
	o.Efficiency = &v
}

// GetLeverageRatios returns the LeverageRatios field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetLeverageRatios() SearchCompanyDataTypeLeverageRatios {
	if o == nil || IsNil(o.LeverageRatios) {
		var ret SearchCompanyDataTypeLeverageRatios
		return ret
	}
	return *o.LeverageRatios
}

// GetLeverageRatiosOk returns a tuple with the LeverageRatios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetLeverageRatiosOk() (*SearchCompanyDataTypeLeverageRatios, bool) {
	if o == nil || IsNil(o.LeverageRatios) {
		return nil, false
	}
	return o.LeverageRatios, true
}

// HasLeverageRatios returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasLeverageRatios() bool {
	if o != nil && !IsNil(o.LeverageRatios) {
		return true
	}

	return false
}

// SetLeverageRatios gets a reference to the given SearchCompanyDataTypeLeverageRatios and assigns it to the LeverageRatios field.
func (o *SearchCompanyDataType) SetLeverageRatios(v SearchCompanyDataTypeLeverageRatios) {
	o.LeverageRatios = &v
}

// GetLiquidityRatios returns the LiquidityRatios field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetLiquidityRatios() SearchCompanyDataTypeLiquidityRatios {
	if o == nil || IsNil(o.LiquidityRatios) {
		var ret SearchCompanyDataTypeLiquidityRatios
		return ret
	}
	return *o.LiquidityRatios
}

// GetLiquidityRatiosOk returns a tuple with the LiquidityRatios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetLiquidityRatiosOk() (*SearchCompanyDataTypeLiquidityRatios, bool) {
	if o == nil || IsNil(o.LiquidityRatios) {
		return nil, false
	}
	return o.LiquidityRatios, true
}

// HasLiquidityRatios returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasLiquidityRatios() bool {
	if o != nil && !IsNil(o.LiquidityRatios) {
		return true
	}

	return false
}

// SetLiquidityRatios gets a reference to the given SearchCompanyDataTypeLiquidityRatios and assigns it to the LiquidityRatios field.
func (o *SearchCompanyDataType) SetLiquidityRatios(v SearchCompanyDataTypeLiquidityRatios) {
	o.LiquidityRatios = &v
}

// GetProfitability returns the Profitability field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetProfitability() SearchCompanyDataTypeProfitability {
	if o == nil || IsNil(o.Profitability) {
		var ret SearchCompanyDataTypeProfitability
		return ret
	}
	return *o.Profitability
}

// GetProfitabilityOk returns a tuple with the Profitability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetProfitabilityOk() (*SearchCompanyDataTypeProfitability, bool) {
	if o == nil || IsNil(o.Profitability) {
		return nil, false
	}
	return o.Profitability, true
}

// HasProfitability returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasProfitability() bool {
	if o != nil && !IsNil(o.Profitability) {
		return true
	}

	return false
}

// SetProfitability gets a reference to the given SearchCompanyDataTypeProfitability and assigns it to the Profitability field.
func (o *SearchCompanyDataType) SetProfitability(v SearchCompanyDataTypeProfitability) {
	o.Profitability = &v
}

// GetFinancialBurden returns the FinancialBurden field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetFinancialBurden() SearchCompanyDataTypeFinancialBurden {
	if o == nil || IsNil(o.FinancialBurden) {
		var ret SearchCompanyDataTypeFinancialBurden
		return ret
	}
	return *o.FinancialBurden
}

// GetFinancialBurdenOk returns a tuple with the FinancialBurden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetFinancialBurdenOk() (*SearchCompanyDataTypeFinancialBurden, bool) {
	if o == nil || IsNil(o.FinancialBurden) {
		return nil, false
	}
	return o.FinancialBurden, true
}

// HasFinancialBurden returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasFinancialBurden() bool {
	if o != nil && !IsNil(o.FinancialBurden) {
		return true
	}

	return false
}

// SetFinancialBurden gets a reference to the given SearchCompanyDataTypeFinancialBurden and assigns it to the FinancialBurden field.
func (o *SearchCompanyDataType) SetFinancialBurden(v SearchCompanyDataTypeFinancialBurden) {
	o.FinancialBurden = &v
}

// GetIndebtedness returns the Indebtedness field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetIndebtedness() SearchCompanyDataTypeIndebtedness {
	if o == nil || IsNil(o.Indebtedness) {
		var ret SearchCompanyDataTypeIndebtedness
		return ret
	}
	return *o.Indebtedness
}

// GetIndebtednessOk returns a tuple with the Indebtedness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetIndebtednessOk() (*SearchCompanyDataTypeIndebtedness, bool) {
	if o == nil || IsNil(o.Indebtedness) {
		return nil, false
	}
	return o.Indebtedness, true
}

// HasIndebtedness returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasIndebtedness() bool {
	if o != nil && !IsNil(o.Indebtedness) {
		return true
	}

	return false
}

// SetIndebtedness gets a reference to the given SearchCompanyDataTypeIndebtedness and assigns it to the Indebtedness field.
func (o *SearchCompanyDataType) SetIndebtedness(v SearchCompanyDataTypeIndebtedness) {
	o.Indebtedness = &v
}

// GetFinancialStability returns the FinancialStability field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetFinancialStability() SearchCompanyDataTypeFinancialStability {
	if o == nil || IsNil(o.FinancialStability) {
		var ret SearchCompanyDataTypeFinancialStability
		return ret
	}
	return *o.FinancialStability
}

// GetFinancialStabilityOk returns a tuple with the FinancialStability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetFinancialStabilityOk() (*SearchCompanyDataTypeFinancialStability, bool) {
	if o == nil || IsNil(o.FinancialStability) {
		return nil, false
	}
	return o.FinancialStability, true
}

// HasFinancialStability returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasFinancialStability() bool {
	if o != nil && !IsNil(o.FinancialStability) {
		return true
	}

	return false
}

// SetFinancialStability gets a reference to the given SearchCompanyDataTypeFinancialStability and assigns it to the FinancialStability field.
func (o *SearchCompanyDataType) SetFinancialStability(v SearchCompanyDataTypeFinancialStability) {
	o.FinancialStability = &v
}

// GetStructureRatios returns the StructureRatios field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetStructureRatios() SearchCompanyDataTypeStructureRatios {
	if o == nil || IsNil(o.StructureRatios) {
		var ret SearchCompanyDataTypeStructureRatios
		return ret
	}
	return *o.StructureRatios
}

// GetStructureRatiosOk returns a tuple with the StructureRatios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetStructureRatiosOk() (*SearchCompanyDataTypeStructureRatios, bool) {
	if o == nil || IsNil(o.StructureRatios) {
		return nil, false
	}
	return o.StructureRatios, true
}

// HasStructureRatios returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasStructureRatios() bool {
	if o != nil && !IsNil(o.StructureRatios) {
		return true
	}

	return false
}

// SetStructureRatios gets a reference to the given SearchCompanyDataTypeStructureRatios and assigns it to the StructureRatios field.
func (o *SearchCompanyDataType) SetStructureRatios(v SearchCompanyDataTypeStructureRatios) {
	o.StructureRatios = &v
}

// GetDevelopment returns the Development field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetDevelopment() SearchCompanyDataTypeDevelopment {
	if o == nil || IsNil(o.Development) {
		var ret SearchCompanyDataTypeDevelopment
		return ret
	}
	return *o.Development
}

// GetDevelopmentOk returns a tuple with the Development field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetDevelopmentOk() (*SearchCompanyDataTypeDevelopment, bool) {
	if o == nil || IsNil(o.Development) {
		return nil, false
	}
	return o.Development, true
}

// HasDevelopment returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasDevelopment() bool {
	if o != nil && !IsNil(o.Development) {
		return true
	}

	return false
}

// SetDevelopment gets a reference to the given SearchCompanyDataTypeDevelopment and assigns it to the Development field.
func (o *SearchCompanyDataType) SetDevelopment(v SearchCompanyDataTypeDevelopment) {
	o.Development = &v
}

// GetFinancialStatementKpi returns the FinancialStatementKpi field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetFinancialStatementKpi() SearchCompanyDataTypeFinancialStatementKpi {
	if o == nil || IsNil(o.FinancialStatementKpi) {
		var ret SearchCompanyDataTypeFinancialStatementKpi
		return ret
	}
	return *o.FinancialStatementKpi
}

// GetFinancialStatementKpiOk returns a tuple with the FinancialStatementKpi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetFinancialStatementKpiOk() (*SearchCompanyDataTypeFinancialStatementKpi, bool) {
	if o == nil || IsNil(o.FinancialStatementKpi) {
		return nil, false
	}
	return o.FinancialStatementKpi, true
}

// HasFinancialStatementKpi returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasFinancialStatementKpi() bool {
	if o != nil && !IsNil(o.FinancialStatementKpi) {
		return true
	}

	return false
}

// SetFinancialStatementKpi gets a reference to the given SearchCompanyDataTypeFinancialStatementKpi and assigns it to the FinancialStatementKpi field.
func (o *SearchCompanyDataType) SetFinancialStatementKpi(v SearchCompanyDataTypeFinancialStatementKpi) {
	o.FinancialStatementKpi = &v
}

// GetTelcoAnalytics returns the TelcoAnalytics field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetTelcoAnalytics() SearchCompanyDataTypeTelcoAnalytics {
	if o == nil || IsNil(o.TelcoAnalytics) {
		var ret SearchCompanyDataTypeTelcoAnalytics
		return ret
	}
	return *o.TelcoAnalytics
}

// GetTelcoAnalyticsOk returns a tuple with the TelcoAnalytics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetTelcoAnalyticsOk() (*SearchCompanyDataTypeTelcoAnalytics, bool) {
	if o == nil || IsNil(o.TelcoAnalytics) {
		return nil, false
	}
	return o.TelcoAnalytics, true
}

// HasTelcoAnalytics returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasTelcoAnalytics() bool {
	if o != nil && !IsNil(o.TelcoAnalytics) {
		return true
	}

	return false
}

// SetTelcoAnalytics gets a reference to the given SearchCompanyDataTypeTelcoAnalytics and assigns it to the TelcoAnalytics field.
func (o *SearchCompanyDataType) SetTelcoAnalytics(v SearchCompanyDataTypeTelcoAnalytics) {
	o.TelcoAnalytics = &v
}

// GetSeasonality returns the Seasonality field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetSeasonality() SearchCompanyDataTypeSeasonality {
	if o == nil || IsNil(o.Seasonality) {
		var ret SearchCompanyDataTypeSeasonality
		return ret
	}
	return *o.Seasonality
}

// GetSeasonalityOk returns a tuple with the Seasonality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetSeasonalityOk() (*SearchCompanyDataTypeSeasonality, bool) {
	if o == nil || IsNil(o.Seasonality) {
		return nil, false
	}
	return o.Seasonality, true
}

// HasSeasonality returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasSeasonality() bool {
	if o != nil && !IsNil(o.Seasonality) {
		return true
	}

	return false
}

// SetSeasonality gets a reference to the given SearchCompanyDataTypeSeasonality and assigns it to the Seasonality field.
func (o *SearchCompanyDataType) SetSeasonality(v SearchCompanyDataTypeSeasonality) {
	o.Seasonality = &v
}

// GetCreditNeeds returns the CreditNeeds field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetCreditNeeds() SearchCompanyDataTypeCreditNeeds {
	if o == nil || IsNil(o.CreditNeeds) {
		var ret SearchCompanyDataTypeCreditNeeds
		return ret
	}
	return *o.CreditNeeds
}

// GetCreditNeedsOk returns a tuple with the CreditNeeds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetCreditNeedsOk() (*SearchCompanyDataTypeCreditNeeds, bool) {
	if o == nil || IsNil(o.CreditNeeds) {
		return nil, false
	}
	return o.CreditNeeds, true
}

// HasCreditNeeds returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasCreditNeeds() bool {
	if o != nil && !IsNil(o.CreditNeeds) {
		return true
	}

	return false
}

// SetCreditNeeds gets a reference to the given SearchCompanyDataTypeCreditNeeds and assigns it to the CreditNeeds field.
func (o *SearchCompanyDataType) SetCreditNeeds(v SearchCompanyDataTypeCreditNeeds) {
	o.CreditNeeds = &v
}

// GetCribisDnBRating returns the CribisDnBRating field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetCribisDnBRating() SearchCompanyDataTypeCribisDnBRating {
	if o == nil || IsNil(o.CribisDnBRating) {
		var ret SearchCompanyDataTypeCribisDnBRating
		return ret
	}
	return *o.CribisDnBRating
}

// GetCribisDnBRatingOk returns a tuple with the CribisDnBRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetCribisDnBRatingOk() (*SearchCompanyDataTypeCribisDnBRating, bool) {
	if o == nil || IsNil(o.CribisDnBRating) {
		return nil, false
	}
	return o.CribisDnBRating, true
}

// HasCribisDnBRating returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasCribisDnBRating() bool {
	if o != nil && !IsNil(o.CribisDnBRating) {
		return true
	}

	return false
}

// SetCribisDnBRating gets a reference to the given SearchCompanyDataTypeCribisDnBRating and assigns it to the CribisDnBRating field.
func (o *SearchCompanyDataType) SetCribisDnBRating(v SearchCompanyDataTypeCribisDnBRating) {
	o.CribisDnBRating = &v
}

// GetFinancialStrenght returns the FinancialStrenght field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetFinancialStrenght() string {
	if o == nil || IsNil(o.FinancialStrenght) {
		var ret string
		return ret
	}
	return *o.FinancialStrenght
}

// GetFinancialStrenghtOk returns a tuple with the FinancialStrenght field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetFinancialStrenghtOk() (*string, bool) {
	if o == nil || IsNil(o.FinancialStrenght) {
		return nil, false
	}
	return o.FinancialStrenght, true
}

// HasFinancialStrenght returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasFinancialStrenght() bool {
	if o != nil && !IsNil(o.FinancialStrenght) {
		return true
	}

	return false
}

// SetFinancialStrenght gets a reference to the given string and assigns it to the FinancialStrenght field.
func (o *SearchCompanyDataType) SetFinancialStrenght(v string) {
	o.FinancialStrenght = &v
}

// GetFailureScore returns the FailureScore field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetFailureScore() float32 {
	if o == nil || IsNil(o.FailureScore) {
		var ret float32
		return ret
	}
	return *o.FailureScore
}

// GetFailureScoreOk returns a tuple with the FailureScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetFailureScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.FailureScore) {
		return nil, false
	}
	return o.FailureScore, true
}

// HasFailureScore returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasFailureScore() bool {
	if o != nil && !IsNil(o.FailureScore) {
		return true
	}

	return false
}

// SetFailureScore gets a reference to the given float32 and assigns it to the FailureScore field.
func (o *SearchCompanyDataType) SetFailureScore(v float32) {
	o.FailureScore = &v
}

// GetCribisDnBPaydex returns the CribisDnBPaydex field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetCribisDnBPaydex() float32 {
	if o == nil || IsNil(o.CribisDnBPaydex) {
		var ret float32
		return ret
	}
	return *o.CribisDnBPaydex
}

// GetCribisDnBPaydexOk returns a tuple with the CribisDnBPaydex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetCribisDnBPaydexOk() (*float32, bool) {
	if o == nil || IsNil(o.CribisDnBPaydex) {
		return nil, false
	}
	return o.CribisDnBPaydex, true
}

// HasCribisDnBPaydex returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasCribisDnBPaydex() bool {
	if o != nil && !IsNil(o.CribisDnBPaydex) {
		return true
	}

	return false
}

// SetCribisDnBPaydex gets a reference to the given float32 and assigns it to the CribisDnBPaydex field.
func (o *SearchCompanyDataType) SetCribisDnBPaydex(v float32) {
	o.CribisDnBPaydex = &v
}

// GetDelinquencyScore returns the DelinquencyScore field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetDelinquencyScore() float32 {
	if o == nil || IsNil(o.DelinquencyScore) {
		var ret float32
		return ret
	}
	return *o.DelinquencyScore
}

// GetDelinquencyScoreOk returns a tuple with the DelinquencyScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetDelinquencyScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.DelinquencyScore) {
		return nil, false
	}
	return o.DelinquencyScore, true
}

// HasDelinquencyScore returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasDelinquencyScore() bool {
	if o != nil && !IsNil(o.DelinquencyScore) {
		return true
	}

	return false
}

// SetDelinquencyScore gets a reference to the given float32 and assigns it to the DelinquencyScore field.
func (o *SearchCompanyDataType) SetDelinquencyScore(v float32) {
	o.DelinquencyScore = &v
}

// GetCribisDnBCommercialCreditAppraisal returns the CribisDnBCommercialCreditAppraisal field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetCribisDnBCommercialCreditAppraisal() float32 {
	if o == nil || IsNil(o.CribisDnBCommercialCreditAppraisal) {
		var ret float32
		return ret
	}
	return *o.CribisDnBCommercialCreditAppraisal
}

// GetCribisDnBCommercialCreditAppraisalOk returns a tuple with the CribisDnBCommercialCreditAppraisal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetCribisDnBCommercialCreditAppraisalOk() (*float32, bool) {
	if o == nil || IsNil(o.CribisDnBCommercialCreditAppraisal) {
		return nil, false
	}
	return o.CribisDnBCommercialCreditAppraisal, true
}

// HasCribisDnBCommercialCreditAppraisal returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasCribisDnBCommercialCreditAppraisal() bool {
	if o != nil && !IsNil(o.CribisDnBCommercialCreditAppraisal) {
		return true
	}

	return false
}

// SetCribisDnBCommercialCreditAppraisal gets a reference to the given float32 and assigns it to the CribisDnBCommercialCreditAppraisal field.
func (o *SearchCompanyDataType) SetCribisDnBCommercialCreditAppraisal(v float32) {
	o.CribisDnBCommercialCreditAppraisal = &v
}

// GetItpRisk returns the ItpRisk field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetItpRisk() float32 {
	if o == nil || IsNil(o.ItpRisk) {
		var ret float32
		return ret
	}
	return *o.ItpRisk
}

// GetItpRiskOk returns a tuple with the ItpRisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetItpRiskOk() (*float32, bool) {
	if o == nil || IsNil(o.ItpRisk) {
		return nil, false
	}
	return o.ItpRisk, true
}

// HasItpRisk returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasItpRisk() bool {
	if o != nil && !IsNil(o.ItpRisk) {
		return true
	}

	return false
}

// SetItpRisk gets a reference to the given float32 and assigns it to the ItpRisk field.
func (o *SearchCompanyDataType) SetItpRisk(v float32) {
	o.ItpRisk = &v
}

// GetGovernanceRiskIndex returns the GovernanceRiskIndex field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetGovernanceRiskIndex() SearchCompanyDataTypeGovernanceRiskIndex {
	if o == nil || IsNil(o.GovernanceRiskIndex) {
		var ret SearchCompanyDataTypeGovernanceRiskIndex
		return ret
	}
	return *o.GovernanceRiskIndex
}

// GetGovernanceRiskIndexOk returns a tuple with the GovernanceRiskIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetGovernanceRiskIndexOk() (*SearchCompanyDataTypeGovernanceRiskIndex, bool) {
	if o == nil || IsNil(o.GovernanceRiskIndex) {
		return nil, false
	}
	return o.GovernanceRiskIndex, true
}

// HasGovernanceRiskIndex returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasGovernanceRiskIndex() bool {
	if o != nil && !IsNil(o.GovernanceRiskIndex) {
		return true
	}

	return false
}

// SetGovernanceRiskIndex gets a reference to the given SearchCompanyDataTypeGovernanceRiskIndex and assigns it to the GovernanceRiskIndex field.
func (o *SearchCompanyDataType) SetGovernanceRiskIndex(v SearchCompanyDataTypeGovernanceRiskIndex) {
	o.GovernanceRiskIndex = &v
}

// GetCrifBusinessIndex returns the CrifBusinessIndex field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetCrifBusinessIndex() SearchCompanyDataTypeCrifBusinessIndex {
	if o == nil || IsNil(o.CrifBusinessIndex) {
		var ret SearchCompanyDataTypeCrifBusinessIndex
		return ret
	}
	return *o.CrifBusinessIndex
}

// GetCrifBusinessIndexOk returns a tuple with the CrifBusinessIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetCrifBusinessIndexOk() (*SearchCompanyDataTypeCrifBusinessIndex, bool) {
	if o == nil || IsNil(o.CrifBusinessIndex) {
		return nil, false
	}
	return o.CrifBusinessIndex, true
}

// HasCrifBusinessIndex returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasCrifBusinessIndex() bool {
	if o != nil && !IsNil(o.CrifBusinessIndex) {
		return true
	}

	return false
}

// SetCrifBusinessIndex gets a reference to the given SearchCompanyDataTypeCrifBusinessIndex and assigns it to the CrifBusinessIndex field.
func (o *SearchCompanyDataType) SetCrifBusinessIndex(v SearchCompanyDataTypeCrifBusinessIndex) {
	o.CrifBusinessIndex = &v
}

// GetIndustryRating returns the IndustryRating field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetIndustryRating() SearchCompanyDataTypeCribisDnBRating {
	if o == nil || IsNil(o.IndustryRating) {
		var ret SearchCompanyDataTypeCribisDnBRating
		return ret
	}
	return *o.IndustryRating
}

// GetIndustryRatingOk returns a tuple with the IndustryRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetIndustryRatingOk() (*SearchCompanyDataTypeCribisDnBRating, bool) {
	if o == nil || IsNil(o.IndustryRating) {
		return nil, false
	}
	return o.IndustryRating, true
}

// HasIndustryRating returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasIndustryRating() bool {
	if o != nil && !IsNil(o.IndustryRating) {
		return true
	}

	return false
}

// SetIndustryRating gets a reference to the given SearchCompanyDataTypeCribisDnBRating and assigns it to the IndustryRating field.
func (o *SearchCompanyDataType) SetIndustryRating(v SearchCompanyDataTypeCribisDnBRating) {
	o.IndustryRating = &v
}

// GetDelinquencySectorRating returns the DelinquencySectorRating field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetDelinquencySectorRating() float32 {
	if o == nil || IsNil(o.DelinquencySectorRating) {
		var ret float32
		return ret
	}
	return *o.DelinquencySectorRating
}

// GetDelinquencySectorRatingOk returns a tuple with the DelinquencySectorRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetDelinquencySectorRatingOk() (*float32, bool) {
	if o == nil || IsNil(o.DelinquencySectorRating) {
		return nil, false
	}
	return o.DelinquencySectorRating, true
}

// HasDelinquencySectorRating returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasDelinquencySectorRating() bool {
	if o != nil && !IsNil(o.DelinquencySectorRating) {
		return true
	}

	return false
}

// SetDelinquencySectorRating gets a reference to the given float32 and assigns it to the DelinquencySectorRating field.
func (o *SearchCompanyDataType) SetDelinquencySectorRating(v float32) {
	o.DelinquencySectorRating = &v
}

// GetIndustryFailureScore returns the IndustryFailureScore field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetIndustryFailureScore() float32 {
	if o == nil || IsNil(o.IndustryFailureScore) {
		var ret float32
		return ret
	}
	return *o.IndustryFailureScore
}

// GetIndustryFailureScoreOk returns a tuple with the IndustryFailureScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetIndustryFailureScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.IndustryFailureScore) {
		return nil, false
	}
	return o.IndustryFailureScore, true
}

// HasIndustryFailureScore returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasIndustryFailureScore() bool {
	if o != nil && !IsNil(o.IndustryFailureScore) {
		return true
	}

	return false
}

// SetIndustryFailureScore gets a reference to the given float32 and assigns it to the IndustryFailureScore field.
func (o *SearchCompanyDataType) SetIndustryFailureScore(v float32) {
	o.IndustryFailureScore = &v
}

// GetIndustryPaydex returns the IndustryPaydex field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetIndustryPaydex() float32 {
	if o == nil || IsNil(o.IndustryPaydex) {
		var ret float32
		return ret
	}
	return *o.IndustryPaydex
}

// GetIndustryPaydexOk returns a tuple with the IndustryPaydex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetIndustryPaydexOk() (*float32, bool) {
	if o == nil || IsNil(o.IndustryPaydex) {
		return nil, false
	}
	return o.IndustryPaydex, true
}

// HasIndustryPaydex returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasIndustryPaydex() bool {
	if o != nil && !IsNil(o.IndustryPaydex) {
		return true
	}

	return false
}

// SetIndustryPaydex gets a reference to the given float32 and assigns it to the IndustryPaydex field.
func (o *SearchCompanyDataType) SetIndustryPaydex(v float32) {
	o.IndustryPaydex = &v
}

// GetCribisScoreStateOwned returns the CribisScoreStateOwned field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetCribisScoreStateOwned() SearchCompanyDataTypeCribisScoreStateOwned {
	if o == nil || IsNil(o.CribisScoreStateOwned) {
		var ret SearchCompanyDataTypeCribisScoreStateOwned
		return ret
	}
	return *o.CribisScoreStateOwned
}

// GetCribisScoreStateOwnedOk returns a tuple with the CribisScoreStateOwned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetCribisScoreStateOwnedOk() (*SearchCompanyDataTypeCribisScoreStateOwned, bool) {
	if o == nil || IsNil(o.CribisScoreStateOwned) {
		return nil, false
	}
	return o.CribisScoreStateOwned, true
}

// HasCribisScoreStateOwned returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasCribisScoreStateOwned() bool {
	if o != nil && !IsNil(o.CribisScoreStateOwned) {
		return true
	}

	return false
}

// SetCribisScoreStateOwned gets a reference to the given SearchCompanyDataTypeCribisScoreStateOwned and assigns it to the CribisScoreStateOwned field.
func (o *SearchCompanyDataType) SetCribisScoreStateOwned(v SearchCompanyDataTypeCribisScoreStateOwned) {
	o.CribisScoreStateOwned = &v
}

// GetFinancialEconomicScore returns the FinancialEconomicScore field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetFinancialEconomicScore() float32 {
	if o == nil || IsNil(o.FinancialEconomicScore) {
		var ret float32
		return ret
	}
	return *o.FinancialEconomicScore
}

// GetFinancialEconomicScoreOk returns a tuple with the FinancialEconomicScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetFinancialEconomicScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.FinancialEconomicScore) {
		return nil, false
	}
	return o.FinancialEconomicScore, true
}

// HasFinancialEconomicScore returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasFinancialEconomicScore() bool {
	if o != nil && !IsNil(o.FinancialEconomicScore) {
		return true
	}

	return false
}

// SetFinancialEconomicScore gets a reference to the given float32 and assigns it to the FinancialEconomicScore field.
func (o *SearchCompanyDataType) SetFinancialEconomicScore(v float32) {
	o.FinancialEconomicScore = &v
}

// GetTerritorialScore returns the TerritorialScore field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetTerritorialScore() SearchCompanyDataTypeTerritorialScore {
	if o == nil || IsNil(o.TerritorialScore) {
		var ret SearchCompanyDataTypeTerritorialScore
		return ret
	}
	return *o.TerritorialScore
}

// GetTerritorialScoreOk returns a tuple with the TerritorialScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetTerritorialScoreOk() (*SearchCompanyDataTypeTerritorialScore, bool) {
	if o == nil || IsNil(o.TerritorialScore) {
		return nil, false
	}
	return o.TerritorialScore, true
}

// HasTerritorialScore returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasTerritorialScore() bool {
	if o != nil && !IsNil(o.TerritorialScore) {
		return true
	}

	return false
}

// SetTerritorialScore gets a reference to the given SearchCompanyDataTypeTerritorialScore and assigns it to the TerritorialScore field.
func (o *SearchCompanyDataType) SetTerritorialScore(v SearchCompanyDataTypeTerritorialScore) {
	o.TerritorialScore = &v
}

// GetSupplierScore returns the SupplierScore field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetSupplierScore() SearchCompanyDataTypeSupplierScore {
	if o == nil || IsNil(o.SupplierScore) {
		var ret SearchCompanyDataTypeSupplierScore
		return ret
	}
	return *o.SupplierScore
}

// GetSupplierScoreOk returns a tuple with the SupplierScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetSupplierScoreOk() (*SearchCompanyDataTypeSupplierScore, bool) {
	if o == nil || IsNil(o.SupplierScore) {
		return nil, false
	}
	return o.SupplierScore, true
}

// HasSupplierScore returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasSupplierScore() bool {
	if o != nil && !IsNil(o.SupplierScore) {
		return true
	}

	return false
}

// SetSupplierScore gets a reference to the given SearchCompanyDataTypeSupplierScore and assigns it to the SupplierScore field.
func (o *SearchCompanyDataType) SetSupplierScore(v SearchCompanyDataTypeSupplierScore) {
	o.SupplierScore = &v
}

// GetUtilities returns the Utilities field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetUtilities() SearchCompanyDataTypeUtilities {
	if o == nil || IsNil(o.Utilities) {
		var ret SearchCompanyDataTypeUtilities
		return ret
	}
	return *o.Utilities
}

// GetUtilitiesOk returns a tuple with the Utilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetUtilitiesOk() (*SearchCompanyDataTypeUtilities, bool) {
	if o == nil || IsNil(o.Utilities) {
		return nil, false
	}
	return o.Utilities, true
}

// HasUtilities returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasUtilities() bool {
	if o != nil && !IsNil(o.Utilities) {
		return true
	}

	return false
}

// SetUtilities gets a reference to the given SearchCompanyDataTypeUtilities and assigns it to the Utilities field.
func (o *SearchCompanyDataType) SetUtilities(v SearchCompanyDataTypeUtilities) {
	o.Utilities = &v
}

// GetRetailAnalytics returns the RetailAnalytics field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetRetailAnalytics() SearchCompanyDataTypeRetailAnalytics {
	if o == nil || IsNil(o.RetailAnalytics) {
		var ret SearchCompanyDataTypeRetailAnalytics
		return ret
	}
	return *o.RetailAnalytics
}

// GetRetailAnalyticsOk returns a tuple with the RetailAnalytics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetRetailAnalyticsOk() (*SearchCompanyDataTypeRetailAnalytics, bool) {
	if o == nil || IsNil(o.RetailAnalytics) {
		return nil, false
	}
	return o.RetailAnalytics, true
}

// HasRetailAnalytics returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasRetailAnalytics() bool {
	if o != nil && !IsNil(o.RetailAnalytics) {
		return true
	}

	return false
}

// SetRetailAnalytics gets a reference to the given SearchCompanyDataTypeRetailAnalytics and assigns it to the RetailAnalytics field.
func (o *SearchCompanyDataType) SetRetailAnalytics(v SearchCompanyDataTypeRetailAnalytics) {
	o.RetailAnalytics = &v
}

// GetInternazionalizationScore returns the InternazionalizationScore field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetInternazionalizationScore() SearchCompanyDataTypeInternazionalizationScore {
	if o == nil || IsNil(o.InternazionalizationScore) {
		var ret SearchCompanyDataTypeInternazionalizationScore
		return ret
	}
	return *o.InternazionalizationScore
}

// GetInternazionalizationScoreOk returns a tuple with the InternazionalizationScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetInternazionalizationScoreOk() (*SearchCompanyDataTypeInternazionalizationScore, bool) {
	if o == nil || IsNil(o.InternazionalizationScore) {
		return nil, false
	}
	return o.InternazionalizationScore, true
}

// HasInternazionalizationScore returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasInternazionalizationScore() bool {
	if o != nil && !IsNil(o.InternazionalizationScore) {
		return true
	}

	return false
}

// SetInternazionalizationScore gets a reference to the given SearchCompanyDataTypeInternazionalizationScore and assigns it to the InternazionalizationScore field.
func (o *SearchCompanyDataType) SetInternazionalizationScore(v SearchCompanyDataTypeInternazionalizationScore) {
	o.InternazionalizationScore = &v
}

// GetDigitalAttitudeScore returns the DigitalAttitudeScore field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetDigitalAttitudeScore() SearchCompanyDataTypeDigitalAttitudeScore {
	if o == nil || IsNil(o.DigitalAttitudeScore) {
		var ret SearchCompanyDataTypeDigitalAttitudeScore
		return ret
	}
	return *o.DigitalAttitudeScore
}

// GetDigitalAttitudeScoreOk returns a tuple with the DigitalAttitudeScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetDigitalAttitudeScoreOk() (*SearchCompanyDataTypeDigitalAttitudeScore, bool) {
	if o == nil || IsNil(o.DigitalAttitudeScore) {
		return nil, false
	}
	return o.DigitalAttitudeScore, true
}

// HasDigitalAttitudeScore returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasDigitalAttitudeScore() bool {
	if o != nil && !IsNil(o.DigitalAttitudeScore) {
		return true
	}

	return false
}

// SetDigitalAttitudeScore gets a reference to the given SearchCompanyDataTypeDigitalAttitudeScore and assigns it to the DigitalAttitudeScore field.
func (o *SearchCompanyDataType) SetDigitalAttitudeScore(v SearchCompanyDataTypeDigitalAttitudeScore) {
	o.DigitalAttitudeScore = &v
}

// GetInnovationScore returns the InnovationScore field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetInnovationScore() SearchCompanyDataTypeInnovationScore {
	if o == nil || IsNil(o.InnovationScore) {
		var ret SearchCompanyDataTypeInnovationScore
		return ret
	}
	return *o.InnovationScore
}

// GetInnovationScoreOk returns a tuple with the InnovationScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetInnovationScoreOk() (*SearchCompanyDataTypeInnovationScore, bool) {
	if o == nil || IsNil(o.InnovationScore) {
		return nil, false
	}
	return o.InnovationScore, true
}

// HasInnovationScore returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasInnovationScore() bool {
	if o != nil && !IsNil(o.InnovationScore) {
		return true
	}

	return false
}

// SetInnovationScore gets a reference to the given SearchCompanyDataTypeInnovationScore and assigns it to the InnovationScore field.
func (o *SearchCompanyDataType) SetInnovationScore(v SearchCompanyDataTypeInnovationScore) {
	o.InnovationScore = &v
}

// GetEstimatedTurnover returns the EstimatedTurnover field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetEstimatedTurnover() float32 {
	if o == nil || IsNil(o.EstimatedTurnover) {
		var ret float32
		return ret
	}
	return *o.EstimatedTurnover
}

// GetEstimatedTurnoverOk returns a tuple with the EstimatedTurnover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetEstimatedTurnoverOk() (*float32, bool) {
	if o == nil || IsNil(o.EstimatedTurnover) {
		return nil, false
	}
	return o.EstimatedTurnover, true
}

// HasEstimatedTurnover returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasEstimatedTurnover() bool {
	if o != nil && !IsNil(o.EstimatedTurnover) {
		return true
	}

	return false
}

// SetEstimatedTurnover gets a reference to the given float32 and assigns it to the EstimatedTurnover field.
func (o *SearchCompanyDataType) SetEstimatedTurnover(v float32) {
	o.EstimatedTurnover = &v
}

// GetCompanyIdentification returns the CompanyIdentification field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetCompanyIdentification() SearchCompanyDataTypeCompanyIdentification {
	if o == nil || IsNil(o.CompanyIdentification) {
		var ret SearchCompanyDataTypeCompanyIdentification
		return ret
	}
	return *o.CompanyIdentification
}

// GetCompanyIdentificationOk returns a tuple with the CompanyIdentification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetCompanyIdentificationOk() (*SearchCompanyDataTypeCompanyIdentification, bool) {
	if o == nil || IsNil(o.CompanyIdentification) {
		return nil, false
	}
	return o.CompanyIdentification, true
}

// HasCompanyIdentification returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasCompanyIdentification() bool {
	if o != nil && !IsNil(o.CompanyIdentification) {
		return true
	}

	return false
}

// SetCompanyIdentification gets a reference to the given SearchCompanyDataTypeCompanyIdentification and assigns it to the CompanyIdentification field.
func (o *SearchCompanyDataType) SetCompanyIdentification(v SearchCompanyDataTypeCompanyIdentification) {
	o.CompanyIdentification = &v
}

// GetInternationalIdentification returns the InternationalIdentification field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetInternationalIdentification() SearchCompanyDataTypeInternationalIdentification {
	if o == nil || IsNil(o.InternationalIdentification) {
		var ret SearchCompanyDataTypeInternationalIdentification
		return ret
	}
	return *o.InternationalIdentification
}

// GetInternationalIdentificationOk returns a tuple with the InternationalIdentification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetInternationalIdentificationOk() (*SearchCompanyDataTypeInternationalIdentification, bool) {
	if o == nil || IsNil(o.InternationalIdentification) {
		return nil, false
	}
	return o.InternationalIdentification, true
}

// HasInternationalIdentification returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasInternationalIdentification() bool {
	if o != nil && !IsNil(o.InternationalIdentification) {
		return true
	}

	return false
}

// SetInternationalIdentification gets a reference to the given SearchCompanyDataTypeInternationalIdentification and assigns it to the InternationalIdentification field.
func (o *SearchCompanyDataType) SetInternationalIdentification(v SearchCompanyDataTypeInternationalIdentification) {
	o.InternationalIdentification = &v
}

// GetAffidabilityScore returns the AffidabilityScore field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetAffidabilityScore() SearchCompanyDataTypeAffidabilityScore {
	if o == nil || IsNil(o.AffidabilityScore) {
		var ret SearchCompanyDataTypeAffidabilityScore
		return ret
	}
	return *o.AffidabilityScore
}

// GetAffidabilityScoreOk returns a tuple with the AffidabilityScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetAffidabilityScoreOk() (*SearchCompanyDataTypeAffidabilityScore, bool) {
	if o == nil || IsNil(o.AffidabilityScore) {
		return nil, false
	}
	return o.AffidabilityScore, true
}

// HasAffidabilityScore returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasAffidabilityScore() bool {
	if o != nil && !IsNil(o.AffidabilityScore) {
		return true
	}

	return false
}

// SetAffidabilityScore gets a reference to the given SearchCompanyDataTypeAffidabilityScore and assigns it to the AffidabilityScore field.
func (o *SearchCompanyDataType) SetAffidabilityScore(v SearchCompanyDataTypeAffidabilityScore) {
	o.AffidabilityScore = &v
}

// GetSemanticCluster returns the SemanticCluster field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetSemanticCluster() SearchCompanyDataTypeSemanticCluster {
	if o == nil || IsNil(o.SemanticCluster) {
		var ret SearchCompanyDataTypeSemanticCluster
		return ret
	}
	return *o.SemanticCluster
}

// GetSemanticClusterOk returns a tuple with the SemanticCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetSemanticClusterOk() (*SearchCompanyDataTypeSemanticCluster, bool) {
	if o == nil || IsNil(o.SemanticCluster) {
		return nil, false
	}
	return o.SemanticCluster, true
}

// HasSemanticCluster returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasSemanticCluster() bool {
	if o != nil && !IsNil(o.SemanticCluster) {
		return true
	}

	return false
}

// SetSemanticCluster gets a reference to the given SearchCompanyDataTypeSemanticCluster and assigns it to the SemanticCluster field.
func (o *SearchCompanyDataType) SetSemanticCluster(v SearchCompanyDataTypeSemanticCluster) {
	o.SemanticCluster = &v
}

// GetAssetsAggregateValues returns the AssetsAggregateValues field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetAssetsAggregateValues() []SearchCompanyDataTypeAssetsAggregateValuesInner {
	if o == nil || IsNil(o.AssetsAggregateValues) {
		var ret []SearchCompanyDataTypeAssetsAggregateValuesInner
		return ret
	}
	return o.AssetsAggregateValues
}

// GetAssetsAggregateValuesOk returns a tuple with the AssetsAggregateValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetAssetsAggregateValuesOk() ([]SearchCompanyDataTypeAssetsAggregateValuesInner, bool) {
	if o == nil || IsNil(o.AssetsAggregateValues) {
		return nil, false
	}
	return o.AssetsAggregateValues, true
}

// HasAssetsAggregateValues returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasAssetsAggregateValues() bool {
	if o != nil && !IsNil(o.AssetsAggregateValues) {
		return true
	}

	return false
}

// SetAssetsAggregateValues gets a reference to the given []SearchCompanyDataTypeAssetsAggregateValuesInner and assigns it to the AssetsAggregateValues field.
func (o *SearchCompanyDataType) SetAssetsAggregateValues(v []SearchCompanyDataTypeAssetsAggregateValuesInner) {
	o.AssetsAggregateValues = v
}

// GetCreditsToShareholders returns the CreditsToShareholders field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetCreditsToShareholders() []SearchCompanyDataTypeAssetsAggregateValuesInner {
	if o == nil || IsNil(o.CreditsToShareholders) {
		var ret []SearchCompanyDataTypeAssetsAggregateValuesInner
		return ret
	}
	return o.CreditsToShareholders
}

// GetCreditsToShareholdersOk returns a tuple with the CreditsToShareholders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetCreditsToShareholdersOk() ([]SearchCompanyDataTypeAssetsAggregateValuesInner, bool) {
	if o == nil || IsNil(o.CreditsToShareholders) {
		return nil, false
	}
	return o.CreditsToShareholders, true
}

// HasCreditsToShareholders returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasCreditsToShareholders() bool {
	if o != nil && !IsNil(o.CreditsToShareholders) {
		return true
	}

	return false
}

// SetCreditsToShareholders gets a reference to the given []SearchCompanyDataTypeAssetsAggregateValuesInner and assigns it to the CreditsToShareholders field.
func (o *SearchCompanyDataType) SetCreditsToShareholders(v []SearchCompanyDataTypeAssetsAggregateValuesInner) {
	o.CreditsToShareholders = v
}

// GetIntangibleFixedAssets returns the IntangibleFixedAssets field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetIntangibleFixedAssets() []SearchCompanyDataTypeAssetsAggregateValuesInner {
	if o == nil || IsNil(o.IntangibleFixedAssets) {
		var ret []SearchCompanyDataTypeAssetsAggregateValuesInner
		return ret
	}
	return o.IntangibleFixedAssets
}

// GetIntangibleFixedAssetsOk returns a tuple with the IntangibleFixedAssets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetIntangibleFixedAssetsOk() ([]SearchCompanyDataTypeAssetsAggregateValuesInner, bool) {
	if o == nil || IsNil(o.IntangibleFixedAssets) {
		return nil, false
	}
	return o.IntangibleFixedAssets, true
}

// HasIntangibleFixedAssets returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasIntangibleFixedAssets() bool {
	if o != nil && !IsNil(o.IntangibleFixedAssets) {
		return true
	}

	return false
}

// SetIntangibleFixedAssets gets a reference to the given []SearchCompanyDataTypeAssetsAggregateValuesInner and assigns it to the IntangibleFixedAssets field.
func (o *SearchCompanyDataType) SetIntangibleFixedAssets(v []SearchCompanyDataTypeAssetsAggregateValuesInner) {
	o.IntangibleFixedAssets = v
}

// GetTangibleFixedAssets returns the TangibleFixedAssets field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetTangibleFixedAssets() []SearchCompanyDataTypeAssetsAggregateValuesInner {
	if o == nil || IsNil(o.TangibleFixedAssets) {
		var ret []SearchCompanyDataTypeAssetsAggregateValuesInner
		return ret
	}
	return o.TangibleFixedAssets
}

// GetTangibleFixedAssetsOk returns a tuple with the TangibleFixedAssets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetTangibleFixedAssetsOk() ([]SearchCompanyDataTypeAssetsAggregateValuesInner, bool) {
	if o == nil || IsNil(o.TangibleFixedAssets) {
		return nil, false
	}
	return o.TangibleFixedAssets, true
}

// HasTangibleFixedAssets returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasTangibleFixedAssets() bool {
	if o != nil && !IsNil(o.TangibleFixedAssets) {
		return true
	}

	return false
}

// SetTangibleFixedAssets gets a reference to the given []SearchCompanyDataTypeAssetsAggregateValuesInner and assigns it to the TangibleFixedAssets field.
func (o *SearchCompanyDataType) SetTangibleFixedAssets(v []SearchCompanyDataTypeAssetsAggregateValuesInner) {
	o.TangibleFixedAssets = v
}

// GetFinancialFixedAssets returns the FinancialFixedAssets field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetFinancialFixedAssets() []SearchCompanyDataTypeAssetsAggregateValuesInner {
	if o == nil || IsNil(o.FinancialFixedAssets) {
		var ret []SearchCompanyDataTypeAssetsAggregateValuesInner
		return ret
	}
	return o.FinancialFixedAssets
}

// GetFinancialFixedAssetsOk returns a tuple with the FinancialFixedAssets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetFinancialFixedAssetsOk() ([]SearchCompanyDataTypeAssetsAggregateValuesInner, bool) {
	if o == nil || IsNil(o.FinancialFixedAssets) {
		return nil, false
	}
	return o.FinancialFixedAssets, true
}

// HasFinancialFixedAssets returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasFinancialFixedAssets() bool {
	if o != nil && !IsNil(o.FinancialFixedAssets) {
		return true
	}

	return false
}

// SetFinancialFixedAssets gets a reference to the given []SearchCompanyDataTypeAssetsAggregateValuesInner and assigns it to the FinancialFixedAssets field.
func (o *SearchCompanyDataType) SetFinancialFixedAssets(v []SearchCompanyDataTypeAssetsAggregateValuesInner) {
	o.FinancialFixedAssets = v
}

// GetInventory returns the Inventory field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetInventory() []SearchCompanyDataTypeAssetsAggregateValuesInner {
	if o == nil || IsNil(o.Inventory) {
		var ret []SearchCompanyDataTypeAssetsAggregateValuesInner
		return ret
	}
	return o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetInventoryOk() ([]SearchCompanyDataTypeAssetsAggregateValuesInner, bool) {
	if o == nil || IsNil(o.Inventory) {
		return nil, false
	}
	return o.Inventory, true
}

// HasInventory returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasInventory() bool {
	if o != nil && !IsNil(o.Inventory) {
		return true
	}

	return false
}

// SetInventory gets a reference to the given []SearchCompanyDataTypeAssetsAggregateValuesInner and assigns it to the Inventory field.
func (o *SearchCompanyDataType) SetInventory(v []SearchCompanyDataTypeAssetsAggregateValuesInner) {
	o.Inventory = v
}

// GetCredits returns the Credits field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetCredits() []SearchCompanyDataTypeAssetsAggregateValuesInner {
	if o == nil || IsNil(o.Credits) {
		var ret []SearchCompanyDataTypeAssetsAggregateValuesInner
		return ret
	}
	return o.Credits
}

// GetCreditsOk returns a tuple with the Credits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetCreditsOk() ([]SearchCompanyDataTypeAssetsAggregateValuesInner, bool) {
	if o == nil || IsNil(o.Credits) {
		return nil, false
	}
	return o.Credits, true
}

// HasCredits returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasCredits() bool {
	if o != nil && !IsNil(o.Credits) {
		return true
	}

	return false
}

// SetCredits gets a reference to the given []SearchCompanyDataTypeAssetsAggregateValuesInner and assigns it to the Credits field.
func (o *SearchCompanyDataType) SetCredits(v []SearchCompanyDataTypeAssetsAggregateValuesInner) {
	o.Credits = v
}

// GetFinancialAssets returns the FinancialAssets field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetFinancialAssets() []SearchCompanyDataTypeAssetsAggregateValuesInner {
	if o == nil || IsNil(o.FinancialAssets) {
		var ret []SearchCompanyDataTypeAssetsAggregateValuesInner
		return ret
	}
	return o.FinancialAssets
}

// GetFinancialAssetsOk returns a tuple with the FinancialAssets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetFinancialAssetsOk() ([]SearchCompanyDataTypeAssetsAggregateValuesInner, bool) {
	if o == nil || IsNil(o.FinancialAssets) {
		return nil, false
	}
	return o.FinancialAssets, true
}

// HasFinancialAssets returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasFinancialAssets() bool {
	if o != nil && !IsNil(o.FinancialAssets) {
		return true
	}

	return false
}

// SetFinancialAssets gets a reference to the given []SearchCompanyDataTypeAssetsAggregateValuesInner and assigns it to the FinancialAssets field.
func (o *SearchCompanyDataType) SetFinancialAssets(v []SearchCompanyDataTypeAssetsAggregateValuesInner) {
	o.FinancialAssets = v
}

// GetCashEquivalents returns the CashEquivalents field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetCashEquivalents() []SearchCompanyDataTypeAssetsAggregateValuesInner {
	if o == nil || IsNil(o.CashEquivalents) {
		var ret []SearchCompanyDataTypeAssetsAggregateValuesInner
		return ret
	}
	return o.CashEquivalents
}

// GetCashEquivalentsOk returns a tuple with the CashEquivalents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetCashEquivalentsOk() ([]SearchCompanyDataTypeAssetsAggregateValuesInner, bool) {
	if o == nil || IsNil(o.CashEquivalents) {
		return nil, false
	}
	return o.CashEquivalents, true
}

// HasCashEquivalents returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasCashEquivalents() bool {
	if o != nil && !IsNil(o.CashEquivalents) {
		return true
	}

	return false
}

// SetCashEquivalents gets a reference to the given []SearchCompanyDataTypeAssetsAggregateValuesInner and assigns it to the CashEquivalents field.
func (o *SearchCompanyDataType) SetCashEquivalents(v []SearchCompanyDataTypeAssetsAggregateValuesInner) {
	o.CashEquivalents = v
}

// GetLiabilitiesAggregateValues returns the LiabilitiesAggregateValues field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetLiabilitiesAggregateValues() []SearchCompanyDataTypeAssetsAggregateValuesInner {
	if o == nil || IsNil(o.LiabilitiesAggregateValues) {
		var ret []SearchCompanyDataTypeAssetsAggregateValuesInner
		return ret
	}
	return o.LiabilitiesAggregateValues
}

// GetLiabilitiesAggregateValuesOk returns a tuple with the LiabilitiesAggregateValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetLiabilitiesAggregateValuesOk() ([]SearchCompanyDataTypeAssetsAggregateValuesInner, bool) {
	if o == nil || IsNil(o.LiabilitiesAggregateValues) {
		return nil, false
	}
	return o.LiabilitiesAggregateValues, true
}

// HasLiabilitiesAggregateValues returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasLiabilitiesAggregateValues() bool {
	if o != nil && !IsNil(o.LiabilitiesAggregateValues) {
		return true
	}

	return false
}

// SetLiabilitiesAggregateValues gets a reference to the given []SearchCompanyDataTypeAssetsAggregateValuesInner and assigns it to the LiabilitiesAggregateValues field.
func (o *SearchCompanyDataType) SetLiabilitiesAggregateValues(v []SearchCompanyDataTypeAssetsAggregateValuesInner) {
	o.LiabilitiesAggregateValues = v
}

// GetNetWorth returns the NetWorth field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetNetWorth() []SearchCompanyDataTypeAssetsAggregateValuesInner {
	if o == nil || IsNil(o.NetWorth) {
		var ret []SearchCompanyDataTypeAssetsAggregateValuesInner
		return ret
	}
	return o.NetWorth
}

// GetNetWorthOk returns a tuple with the NetWorth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetNetWorthOk() ([]SearchCompanyDataTypeAssetsAggregateValuesInner, bool) {
	if o == nil || IsNil(o.NetWorth) {
		return nil, false
	}
	return o.NetWorth, true
}

// HasNetWorth returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasNetWorth() bool {
	if o != nil && !IsNil(o.NetWorth) {
		return true
	}

	return false
}

// SetNetWorth gets a reference to the given []SearchCompanyDataTypeAssetsAggregateValuesInner and assigns it to the NetWorth field.
func (o *SearchCompanyDataType) SetNetWorth(v []SearchCompanyDataTypeAssetsAggregateValuesInner) {
	o.NetWorth = v
}

// GetRiskProvisions returns the RiskProvisions field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetRiskProvisions() []SearchCompanyDataTypeAssetsAggregateValuesInner {
	if o == nil || IsNil(o.RiskProvisions) {
		var ret []SearchCompanyDataTypeAssetsAggregateValuesInner
		return ret
	}
	return o.RiskProvisions
}

// GetRiskProvisionsOk returns a tuple with the RiskProvisions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetRiskProvisionsOk() ([]SearchCompanyDataTypeAssetsAggregateValuesInner, bool) {
	if o == nil || IsNil(o.RiskProvisions) {
		return nil, false
	}
	return o.RiskProvisions, true
}

// HasRiskProvisions returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasRiskProvisions() bool {
	if o != nil && !IsNil(o.RiskProvisions) {
		return true
	}

	return false
}

// SetRiskProvisions gets a reference to the given []SearchCompanyDataTypeAssetsAggregateValuesInner and assigns it to the RiskProvisions field.
func (o *SearchCompanyDataType) SetRiskProvisions(v []SearchCompanyDataTypeAssetsAggregateValuesInner) {
	o.RiskProvisions = v
}

// GetDebts returns the Debts field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetDebts() []SearchCompanyDataTypeAssetsAggregateValuesInner {
	if o == nil || IsNil(o.Debts) {
		var ret []SearchCompanyDataTypeAssetsAggregateValuesInner
		return ret
	}
	return o.Debts
}

// GetDebtsOk returns a tuple with the Debts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetDebtsOk() ([]SearchCompanyDataTypeAssetsAggregateValuesInner, bool) {
	if o == nil || IsNil(o.Debts) {
		return nil, false
	}
	return o.Debts, true
}

// HasDebts returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasDebts() bool {
	if o != nil && !IsNil(o.Debts) {
		return true
	}

	return false
}

// SetDebts gets a reference to the given []SearchCompanyDataTypeAssetsAggregateValuesInner and assigns it to the Debts field.
func (o *SearchCompanyDataType) SetDebts(v []SearchCompanyDataTypeAssetsAggregateValuesInner) {
	o.Debts = v
}

// GetIncomeStatementAggregateValues returns the IncomeStatementAggregateValues field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetIncomeStatementAggregateValues() []SearchCompanyDataTypeAssetsAggregateValuesInner {
	if o == nil || IsNil(o.IncomeStatementAggregateValues) {
		var ret []SearchCompanyDataTypeAssetsAggregateValuesInner
		return ret
	}
	return o.IncomeStatementAggregateValues
}

// GetIncomeStatementAggregateValuesOk returns a tuple with the IncomeStatementAggregateValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetIncomeStatementAggregateValuesOk() ([]SearchCompanyDataTypeAssetsAggregateValuesInner, bool) {
	if o == nil || IsNil(o.IncomeStatementAggregateValues) {
		return nil, false
	}
	return o.IncomeStatementAggregateValues, true
}

// HasIncomeStatementAggregateValues returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasIncomeStatementAggregateValues() bool {
	if o != nil && !IsNil(o.IncomeStatementAggregateValues) {
		return true
	}

	return false
}

// SetIncomeStatementAggregateValues gets a reference to the given []SearchCompanyDataTypeAssetsAggregateValuesInner and assigns it to the IncomeStatementAggregateValues field.
func (o *SearchCompanyDataType) SetIncomeStatementAggregateValues(v []SearchCompanyDataTypeAssetsAggregateValuesInner) {
	o.IncomeStatementAggregateValues = v
}

// GetProductionValue returns the ProductionValue field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetProductionValue() []SearchCompanyDataTypeAssetsAggregateValuesInner {
	if o == nil || IsNil(o.ProductionValue) {
		var ret []SearchCompanyDataTypeAssetsAggregateValuesInner
		return ret
	}
	return o.ProductionValue
}

// GetProductionValueOk returns a tuple with the ProductionValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetProductionValueOk() ([]SearchCompanyDataTypeAssetsAggregateValuesInner, bool) {
	if o == nil || IsNil(o.ProductionValue) {
		return nil, false
	}
	return o.ProductionValue, true
}

// HasProductionValue returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasProductionValue() bool {
	if o != nil && !IsNil(o.ProductionValue) {
		return true
	}

	return false
}

// SetProductionValue gets a reference to the given []SearchCompanyDataTypeAssetsAggregateValuesInner and assigns it to the ProductionValue field.
func (o *SearchCompanyDataType) SetProductionValue(v []SearchCompanyDataTypeAssetsAggregateValuesInner) {
	o.ProductionValue = v
}

// GetProductionCosts returns the ProductionCosts field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetProductionCosts() []SearchCompanyDataTypeAssetsAggregateValuesInner {
	if o == nil || IsNil(o.ProductionCosts) {
		var ret []SearchCompanyDataTypeAssetsAggregateValuesInner
		return ret
	}
	return o.ProductionCosts
}

// GetProductionCostsOk returns a tuple with the ProductionCosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetProductionCostsOk() ([]SearchCompanyDataTypeAssetsAggregateValuesInner, bool) {
	if o == nil || IsNil(o.ProductionCosts) {
		return nil, false
	}
	return o.ProductionCosts, true
}

// HasProductionCosts returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasProductionCosts() bool {
	if o != nil && !IsNil(o.ProductionCosts) {
		return true
	}

	return false
}

// SetProductionCosts gets a reference to the given []SearchCompanyDataTypeAssetsAggregateValuesInner and assigns it to the ProductionCosts field.
func (o *SearchCompanyDataType) SetProductionCosts(v []SearchCompanyDataTypeAssetsAggregateValuesInner) {
	o.ProductionCosts = v
}

// GetRevenuesFinancialCharges returns the RevenuesFinancialCharges field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetRevenuesFinancialCharges() []SearchCompanyDataTypeAssetsAggregateValuesInner {
	if o == nil || IsNil(o.RevenuesFinancialCharges) {
		var ret []SearchCompanyDataTypeAssetsAggregateValuesInner
		return ret
	}
	return o.RevenuesFinancialCharges
}

// GetRevenuesFinancialChargesOk returns a tuple with the RevenuesFinancialCharges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetRevenuesFinancialChargesOk() ([]SearchCompanyDataTypeAssetsAggregateValuesInner, bool) {
	if o == nil || IsNil(o.RevenuesFinancialCharges) {
		return nil, false
	}
	return o.RevenuesFinancialCharges, true
}

// HasRevenuesFinancialCharges returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasRevenuesFinancialCharges() bool {
	if o != nil && !IsNil(o.RevenuesFinancialCharges) {
		return true
	}

	return false
}

// SetRevenuesFinancialCharges gets a reference to the given []SearchCompanyDataTypeAssetsAggregateValuesInner and assigns it to the RevenuesFinancialCharges field.
func (o *SearchCompanyDataType) SetRevenuesFinancialCharges(v []SearchCompanyDataTypeAssetsAggregateValuesInner) {
	o.RevenuesFinancialCharges = v
}

// GetAdjustments returns the Adjustments field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetAdjustments() []SearchCompanyDataTypeAssetsAggregateValuesInner {
	if o == nil || IsNil(o.Adjustments) {
		var ret []SearchCompanyDataTypeAssetsAggregateValuesInner
		return ret
	}
	return o.Adjustments
}

// GetAdjustmentsOk returns a tuple with the Adjustments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetAdjustmentsOk() ([]SearchCompanyDataTypeAssetsAggregateValuesInner, bool) {
	if o == nil || IsNil(o.Adjustments) {
		return nil, false
	}
	return o.Adjustments, true
}

// HasAdjustments returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasAdjustments() bool {
	if o != nil && !IsNil(o.Adjustments) {
		return true
	}

	return false
}

// SetAdjustments gets a reference to the given []SearchCompanyDataTypeAssetsAggregateValuesInner and assigns it to the Adjustments field.
func (o *SearchCompanyDataType) SetAdjustments(v []SearchCompanyDataTypeAssetsAggregateValuesInner) {
	o.Adjustments = v
}

// GetAnnualResult returns the AnnualResult field value if set, zero value otherwise.
func (o *SearchCompanyDataType) GetAnnualResult() []SearchCompanyDataTypeAssetsAggregateValuesInner {
	if o == nil || IsNil(o.AnnualResult) {
		var ret []SearchCompanyDataTypeAssetsAggregateValuesInner
		return ret
	}
	return o.AnnualResult
}

// GetAnnualResultOk returns a tuple with the AnnualResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataType) GetAnnualResultOk() ([]SearchCompanyDataTypeAssetsAggregateValuesInner, bool) {
	if o == nil || IsNil(o.AnnualResult) {
		return nil, false
	}
	return o.AnnualResult, true
}

// HasAnnualResult returns a boolean if a field has been set.
func (o *SearchCompanyDataType) HasAnnualResult() bool {
	if o != nil && !IsNil(o.AnnualResult) {
		return true
	}

	return false
}

// SetAnnualResult gets a reference to the given []SearchCompanyDataTypeAssetsAggregateValuesInner and assigns it to the AnnualResult field.
func (o *SearchCompanyDataType) SetAnnualResult(v []SearchCompanyDataTypeAssetsAggregateValuesInner) {
	o.AnnualResult = v
}

func (o SearchCompanyDataType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchCompanyDataType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IdentificationCode) {
		toSerialize["identificationCode"] = o.IdentificationCode
	}
	if !IsNil(o.CrifNumber) {
		toSerialize["crifNumber"] = o.CrifNumber
	}
	if !IsNil(o.CompanyUnitId) {
		toSerialize["companyUnitId"] = o.CompanyUnitId
	}
	if !IsNil(o.PortfolioAssociated) {
		toSerialize["portfolioAssociated"] = o.PortfolioAssociated
	}
	if !IsNil(o.CompanyName) {
		toSerialize["companyName"] = o.CompanyName
	}
	if !IsNil(o.Town) {
		toSerialize["town"] = o.Town
	}
	if !IsNil(o.Ateco) {
		toSerialize["ateco"] = o.Ateco
	}
	if !IsNil(o.OfficeType) {
		toSerialize["officeType"] = o.OfficeType
	}
	if !IsNil(o.CompanyDetails) {
		toSerialize["companyDetails"] = o.CompanyDetails
	}
	if !IsNil(o.LegalForm) {
		toSerialize["legalForm"] = o.LegalForm
	}
	if !IsNil(o.CompanyStatus) {
		toSerialize["companyStatus"] = o.CompanyStatus
	}
	if !IsNil(o.CompanyDates) {
		toSerialize["companyDates"] = o.CompanyDates
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.IstatTownCode) {
		toSerialize["istatTownCode"] = o.IstatTownCode
	}
	if !IsNil(o.GeoCoordinates) {
		toSerialize["geoCoordinates"] = o.GeoCoordinates
	}
	if !IsNil(o.Marketable) {
		toSerialize["marketable"] = o.Marketable
	}
	if !IsNil(o.Branches) {
		toSerialize["branches"] = o.Branches
	}
	if !IsNil(o.AtecoClassification) {
		toSerialize["atecoClassification"] = o.AtecoClassification
	}
	if !IsNil(o.InternationalClassification) {
		toSerialize["internationalClassification"] = o.InternationalClassification
	}
	if !IsNil(o.Ecofin) {
		toSerialize["ecofin"] = o.Ecofin
	}
	if !IsNil(o.OperatingResults) {
		toSerialize["operatingResults"] = o.OperatingResults
	}
	if !IsNil(o.Employees) {
		toSerialize["employees"] = o.Employees
	}
	if !IsNil(o.EmployeesStatistic) {
		toSerialize["employeesStatistic"] = o.EmployeesStatistic
	}
	if !IsNil(o.Mail) {
		toSerialize["mail"] = o.Mail
	}
	if !IsNil(o.Pec) {
		toSerialize["pec"] = o.Pec
	}
	if !IsNil(o.Contacts) {
		toSerialize["contacts"] = o.Contacts
	}
	if !IsNil(o.WebAndSocial) {
		toSerialize["webAndSocial"] = o.WebAndSocial
	}
	if !IsNil(o.StateOwned) {
		toSerialize["stateOwned"] = o.StateOwned
	}
	if !IsNil(o.StateOwnedTelco) {
		toSerialize["stateOwnedTelco"] = o.StateOwnedTelco
	}
	if !IsNil(o.PublicTenders) {
		toSerialize["publicTenders"] = o.PublicTenders
	}
	if !IsNil(o.ForeignTrade) {
		toSerialize["foreignTrade"] = o.ForeignTrade
	}
	if !IsNil(o.InnovativeSmeAndSu) {
		toSerialize["innovativeSmeAndSu"] = o.InnovativeSmeAndSu
	}
	if !IsNil(o.Managers) {
		toSerialize["managers"] = o.Managers
	}
	if !IsNil(o.ShareholdersInfo) {
		toSerialize["shareholdersInfo"] = o.ShareholdersInfo
	}
	if !IsNil(o.CorporateGroups) {
		toSerialize["corporateGroups"] = o.CorporateGroups
	}
	if !IsNil(o.Subsidiaries) {
		toSerialize["subsidiaries"] = o.Subsidiaries
	}
	if !IsNil(o.AffiliateCompanies) {
		toSerialize["affiliateCompanies"] = o.AffiliateCompanies
	}
	if !IsNil(o.ArtisanBusinessRegistry) {
		toSerialize["artisanBusinessRegistry"] = o.ArtisanBusinessRegistry
	}
	if !IsNil(o.SoaCertification) {
		toSerialize["soaCertification"] = o.SoaCertification
	}
	if !IsNil(o.IsoCertifications) {
		toSerialize["isoCertifications"] = o.IsoCertifications
	}
	if !IsNil(o.FinancialCycle) {
		toSerialize["financialCycle"] = o.FinancialCycle
	}
	if !IsNil(o.CoverageRatios) {
		toSerialize["coverageRatios"] = o.CoverageRatios
	}
	if !IsNil(o.Efficiency) {
		toSerialize["efficiency"] = o.Efficiency
	}
	if !IsNil(o.LeverageRatios) {
		toSerialize["leverageRatios"] = o.LeverageRatios
	}
	if !IsNil(o.LiquidityRatios) {
		toSerialize["liquidityRatios"] = o.LiquidityRatios
	}
	if !IsNil(o.Profitability) {
		toSerialize["profitability"] = o.Profitability
	}
	if !IsNil(o.FinancialBurden) {
		toSerialize["financialBurden"] = o.FinancialBurden
	}
	if !IsNil(o.Indebtedness) {
		toSerialize["indebtedness"] = o.Indebtedness
	}
	if !IsNil(o.FinancialStability) {
		toSerialize["financialStability"] = o.FinancialStability
	}
	if !IsNil(o.StructureRatios) {
		toSerialize["structureRatios"] = o.StructureRatios
	}
	if !IsNil(o.Development) {
		toSerialize["development"] = o.Development
	}
	if !IsNil(o.FinancialStatementKpi) {
		toSerialize["financialStatementKpi"] = o.FinancialStatementKpi
	}
	if !IsNil(o.TelcoAnalytics) {
		toSerialize["telcoAnalytics"] = o.TelcoAnalytics
	}
	if !IsNil(o.Seasonality) {
		toSerialize["seasonality"] = o.Seasonality
	}
	if !IsNil(o.CreditNeeds) {
		toSerialize["creditNeeds"] = o.CreditNeeds
	}
	if !IsNil(o.CribisDnBRating) {
		toSerialize["cribisDnBRating"] = o.CribisDnBRating
	}
	if !IsNil(o.FinancialStrenght) {
		toSerialize["financialStrenght"] = o.FinancialStrenght
	}
	if !IsNil(o.FailureScore) {
		toSerialize["failureScore"] = o.FailureScore
	}
	if !IsNil(o.CribisDnBPaydex) {
		toSerialize["cribisDnBPaydex"] = o.CribisDnBPaydex
	}
	if !IsNil(o.DelinquencyScore) {
		toSerialize["delinquencyScore"] = o.DelinquencyScore
	}
	if !IsNil(o.CribisDnBCommercialCreditAppraisal) {
		toSerialize["cribisDnBCommercialCreditAppraisal"] = o.CribisDnBCommercialCreditAppraisal
	}
	if !IsNil(o.ItpRisk) {
		toSerialize["itpRisk"] = o.ItpRisk
	}
	if !IsNil(o.GovernanceRiskIndex) {
		toSerialize["governanceRiskIndex"] = o.GovernanceRiskIndex
	}
	if !IsNil(o.CrifBusinessIndex) {
		toSerialize["crifBusinessIndex"] = o.CrifBusinessIndex
	}
	if !IsNil(o.IndustryRating) {
		toSerialize["industryRating"] = o.IndustryRating
	}
	if !IsNil(o.DelinquencySectorRating) {
		toSerialize["delinquencySectorRating"] = o.DelinquencySectorRating
	}
	if !IsNil(o.IndustryFailureScore) {
		toSerialize["industryFailureScore"] = o.IndustryFailureScore
	}
	if !IsNil(o.IndustryPaydex) {
		toSerialize["industryPaydex"] = o.IndustryPaydex
	}
	if !IsNil(o.CribisScoreStateOwned) {
		toSerialize["cribisScoreStateOwned"] = o.CribisScoreStateOwned
	}
	if !IsNil(o.FinancialEconomicScore) {
		toSerialize["financialEconomicScore"] = o.FinancialEconomicScore
	}
	if !IsNil(o.TerritorialScore) {
		toSerialize["territorialScore"] = o.TerritorialScore
	}
	if !IsNil(o.SupplierScore) {
		toSerialize["supplierScore"] = o.SupplierScore
	}
	if !IsNil(o.Utilities) {
		toSerialize["utilities"] = o.Utilities
	}
	if !IsNil(o.RetailAnalytics) {
		toSerialize["retailAnalytics"] = o.RetailAnalytics
	}
	if !IsNil(o.InternazionalizationScore) {
		toSerialize["internazionalizationScore"] = o.InternazionalizationScore
	}
	if !IsNil(o.DigitalAttitudeScore) {
		toSerialize["digitalAttitudeScore"] = o.DigitalAttitudeScore
	}
	if !IsNil(o.InnovationScore) {
		toSerialize["innovationScore"] = o.InnovationScore
	}
	if !IsNil(o.EstimatedTurnover) {
		toSerialize["estimatedTurnover"] = o.EstimatedTurnover
	}
	if !IsNil(o.CompanyIdentification) {
		toSerialize["companyIdentification"] = o.CompanyIdentification
	}
	if !IsNil(o.InternationalIdentification) {
		toSerialize["internationalIdentification"] = o.InternationalIdentification
	}
	if !IsNil(o.AffidabilityScore) {
		toSerialize["affidabilityScore"] = o.AffidabilityScore
	}
	if !IsNil(o.SemanticCluster) {
		toSerialize["semanticCluster"] = o.SemanticCluster
	}
	if !IsNil(o.AssetsAggregateValues) {
		toSerialize["assetsAggregateValues"] = o.AssetsAggregateValues
	}
	if !IsNil(o.CreditsToShareholders) {
		toSerialize["creditsToShareholders"] = o.CreditsToShareholders
	}
	if !IsNil(o.IntangibleFixedAssets) {
		toSerialize["intangibleFixedAssets"] = o.IntangibleFixedAssets
	}
	if !IsNil(o.TangibleFixedAssets) {
		toSerialize["tangibleFixedAssets"] = o.TangibleFixedAssets
	}
	if !IsNil(o.FinancialFixedAssets) {
		toSerialize["financialFixedAssets"] = o.FinancialFixedAssets
	}
	if !IsNil(o.Inventory) {
		toSerialize["inventory"] = o.Inventory
	}
	if !IsNil(o.Credits) {
		toSerialize["credits"] = o.Credits
	}
	if !IsNil(o.FinancialAssets) {
		toSerialize["financialAssets"] = o.FinancialAssets
	}
	if !IsNil(o.CashEquivalents) {
		toSerialize["cashEquivalents"] = o.CashEquivalents
	}
	if !IsNil(o.LiabilitiesAggregateValues) {
		toSerialize["liabilitiesAggregateValues"] = o.LiabilitiesAggregateValues
	}
	if !IsNil(o.NetWorth) {
		toSerialize["netWorth"] = o.NetWorth
	}
	if !IsNil(o.RiskProvisions) {
		toSerialize["riskProvisions"] = o.RiskProvisions
	}
	if !IsNil(o.Debts) {
		toSerialize["debts"] = o.Debts
	}
	if !IsNil(o.IncomeStatementAggregateValues) {
		toSerialize["incomeStatementAggregateValues"] = o.IncomeStatementAggregateValues
	}
	if !IsNil(o.ProductionValue) {
		toSerialize["productionValue"] = o.ProductionValue
	}
	if !IsNil(o.ProductionCosts) {
		toSerialize["productionCosts"] = o.ProductionCosts
	}
	if !IsNil(o.RevenuesFinancialCharges) {
		toSerialize["revenuesFinancialCharges"] = o.RevenuesFinancialCharges
	}
	if !IsNil(o.Adjustments) {
		toSerialize["adjustments"] = o.Adjustments
	}
	if !IsNil(o.AnnualResult) {
		toSerialize["annualResult"] = o.AnnualResult
	}
	return toSerialize, nil
}

type NullableSearchCompanyDataType struct {
	value *SearchCompanyDataType
	isSet bool
}

func (v NullableSearchCompanyDataType) Get() *SearchCompanyDataType {
	return v.value
}

func (v *NullableSearchCompanyDataType) Set(val *SearchCompanyDataType) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchCompanyDataType) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchCompanyDataType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchCompanyDataType(val *SearchCompanyDataType) *NullableSearchCompanyDataType {
	return &NullableSearchCompanyDataType{value: val, isSet: true}
}

func (v NullableSearchCompanyDataType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchCompanyDataType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


