/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
)

// checks if the SearchCompanyDataTypeLiquidityRatios type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchCompanyDataTypeLiquidityRatios{}

// SearchCompanyDataTypeLiquidityRatios struct for SearchCompanyDataTypeLiquidityRatios
type SearchCompanyDataTypeLiquidityRatios struct {
	CashShortTermFinancialDebt *float32 `json:"cashShortTermFinancialDebt,omitempty"`
	CashShortTermBankDebt *float32 `json:"cashShortTermBankDebt,omitempty"`
	CashTotalShortTermDebt *float32 `json:"cashTotalShortTermDebt,omitempty"`
	FcfShortTermFinancialDebt *float32 `json:"fcfShortTermFinancialDebt,omitempty"`
}

// NewSearchCompanyDataTypeLiquidityRatios instantiates a new SearchCompanyDataTypeLiquidityRatios object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchCompanyDataTypeLiquidityRatios() *SearchCompanyDataTypeLiquidityRatios {
	this := SearchCompanyDataTypeLiquidityRatios{}
	return &this
}

// NewSearchCompanyDataTypeLiquidityRatiosWithDefaults instantiates a new SearchCompanyDataTypeLiquidityRatios object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchCompanyDataTypeLiquidityRatiosWithDefaults() *SearchCompanyDataTypeLiquidityRatios {
	this := SearchCompanyDataTypeLiquidityRatios{}
	return &this
}

// GetCashShortTermFinancialDebt returns the CashShortTermFinancialDebt field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeLiquidityRatios) GetCashShortTermFinancialDebt() float32 {
	if o == nil || IsNil(o.CashShortTermFinancialDebt) {
		var ret float32
		return ret
	}
	return *o.CashShortTermFinancialDebt
}

// GetCashShortTermFinancialDebtOk returns a tuple with the CashShortTermFinancialDebt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeLiquidityRatios) GetCashShortTermFinancialDebtOk() (*float32, bool) {
	if o == nil || IsNil(o.CashShortTermFinancialDebt) {
		return nil, false
	}
	return o.CashShortTermFinancialDebt, true
}

// HasCashShortTermFinancialDebt returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeLiquidityRatios) HasCashShortTermFinancialDebt() bool {
	if o != nil && !IsNil(o.CashShortTermFinancialDebt) {
		return true
	}

	return false
}

// SetCashShortTermFinancialDebt gets a reference to the given float32 and assigns it to the CashShortTermFinancialDebt field.
func (o *SearchCompanyDataTypeLiquidityRatios) SetCashShortTermFinancialDebt(v float32) {
	o.CashShortTermFinancialDebt = &v
}

// GetCashShortTermBankDebt returns the CashShortTermBankDebt field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeLiquidityRatios) GetCashShortTermBankDebt() float32 {
	if o == nil || IsNil(o.CashShortTermBankDebt) {
		var ret float32
		return ret
	}
	return *o.CashShortTermBankDebt
}

// GetCashShortTermBankDebtOk returns a tuple with the CashShortTermBankDebt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeLiquidityRatios) GetCashShortTermBankDebtOk() (*float32, bool) {
	if o == nil || IsNil(o.CashShortTermBankDebt) {
		return nil, false
	}
	return o.CashShortTermBankDebt, true
}

// HasCashShortTermBankDebt returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeLiquidityRatios) HasCashShortTermBankDebt() bool {
	if o != nil && !IsNil(o.CashShortTermBankDebt) {
		return true
	}

	return false
}

// SetCashShortTermBankDebt gets a reference to the given float32 and assigns it to the CashShortTermBankDebt field.
func (o *SearchCompanyDataTypeLiquidityRatios) SetCashShortTermBankDebt(v float32) {
	o.CashShortTermBankDebt = &v
}

// GetCashTotalShortTermDebt returns the CashTotalShortTermDebt field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeLiquidityRatios) GetCashTotalShortTermDebt() float32 {
	if o == nil || IsNil(o.CashTotalShortTermDebt) {
		var ret float32
		return ret
	}
	return *o.CashTotalShortTermDebt
}

// GetCashTotalShortTermDebtOk returns a tuple with the CashTotalShortTermDebt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeLiquidityRatios) GetCashTotalShortTermDebtOk() (*float32, bool) {
	if o == nil || IsNil(o.CashTotalShortTermDebt) {
		return nil, false
	}
	return o.CashTotalShortTermDebt, true
}

// HasCashTotalShortTermDebt returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeLiquidityRatios) HasCashTotalShortTermDebt() bool {
	if o != nil && !IsNil(o.CashTotalShortTermDebt) {
		return true
	}

	return false
}

// SetCashTotalShortTermDebt gets a reference to the given float32 and assigns it to the CashTotalShortTermDebt field.
func (o *SearchCompanyDataTypeLiquidityRatios) SetCashTotalShortTermDebt(v float32) {
	o.CashTotalShortTermDebt = &v
}

// GetFcfShortTermFinancialDebt returns the FcfShortTermFinancialDebt field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeLiquidityRatios) GetFcfShortTermFinancialDebt() float32 {
	if o == nil || IsNil(o.FcfShortTermFinancialDebt) {
		var ret float32
		return ret
	}
	return *o.FcfShortTermFinancialDebt
}

// GetFcfShortTermFinancialDebtOk returns a tuple with the FcfShortTermFinancialDebt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeLiquidityRatios) GetFcfShortTermFinancialDebtOk() (*float32, bool) {
	if o == nil || IsNil(o.FcfShortTermFinancialDebt) {
		return nil, false
	}
	return o.FcfShortTermFinancialDebt, true
}

// HasFcfShortTermFinancialDebt returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeLiquidityRatios) HasFcfShortTermFinancialDebt() bool {
	if o != nil && !IsNil(o.FcfShortTermFinancialDebt) {
		return true
	}

	return false
}

// SetFcfShortTermFinancialDebt gets a reference to the given float32 and assigns it to the FcfShortTermFinancialDebt field.
func (o *SearchCompanyDataTypeLiquidityRatios) SetFcfShortTermFinancialDebt(v float32) {
	o.FcfShortTermFinancialDebt = &v
}

func (o SearchCompanyDataTypeLiquidityRatios) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchCompanyDataTypeLiquidityRatios) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CashShortTermFinancialDebt) {
		toSerialize["cashShortTermFinancialDebt"] = o.CashShortTermFinancialDebt
	}
	if !IsNil(o.CashShortTermBankDebt) {
		toSerialize["cashShortTermBankDebt"] = o.CashShortTermBankDebt
	}
	if !IsNil(o.CashTotalShortTermDebt) {
		toSerialize["cashTotalShortTermDebt"] = o.CashTotalShortTermDebt
	}
	if !IsNil(o.FcfShortTermFinancialDebt) {
		toSerialize["fcfShortTermFinancialDebt"] = o.FcfShortTermFinancialDebt
	}
	return toSerialize, nil
}

type NullableSearchCompanyDataTypeLiquidityRatios struct {
	value *SearchCompanyDataTypeLiquidityRatios
	isSet bool
}

func (v NullableSearchCompanyDataTypeLiquidityRatios) Get() *SearchCompanyDataTypeLiquidityRatios {
	return v.value
}

func (v *NullableSearchCompanyDataTypeLiquidityRatios) Set(val *SearchCompanyDataTypeLiquidityRatios) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchCompanyDataTypeLiquidityRatios) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchCompanyDataTypeLiquidityRatios) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchCompanyDataTypeLiquidityRatios(val *SearchCompanyDataTypeLiquidityRatios) *NullableSearchCompanyDataTypeLiquidityRatios {
	return &NullableSearchCompanyDataTypeLiquidityRatios{value: val, isSet: true}
}

func (v NullableSearchCompanyDataTypeLiquidityRatios) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchCompanyDataTypeLiquidityRatios) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


