/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
)

// checks if the SearchCompanyDataTypeCompanyIdentification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchCompanyDataTypeCompanyIdentification{}

// SearchCompanyDataTypeCompanyIdentification struct for SearchCompanyDataTypeCompanyIdentification
type SearchCompanyDataTypeCompanyIdentification struct {
	DunsNumber *string `json:"dunsNumber,omitempty"`
}

// NewSearchCompanyDataTypeCompanyIdentification instantiates a new SearchCompanyDataTypeCompanyIdentification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchCompanyDataTypeCompanyIdentification() *SearchCompanyDataTypeCompanyIdentification {
	this := SearchCompanyDataTypeCompanyIdentification{}
	return &this
}

// NewSearchCompanyDataTypeCompanyIdentificationWithDefaults instantiates a new SearchCompanyDataTypeCompanyIdentification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchCompanyDataTypeCompanyIdentificationWithDefaults() *SearchCompanyDataTypeCompanyIdentification {
	this := SearchCompanyDataTypeCompanyIdentification{}
	return &this
}

// GetDunsNumber returns the DunsNumber field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeCompanyIdentification) GetDunsNumber() string {
	if o == nil || IsNil(o.DunsNumber) {
		var ret string
		return ret
	}
	return *o.DunsNumber
}

// GetDunsNumberOk returns a tuple with the DunsNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeCompanyIdentification) GetDunsNumberOk() (*string, bool) {
	if o == nil || IsNil(o.DunsNumber) {
		return nil, false
	}
	return o.DunsNumber, true
}

// HasDunsNumber returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeCompanyIdentification) HasDunsNumber() bool {
	if o != nil && !IsNil(o.DunsNumber) {
		return true
	}

	return false
}

// SetDunsNumber gets a reference to the given string and assigns it to the DunsNumber field.
func (o *SearchCompanyDataTypeCompanyIdentification) SetDunsNumber(v string) {
	o.DunsNumber = &v
}

func (o SearchCompanyDataTypeCompanyIdentification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchCompanyDataTypeCompanyIdentification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DunsNumber) {
		toSerialize["dunsNumber"] = o.DunsNumber
	}
	return toSerialize, nil
}

type NullableSearchCompanyDataTypeCompanyIdentification struct {
	value *SearchCompanyDataTypeCompanyIdentification
	isSet bool
}

func (v NullableSearchCompanyDataTypeCompanyIdentification) Get() *SearchCompanyDataTypeCompanyIdentification {
	return v.value
}

func (v *NullableSearchCompanyDataTypeCompanyIdentification) Set(val *SearchCompanyDataTypeCompanyIdentification) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchCompanyDataTypeCompanyIdentification) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchCompanyDataTypeCompanyIdentification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchCompanyDataTypeCompanyIdentification(val *SearchCompanyDataTypeCompanyIdentification) *NullableSearchCompanyDataTypeCompanyIdentification {
	return &NullableSearchCompanyDataTypeCompanyIdentification{value: val, isSet: true}
}

func (v NullableSearchCompanyDataTypeCompanyIdentification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchCompanyDataTypeCompanyIdentification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


