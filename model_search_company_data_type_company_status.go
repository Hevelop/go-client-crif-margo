/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
)

// checks if the SearchCompanyDataTypeCompanyStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchCompanyDataTypeCompanyStatus{}

// SearchCompanyDataTypeCompanyStatus struct for SearchCompanyDataTypeCompanyStatus
type SearchCompanyDataTypeCompanyStatus struct {
	ActivityStatus *SearchCompanyDataTypeCompanyStatusActivityStatus `json:"activityStatus,omitempty"`
}

// NewSearchCompanyDataTypeCompanyStatus instantiates a new SearchCompanyDataTypeCompanyStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchCompanyDataTypeCompanyStatus() *SearchCompanyDataTypeCompanyStatus {
	this := SearchCompanyDataTypeCompanyStatus{}
	return &this
}

// NewSearchCompanyDataTypeCompanyStatusWithDefaults instantiates a new SearchCompanyDataTypeCompanyStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchCompanyDataTypeCompanyStatusWithDefaults() *SearchCompanyDataTypeCompanyStatus {
	this := SearchCompanyDataTypeCompanyStatus{}
	return &this
}

// GetActivityStatus returns the ActivityStatus field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeCompanyStatus) GetActivityStatus() SearchCompanyDataTypeCompanyStatusActivityStatus {
	if o == nil || IsNil(o.ActivityStatus) {
		var ret SearchCompanyDataTypeCompanyStatusActivityStatus
		return ret
	}
	return *o.ActivityStatus
}

// GetActivityStatusOk returns a tuple with the ActivityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeCompanyStatus) GetActivityStatusOk() (*SearchCompanyDataTypeCompanyStatusActivityStatus, bool) {
	if o == nil || IsNil(o.ActivityStatus) {
		return nil, false
	}
	return o.ActivityStatus, true
}

// HasActivityStatus returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeCompanyStatus) HasActivityStatus() bool {
	if o != nil && !IsNil(o.ActivityStatus) {
		return true
	}

	return false
}

// SetActivityStatus gets a reference to the given SearchCompanyDataTypeCompanyStatusActivityStatus and assigns it to the ActivityStatus field.
func (o *SearchCompanyDataTypeCompanyStatus) SetActivityStatus(v SearchCompanyDataTypeCompanyStatusActivityStatus) {
	o.ActivityStatus = &v
}

func (o SearchCompanyDataTypeCompanyStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchCompanyDataTypeCompanyStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActivityStatus) {
		toSerialize["activityStatus"] = o.ActivityStatus
	}
	return toSerialize, nil
}

type NullableSearchCompanyDataTypeCompanyStatus struct {
	value *SearchCompanyDataTypeCompanyStatus
	isSet bool
}

func (v NullableSearchCompanyDataTypeCompanyStatus) Get() *SearchCompanyDataTypeCompanyStatus {
	return v.value
}

func (v *NullableSearchCompanyDataTypeCompanyStatus) Set(val *SearchCompanyDataTypeCompanyStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchCompanyDataTypeCompanyStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchCompanyDataTypeCompanyStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchCompanyDataTypeCompanyStatus(val *SearchCompanyDataTypeCompanyStatus) *NullableSearchCompanyDataTypeCompanyStatus {
	return &NullableSearchCompanyDataTypeCompanyStatus{value: val, isSet: true}
}

func (v NullableSearchCompanyDataTypeCompanyStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchCompanyDataTypeCompanyStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


