/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
)

// checks if the FiltersTypeDomainfiltersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FiltersTypeDomainfiltersInner{}

// FiltersTypeDomainfiltersInner struct for FiltersTypeDomainfiltersInner
type FiltersTypeDomainfiltersInner struct {
	FilterId *string `json:"filterId,omitempty"`
	Codes []string `json:"codes,omitempty"`
}

// NewFiltersTypeDomainfiltersInner instantiates a new FiltersTypeDomainfiltersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFiltersTypeDomainfiltersInner() *FiltersTypeDomainfiltersInner {
	this := FiltersTypeDomainfiltersInner{}
	return &this
}

// NewFiltersTypeDomainfiltersInnerWithDefaults instantiates a new FiltersTypeDomainfiltersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFiltersTypeDomainfiltersInnerWithDefaults() *FiltersTypeDomainfiltersInner {
	this := FiltersTypeDomainfiltersInner{}
	return &this
}

// GetFilterId returns the FilterId field value if set, zero value otherwise.
func (o *FiltersTypeDomainfiltersInner) GetFilterId() string {
	if o == nil || IsNil(o.FilterId) {
		var ret string
		return ret
	}
	return *o.FilterId
}

// GetFilterIdOk returns a tuple with the FilterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersTypeDomainfiltersInner) GetFilterIdOk() (*string, bool) {
	if o == nil || IsNil(o.FilterId) {
		return nil, false
	}
	return o.FilterId, true
}

// HasFilterId returns a boolean if a field has been set.
func (o *FiltersTypeDomainfiltersInner) HasFilterId() bool {
	if o != nil && !IsNil(o.FilterId) {
		return true
	}

	return false
}

// SetFilterId gets a reference to the given string and assigns it to the FilterId field.
func (o *FiltersTypeDomainfiltersInner) SetFilterId(v string) {
	o.FilterId = &v
}

// GetCodes returns the Codes field value if set, zero value otherwise.
func (o *FiltersTypeDomainfiltersInner) GetCodes() []string {
	if o == nil || IsNil(o.Codes) {
		var ret []string
		return ret
	}
	return o.Codes
}

// GetCodesOk returns a tuple with the Codes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FiltersTypeDomainfiltersInner) GetCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.Codes) {
		return nil, false
	}
	return o.Codes, true
}

// HasCodes returns a boolean if a field has been set.
func (o *FiltersTypeDomainfiltersInner) HasCodes() bool {
	if o != nil && !IsNil(o.Codes) {
		return true
	}

	return false
}

// SetCodes gets a reference to the given []string and assigns it to the Codes field.
func (o *FiltersTypeDomainfiltersInner) SetCodes(v []string) {
	o.Codes = v
}

func (o FiltersTypeDomainfiltersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FiltersTypeDomainfiltersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FilterId) {
		toSerialize["filterId"] = o.FilterId
	}
	if !IsNil(o.Codes) {
		toSerialize["codes"] = o.Codes
	}
	return toSerialize, nil
}

type NullableFiltersTypeDomainfiltersInner struct {
	value *FiltersTypeDomainfiltersInner
	isSet bool
}

func (v NullableFiltersTypeDomainfiltersInner) Get() *FiltersTypeDomainfiltersInner {
	return v.value
}

func (v *NullableFiltersTypeDomainfiltersInner) Set(val *FiltersTypeDomainfiltersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableFiltersTypeDomainfiltersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableFiltersTypeDomainfiltersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFiltersTypeDomainfiltersInner(val *FiltersTypeDomainfiltersInner) *NullableFiltersTypeDomainfiltersInner {
	return &NullableFiltersTypeDomainfiltersInner{value: val, isSet: true}
}

func (v NullableFiltersTypeDomainfiltersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFiltersTypeDomainfiltersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


