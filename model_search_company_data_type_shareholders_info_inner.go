/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
)

// checks if the SearchCompanyDataTypeShareholdersInfoInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchCompanyDataTypeShareholdersInfoInner{}

// SearchCompanyDataTypeShareholdersInfoInner struct for SearchCompanyDataTypeShareholdersInfoInner
type SearchCompanyDataTypeShareholdersInfoInner struct {
	Shareholders []SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner `json:"shareholders,omitempty"`
	PercentShare *float32 `json:"percentShare,omitempty"`
}

// NewSearchCompanyDataTypeShareholdersInfoInner instantiates a new SearchCompanyDataTypeShareholdersInfoInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchCompanyDataTypeShareholdersInfoInner() *SearchCompanyDataTypeShareholdersInfoInner {
	this := SearchCompanyDataTypeShareholdersInfoInner{}
	return &this
}

// NewSearchCompanyDataTypeShareholdersInfoInnerWithDefaults instantiates a new SearchCompanyDataTypeShareholdersInfoInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchCompanyDataTypeShareholdersInfoInnerWithDefaults() *SearchCompanyDataTypeShareholdersInfoInner {
	this := SearchCompanyDataTypeShareholdersInfoInner{}
	return &this
}

// GetShareholders returns the Shareholders field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeShareholdersInfoInner) GetShareholders() []SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner {
	if o == nil || IsNil(o.Shareholders) {
		var ret []SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner
		return ret
	}
	return o.Shareholders
}

// GetShareholdersOk returns a tuple with the Shareholders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeShareholdersInfoInner) GetShareholdersOk() ([]SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner, bool) {
	if o == nil || IsNil(o.Shareholders) {
		return nil, false
	}
	return o.Shareholders, true
}

// HasShareholders returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeShareholdersInfoInner) HasShareholders() bool {
	if o != nil && !IsNil(o.Shareholders) {
		return true
	}

	return false
}

// SetShareholders gets a reference to the given []SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner and assigns it to the Shareholders field.
func (o *SearchCompanyDataTypeShareholdersInfoInner) SetShareholders(v []SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) {
	o.Shareholders = v
}

// GetPercentShare returns the PercentShare field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeShareholdersInfoInner) GetPercentShare() float32 {
	if o == nil || IsNil(o.PercentShare) {
		var ret float32
		return ret
	}
	return *o.PercentShare
}

// GetPercentShareOk returns a tuple with the PercentShare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeShareholdersInfoInner) GetPercentShareOk() (*float32, bool) {
	if o == nil || IsNil(o.PercentShare) {
		return nil, false
	}
	return o.PercentShare, true
}

// HasPercentShare returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeShareholdersInfoInner) HasPercentShare() bool {
	if o != nil && !IsNil(o.PercentShare) {
		return true
	}

	return false
}

// SetPercentShare gets a reference to the given float32 and assigns it to the PercentShare field.
func (o *SearchCompanyDataTypeShareholdersInfoInner) SetPercentShare(v float32) {
	o.PercentShare = &v
}

func (o SearchCompanyDataTypeShareholdersInfoInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchCompanyDataTypeShareholdersInfoInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Shareholders) {
		toSerialize["shareholders"] = o.Shareholders
	}
	if !IsNil(o.PercentShare) {
		toSerialize["percentShare"] = o.PercentShare
	}
	return toSerialize, nil
}

type NullableSearchCompanyDataTypeShareholdersInfoInner struct {
	value *SearchCompanyDataTypeShareholdersInfoInner
	isSet bool
}

func (v NullableSearchCompanyDataTypeShareholdersInfoInner) Get() *SearchCompanyDataTypeShareholdersInfoInner {
	return v.value
}

func (v *NullableSearchCompanyDataTypeShareholdersInfoInner) Set(val *SearchCompanyDataTypeShareholdersInfoInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchCompanyDataTypeShareholdersInfoInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchCompanyDataTypeShareholdersInfoInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchCompanyDataTypeShareholdersInfoInner(val *SearchCompanyDataTypeShareholdersInfoInner) *NullableSearchCompanyDataTypeShareholdersInfoInner {
	return &NullableSearchCompanyDataTypeShareholdersInfoInner{value: val, isSet: true}
}

func (v NullableSearchCompanyDataTypeShareholdersInfoInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchCompanyDataTypeShareholdersInfoInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


