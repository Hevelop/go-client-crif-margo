/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
)

// checks if the SearchCompanyDataTypeLegalForm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchCompanyDataTypeLegalForm{}

// SearchCompanyDataTypeLegalForm struct for SearchCompanyDataTypeLegalForm
type SearchCompanyDataTypeLegalForm struct {
	LegalForm *SearchCompanyDataTypeLegalFormLegalForm `json:"legalForm,omitempty"`
	DetailedLegalForm *SearchCompanyDataTypeLegalFormDetailedLegalForm `json:"detailedLegalForm,omitempty"`
}

// NewSearchCompanyDataTypeLegalForm instantiates a new SearchCompanyDataTypeLegalForm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchCompanyDataTypeLegalForm() *SearchCompanyDataTypeLegalForm {
	this := SearchCompanyDataTypeLegalForm{}
	return &this
}

// NewSearchCompanyDataTypeLegalFormWithDefaults instantiates a new SearchCompanyDataTypeLegalForm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchCompanyDataTypeLegalFormWithDefaults() *SearchCompanyDataTypeLegalForm {
	this := SearchCompanyDataTypeLegalForm{}
	return &this
}

// GetLegalForm returns the LegalForm field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeLegalForm) GetLegalForm() SearchCompanyDataTypeLegalFormLegalForm {
	if o == nil || IsNil(o.LegalForm) {
		var ret SearchCompanyDataTypeLegalFormLegalForm
		return ret
	}
	return *o.LegalForm
}

// GetLegalFormOk returns a tuple with the LegalForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeLegalForm) GetLegalFormOk() (*SearchCompanyDataTypeLegalFormLegalForm, bool) {
	if o == nil || IsNil(o.LegalForm) {
		return nil, false
	}
	return o.LegalForm, true
}

// HasLegalForm returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeLegalForm) HasLegalForm() bool {
	if o != nil && !IsNil(o.LegalForm) {
		return true
	}

	return false
}

// SetLegalForm gets a reference to the given SearchCompanyDataTypeLegalFormLegalForm and assigns it to the LegalForm field.
func (o *SearchCompanyDataTypeLegalForm) SetLegalForm(v SearchCompanyDataTypeLegalFormLegalForm) {
	o.LegalForm = &v
}

// GetDetailedLegalForm returns the DetailedLegalForm field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeLegalForm) GetDetailedLegalForm() SearchCompanyDataTypeLegalFormDetailedLegalForm {
	if o == nil || IsNil(o.DetailedLegalForm) {
		var ret SearchCompanyDataTypeLegalFormDetailedLegalForm
		return ret
	}
	return *o.DetailedLegalForm
}

// GetDetailedLegalFormOk returns a tuple with the DetailedLegalForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeLegalForm) GetDetailedLegalFormOk() (*SearchCompanyDataTypeLegalFormDetailedLegalForm, bool) {
	if o == nil || IsNil(o.DetailedLegalForm) {
		return nil, false
	}
	return o.DetailedLegalForm, true
}

// HasDetailedLegalForm returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeLegalForm) HasDetailedLegalForm() bool {
	if o != nil && !IsNil(o.DetailedLegalForm) {
		return true
	}

	return false
}

// SetDetailedLegalForm gets a reference to the given SearchCompanyDataTypeLegalFormDetailedLegalForm and assigns it to the DetailedLegalForm field.
func (o *SearchCompanyDataTypeLegalForm) SetDetailedLegalForm(v SearchCompanyDataTypeLegalFormDetailedLegalForm) {
	o.DetailedLegalForm = &v
}

func (o SearchCompanyDataTypeLegalForm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchCompanyDataTypeLegalForm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LegalForm) {
		toSerialize["legalForm"] = o.LegalForm
	}
	if !IsNil(o.DetailedLegalForm) {
		toSerialize["detailedLegalForm"] = o.DetailedLegalForm
	}
	return toSerialize, nil
}

type NullableSearchCompanyDataTypeLegalForm struct {
	value *SearchCompanyDataTypeLegalForm
	isSet bool
}

func (v NullableSearchCompanyDataTypeLegalForm) Get() *SearchCompanyDataTypeLegalForm {
	return v.value
}

func (v *NullableSearchCompanyDataTypeLegalForm) Set(val *SearchCompanyDataTypeLegalForm) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchCompanyDataTypeLegalForm) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchCompanyDataTypeLegalForm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchCompanyDataTypeLegalForm(val *SearchCompanyDataTypeLegalForm) *NullableSearchCompanyDataTypeLegalForm {
	return &NullableSearchCompanyDataTypeLegalForm{value: val, isSet: true}
}

func (v NullableSearchCompanyDataTypeLegalForm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchCompanyDataTypeLegalForm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


