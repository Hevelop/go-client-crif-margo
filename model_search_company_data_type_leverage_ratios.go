/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
)

// checks if the SearchCompanyDataTypeLeverageRatios type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchCompanyDataTypeLeverageRatios{}

// SearchCompanyDataTypeLeverageRatios struct for SearchCompanyDataTypeLeverageRatios
type SearchCompanyDataTypeLeverageRatios struct {
	PfnEbitda *float32 `json:"pfnEbitda,omitempty"`
	EbitdaNetLeverage *float32 `json:"ebitdaNetLeverage,omitempty"`
	FfoNetLeverage *float32 `json:"ffoNetLeverage,omitempty"`
	EbitdaGrossLeverage *float32 `json:"ebitdaGrossLeverage,omitempty"`
}

// NewSearchCompanyDataTypeLeverageRatios instantiates a new SearchCompanyDataTypeLeverageRatios object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchCompanyDataTypeLeverageRatios() *SearchCompanyDataTypeLeverageRatios {
	this := SearchCompanyDataTypeLeverageRatios{}
	return &this
}

// NewSearchCompanyDataTypeLeverageRatiosWithDefaults instantiates a new SearchCompanyDataTypeLeverageRatios object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchCompanyDataTypeLeverageRatiosWithDefaults() *SearchCompanyDataTypeLeverageRatios {
	this := SearchCompanyDataTypeLeverageRatios{}
	return &this
}

// GetPfnEbitda returns the PfnEbitda field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeLeverageRatios) GetPfnEbitda() float32 {
	if o == nil || IsNil(o.PfnEbitda) {
		var ret float32
		return ret
	}
	return *o.PfnEbitda
}

// GetPfnEbitdaOk returns a tuple with the PfnEbitda field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeLeverageRatios) GetPfnEbitdaOk() (*float32, bool) {
	if o == nil || IsNil(o.PfnEbitda) {
		return nil, false
	}
	return o.PfnEbitda, true
}

// HasPfnEbitda returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeLeverageRatios) HasPfnEbitda() bool {
	if o != nil && !IsNil(o.PfnEbitda) {
		return true
	}

	return false
}

// SetPfnEbitda gets a reference to the given float32 and assigns it to the PfnEbitda field.
func (o *SearchCompanyDataTypeLeverageRatios) SetPfnEbitda(v float32) {
	o.PfnEbitda = &v
}

// GetEbitdaNetLeverage returns the EbitdaNetLeverage field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeLeverageRatios) GetEbitdaNetLeverage() float32 {
	if o == nil || IsNil(o.EbitdaNetLeverage) {
		var ret float32
		return ret
	}
	return *o.EbitdaNetLeverage
}

// GetEbitdaNetLeverageOk returns a tuple with the EbitdaNetLeverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeLeverageRatios) GetEbitdaNetLeverageOk() (*float32, bool) {
	if o == nil || IsNil(o.EbitdaNetLeverage) {
		return nil, false
	}
	return o.EbitdaNetLeverage, true
}

// HasEbitdaNetLeverage returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeLeverageRatios) HasEbitdaNetLeverage() bool {
	if o != nil && !IsNil(o.EbitdaNetLeverage) {
		return true
	}

	return false
}

// SetEbitdaNetLeverage gets a reference to the given float32 and assigns it to the EbitdaNetLeverage field.
func (o *SearchCompanyDataTypeLeverageRatios) SetEbitdaNetLeverage(v float32) {
	o.EbitdaNetLeverage = &v
}

// GetFfoNetLeverage returns the FfoNetLeverage field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeLeverageRatios) GetFfoNetLeverage() float32 {
	if o == nil || IsNil(o.FfoNetLeverage) {
		var ret float32
		return ret
	}
	return *o.FfoNetLeverage
}

// GetFfoNetLeverageOk returns a tuple with the FfoNetLeverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeLeverageRatios) GetFfoNetLeverageOk() (*float32, bool) {
	if o == nil || IsNil(o.FfoNetLeverage) {
		return nil, false
	}
	return o.FfoNetLeverage, true
}

// HasFfoNetLeverage returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeLeverageRatios) HasFfoNetLeverage() bool {
	if o != nil && !IsNil(o.FfoNetLeverage) {
		return true
	}

	return false
}

// SetFfoNetLeverage gets a reference to the given float32 and assigns it to the FfoNetLeverage field.
func (o *SearchCompanyDataTypeLeverageRatios) SetFfoNetLeverage(v float32) {
	o.FfoNetLeverage = &v
}

// GetEbitdaGrossLeverage returns the EbitdaGrossLeverage field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeLeverageRatios) GetEbitdaGrossLeverage() float32 {
	if o == nil || IsNil(o.EbitdaGrossLeverage) {
		var ret float32
		return ret
	}
	return *o.EbitdaGrossLeverage
}

// GetEbitdaGrossLeverageOk returns a tuple with the EbitdaGrossLeverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeLeverageRatios) GetEbitdaGrossLeverageOk() (*float32, bool) {
	if o == nil || IsNil(o.EbitdaGrossLeverage) {
		return nil, false
	}
	return o.EbitdaGrossLeverage, true
}

// HasEbitdaGrossLeverage returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeLeverageRatios) HasEbitdaGrossLeverage() bool {
	if o != nil && !IsNil(o.EbitdaGrossLeverage) {
		return true
	}

	return false
}

// SetEbitdaGrossLeverage gets a reference to the given float32 and assigns it to the EbitdaGrossLeverage field.
func (o *SearchCompanyDataTypeLeverageRatios) SetEbitdaGrossLeverage(v float32) {
	o.EbitdaGrossLeverage = &v
}

func (o SearchCompanyDataTypeLeverageRatios) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchCompanyDataTypeLeverageRatios) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PfnEbitda) {
		toSerialize["pfnEbitda"] = o.PfnEbitda
	}
	if !IsNil(o.EbitdaNetLeverage) {
		toSerialize["ebitdaNetLeverage"] = o.EbitdaNetLeverage
	}
	if !IsNil(o.FfoNetLeverage) {
		toSerialize["ffoNetLeverage"] = o.FfoNetLeverage
	}
	if !IsNil(o.EbitdaGrossLeverage) {
		toSerialize["ebitdaGrossLeverage"] = o.EbitdaGrossLeverage
	}
	return toSerialize, nil
}

type NullableSearchCompanyDataTypeLeverageRatios struct {
	value *SearchCompanyDataTypeLeverageRatios
	isSet bool
}

func (v NullableSearchCompanyDataTypeLeverageRatios) Get() *SearchCompanyDataTypeLeverageRatios {
	return v.value
}

func (v *NullableSearchCompanyDataTypeLeverageRatios) Set(val *SearchCompanyDataTypeLeverageRatios) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchCompanyDataTypeLeverageRatios) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchCompanyDataTypeLeverageRatios) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchCompanyDataTypeLeverageRatios(val *SearchCompanyDataTypeLeverageRatios) *NullableSearchCompanyDataTypeLeverageRatios {
	return &NullableSearchCompanyDataTypeLeverageRatios{value: val, isSet: true}
}

func (v NullableSearchCompanyDataTypeLeverageRatios) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchCompanyDataTypeLeverageRatios) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


