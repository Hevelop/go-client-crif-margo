/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
)

// checks if the SearchCompanyDataTypeCoverageRatios type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchCompanyDataTypeCoverageRatios{}

// SearchCompanyDataTypeCoverageRatios struct for SearchCompanyDataTypeCoverageRatios
type SearchCompanyDataTypeCoverageRatios struct {
	EbitdaNetInterestCoverage *float32 `json:"ebitdaNetInterestCoverage,omitempty"`
	FfoNetInterestCoverage *float32 `json:"ffoNetInterestCoverage,omitempty"`
	EbitNetInterestCoverage *float32 `json:"ebitNetInterestCoverage,omitempty"`
	EbitdaGrossInterestCoverage *float32 `json:"ebitdaGrossInterestCoverage,omitempty"`
	EbitGrossInterestCoverage *float32 `json:"ebitGrossInterestCoverage,omitempty"`
}

// NewSearchCompanyDataTypeCoverageRatios instantiates a new SearchCompanyDataTypeCoverageRatios object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchCompanyDataTypeCoverageRatios() *SearchCompanyDataTypeCoverageRatios {
	this := SearchCompanyDataTypeCoverageRatios{}
	return &this
}

// NewSearchCompanyDataTypeCoverageRatiosWithDefaults instantiates a new SearchCompanyDataTypeCoverageRatios object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchCompanyDataTypeCoverageRatiosWithDefaults() *SearchCompanyDataTypeCoverageRatios {
	this := SearchCompanyDataTypeCoverageRatios{}
	return &this
}

// GetEbitdaNetInterestCoverage returns the EbitdaNetInterestCoverage field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeCoverageRatios) GetEbitdaNetInterestCoverage() float32 {
	if o == nil || IsNil(o.EbitdaNetInterestCoverage) {
		var ret float32
		return ret
	}
	return *o.EbitdaNetInterestCoverage
}

// GetEbitdaNetInterestCoverageOk returns a tuple with the EbitdaNetInterestCoverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeCoverageRatios) GetEbitdaNetInterestCoverageOk() (*float32, bool) {
	if o == nil || IsNil(o.EbitdaNetInterestCoverage) {
		return nil, false
	}
	return o.EbitdaNetInterestCoverage, true
}

// HasEbitdaNetInterestCoverage returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeCoverageRatios) HasEbitdaNetInterestCoverage() bool {
	if o != nil && !IsNil(o.EbitdaNetInterestCoverage) {
		return true
	}

	return false
}

// SetEbitdaNetInterestCoverage gets a reference to the given float32 and assigns it to the EbitdaNetInterestCoverage field.
func (o *SearchCompanyDataTypeCoverageRatios) SetEbitdaNetInterestCoverage(v float32) {
	o.EbitdaNetInterestCoverage = &v
}

// GetFfoNetInterestCoverage returns the FfoNetInterestCoverage field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeCoverageRatios) GetFfoNetInterestCoverage() float32 {
	if o == nil || IsNil(o.FfoNetInterestCoverage) {
		var ret float32
		return ret
	}
	return *o.FfoNetInterestCoverage
}

// GetFfoNetInterestCoverageOk returns a tuple with the FfoNetInterestCoverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeCoverageRatios) GetFfoNetInterestCoverageOk() (*float32, bool) {
	if o == nil || IsNil(o.FfoNetInterestCoverage) {
		return nil, false
	}
	return o.FfoNetInterestCoverage, true
}

// HasFfoNetInterestCoverage returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeCoverageRatios) HasFfoNetInterestCoverage() bool {
	if o != nil && !IsNil(o.FfoNetInterestCoverage) {
		return true
	}

	return false
}

// SetFfoNetInterestCoverage gets a reference to the given float32 and assigns it to the FfoNetInterestCoverage field.
func (o *SearchCompanyDataTypeCoverageRatios) SetFfoNetInterestCoverage(v float32) {
	o.FfoNetInterestCoverage = &v
}

// GetEbitNetInterestCoverage returns the EbitNetInterestCoverage field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeCoverageRatios) GetEbitNetInterestCoverage() float32 {
	if o == nil || IsNil(o.EbitNetInterestCoverage) {
		var ret float32
		return ret
	}
	return *o.EbitNetInterestCoverage
}

// GetEbitNetInterestCoverageOk returns a tuple with the EbitNetInterestCoverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeCoverageRatios) GetEbitNetInterestCoverageOk() (*float32, bool) {
	if o == nil || IsNil(o.EbitNetInterestCoverage) {
		return nil, false
	}
	return o.EbitNetInterestCoverage, true
}

// HasEbitNetInterestCoverage returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeCoverageRatios) HasEbitNetInterestCoverage() bool {
	if o != nil && !IsNil(o.EbitNetInterestCoverage) {
		return true
	}

	return false
}

// SetEbitNetInterestCoverage gets a reference to the given float32 and assigns it to the EbitNetInterestCoverage field.
func (o *SearchCompanyDataTypeCoverageRatios) SetEbitNetInterestCoverage(v float32) {
	o.EbitNetInterestCoverage = &v
}

// GetEbitdaGrossInterestCoverage returns the EbitdaGrossInterestCoverage field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeCoverageRatios) GetEbitdaGrossInterestCoverage() float32 {
	if o == nil || IsNil(o.EbitdaGrossInterestCoverage) {
		var ret float32
		return ret
	}
	return *o.EbitdaGrossInterestCoverage
}

// GetEbitdaGrossInterestCoverageOk returns a tuple with the EbitdaGrossInterestCoverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeCoverageRatios) GetEbitdaGrossInterestCoverageOk() (*float32, bool) {
	if o == nil || IsNil(o.EbitdaGrossInterestCoverage) {
		return nil, false
	}
	return o.EbitdaGrossInterestCoverage, true
}

// HasEbitdaGrossInterestCoverage returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeCoverageRatios) HasEbitdaGrossInterestCoverage() bool {
	if o != nil && !IsNil(o.EbitdaGrossInterestCoverage) {
		return true
	}

	return false
}

// SetEbitdaGrossInterestCoverage gets a reference to the given float32 and assigns it to the EbitdaGrossInterestCoverage field.
func (o *SearchCompanyDataTypeCoverageRatios) SetEbitdaGrossInterestCoverage(v float32) {
	o.EbitdaGrossInterestCoverage = &v
}

// GetEbitGrossInterestCoverage returns the EbitGrossInterestCoverage field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeCoverageRatios) GetEbitGrossInterestCoverage() float32 {
	if o == nil || IsNil(o.EbitGrossInterestCoverage) {
		var ret float32
		return ret
	}
	return *o.EbitGrossInterestCoverage
}

// GetEbitGrossInterestCoverageOk returns a tuple with the EbitGrossInterestCoverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeCoverageRatios) GetEbitGrossInterestCoverageOk() (*float32, bool) {
	if o == nil || IsNil(o.EbitGrossInterestCoverage) {
		return nil, false
	}
	return o.EbitGrossInterestCoverage, true
}

// HasEbitGrossInterestCoverage returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeCoverageRatios) HasEbitGrossInterestCoverage() bool {
	if o != nil && !IsNil(o.EbitGrossInterestCoverage) {
		return true
	}

	return false
}

// SetEbitGrossInterestCoverage gets a reference to the given float32 and assigns it to the EbitGrossInterestCoverage field.
func (o *SearchCompanyDataTypeCoverageRatios) SetEbitGrossInterestCoverage(v float32) {
	o.EbitGrossInterestCoverage = &v
}

func (o SearchCompanyDataTypeCoverageRatios) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchCompanyDataTypeCoverageRatios) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EbitdaNetInterestCoverage) {
		toSerialize["ebitdaNetInterestCoverage"] = o.EbitdaNetInterestCoverage
	}
	if !IsNil(o.FfoNetInterestCoverage) {
		toSerialize["ffoNetInterestCoverage"] = o.FfoNetInterestCoverage
	}
	if !IsNil(o.EbitNetInterestCoverage) {
		toSerialize["ebitNetInterestCoverage"] = o.EbitNetInterestCoverage
	}
	if !IsNil(o.EbitdaGrossInterestCoverage) {
		toSerialize["ebitdaGrossInterestCoverage"] = o.EbitdaGrossInterestCoverage
	}
	if !IsNil(o.EbitGrossInterestCoverage) {
		toSerialize["ebitGrossInterestCoverage"] = o.EbitGrossInterestCoverage
	}
	return toSerialize, nil
}

type NullableSearchCompanyDataTypeCoverageRatios struct {
	value *SearchCompanyDataTypeCoverageRatios
	isSet bool
}

func (v NullableSearchCompanyDataTypeCoverageRatios) Get() *SearchCompanyDataTypeCoverageRatios {
	return v.value
}

func (v *NullableSearchCompanyDataTypeCoverageRatios) Set(val *SearchCompanyDataTypeCoverageRatios) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchCompanyDataTypeCoverageRatios) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchCompanyDataTypeCoverageRatios) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchCompanyDataTypeCoverageRatios(val *SearchCompanyDataTypeCoverageRatios) *NullableSearchCompanyDataTypeCoverageRatios {
	return &NullableSearchCompanyDataTypeCoverageRatios{value: val, isSet: true}
}

func (v NullableSearchCompanyDataTypeCoverageRatios) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchCompanyDataTypeCoverageRatios) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


