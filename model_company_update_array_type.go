/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
)

// checks if the CompanyUpdateArrayType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompanyUpdateArrayType{}

// CompanyUpdateArrayType Array of Companies for the update
type CompanyUpdateArrayType struct {
	Companies []CompanyUpdateType `json:"companies,omitempty"`
}

// NewCompanyUpdateArrayType instantiates a new CompanyUpdateArrayType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyUpdateArrayType() *CompanyUpdateArrayType {
	this := CompanyUpdateArrayType{}
	return &this
}

// NewCompanyUpdateArrayTypeWithDefaults instantiates a new CompanyUpdateArrayType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyUpdateArrayTypeWithDefaults() *CompanyUpdateArrayType {
	this := CompanyUpdateArrayType{}
	return &this
}

// GetCompanies returns the Companies field value if set, zero value otherwise.
func (o *CompanyUpdateArrayType) GetCompanies() []CompanyUpdateType {
	if o == nil || IsNil(o.Companies) {
		var ret []CompanyUpdateType
		return ret
	}
	return o.Companies
}

// GetCompaniesOk returns a tuple with the Companies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyUpdateArrayType) GetCompaniesOk() ([]CompanyUpdateType, bool) {
	if o == nil || IsNil(o.Companies) {
		return nil, false
	}
	return o.Companies, true
}

// HasCompanies returns a boolean if a field has been set.
func (o *CompanyUpdateArrayType) HasCompanies() bool {
	if o != nil && !IsNil(o.Companies) {
		return true
	}

	return false
}

// SetCompanies gets a reference to the given []CompanyUpdateType and assigns it to the Companies field.
func (o *CompanyUpdateArrayType) SetCompanies(v []CompanyUpdateType) {
	o.Companies = v
}

func (o CompanyUpdateArrayType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompanyUpdateArrayType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Companies) {
		toSerialize["companies"] = o.Companies
	}
	return toSerialize, nil
}

type NullableCompanyUpdateArrayType struct {
	value *CompanyUpdateArrayType
	isSet bool
}

func (v NullableCompanyUpdateArrayType) Get() *CompanyUpdateArrayType {
	return v.value
}

func (v *NullableCompanyUpdateArrayType) Set(val *CompanyUpdateArrayType) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyUpdateArrayType) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyUpdateArrayType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyUpdateArrayType(val *CompanyUpdateArrayType) *NullableCompanyUpdateArrayType {
	return &NullableCompanyUpdateArrayType{value: val, isSet: true}
}

func (v NullableCompanyUpdateArrayType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyUpdateArrayType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


