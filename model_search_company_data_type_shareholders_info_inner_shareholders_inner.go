/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
	"time"
)

// checks if the SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner{}

// SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner struct for SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner
type SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner struct {
	TaxCode *string `json:"taxCode,omitempty"`
	CrifNumber *string `json:"crifNumber,omitempty"`
	Name *string `json:"name,omitempty"`
	Surname *string `json:"surname,omitempty"`
	CompanyName *string `json:"companyName,omitempty"`
	SinceDate *time.Time `json:"sinceDate,omitempty"`
	StreetName *string `json:"streetName,omitempty"`
}

// NewSearchCompanyDataTypeShareholdersInfoInnerShareholdersInner instantiates a new SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchCompanyDataTypeShareholdersInfoInnerShareholdersInner() *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner {
	this := SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner{}
	return &this
}

// NewSearchCompanyDataTypeShareholdersInfoInnerShareholdersInnerWithDefaults instantiates a new SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchCompanyDataTypeShareholdersInfoInnerShareholdersInnerWithDefaults() *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner {
	this := SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner{}
	return &this
}

// GetTaxCode returns the TaxCode field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) GetTaxCode() string {
	if o == nil || IsNil(o.TaxCode) {
		var ret string
		return ret
	}
	return *o.TaxCode
}

// GetTaxCodeOk returns a tuple with the TaxCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) GetTaxCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TaxCode) {
		return nil, false
	}
	return o.TaxCode, true
}

// HasTaxCode returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) HasTaxCode() bool {
	if o != nil && !IsNil(o.TaxCode) {
		return true
	}

	return false
}

// SetTaxCode gets a reference to the given string and assigns it to the TaxCode field.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) SetTaxCode(v string) {
	o.TaxCode = &v
}

// GetCrifNumber returns the CrifNumber field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) GetCrifNumber() string {
	if o == nil || IsNil(o.CrifNumber) {
		var ret string
		return ret
	}
	return *o.CrifNumber
}

// GetCrifNumberOk returns a tuple with the CrifNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) GetCrifNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CrifNumber) {
		return nil, false
	}
	return o.CrifNumber, true
}

// HasCrifNumber returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) HasCrifNumber() bool {
	if o != nil && !IsNil(o.CrifNumber) {
		return true
	}

	return false
}

// SetCrifNumber gets a reference to the given string and assigns it to the CrifNumber field.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) SetCrifNumber(v string) {
	o.CrifNumber = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) SetName(v string) {
	o.Name = &v
}

// GetSurname returns the Surname field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) GetSurname() string {
	if o == nil || IsNil(o.Surname) {
		var ret string
		return ret
	}
	return *o.Surname
}

// GetSurnameOk returns a tuple with the Surname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) GetSurnameOk() (*string, bool) {
	if o == nil || IsNil(o.Surname) {
		return nil, false
	}
	return o.Surname, true
}

// HasSurname returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) HasSurname() bool {
	if o != nil && !IsNil(o.Surname) {
		return true
	}

	return false
}

// SetSurname gets a reference to the given string and assigns it to the Surname field.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) SetSurname(v string) {
	o.Surname = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetSinceDate returns the SinceDate field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) GetSinceDate() time.Time {
	if o == nil || IsNil(o.SinceDate) {
		var ret time.Time
		return ret
	}
	return *o.SinceDate
}

// GetSinceDateOk returns a tuple with the SinceDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) GetSinceDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SinceDate) {
		return nil, false
	}
	return o.SinceDate, true
}

// HasSinceDate returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) HasSinceDate() bool {
	if o != nil && !IsNil(o.SinceDate) {
		return true
	}

	return false
}

// SetSinceDate gets a reference to the given time.Time and assigns it to the SinceDate field.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) SetSinceDate(v time.Time) {
	o.SinceDate = &v
}

// GetStreetName returns the StreetName field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) GetStreetName() string {
	if o == nil || IsNil(o.StreetName) {
		var ret string
		return ret
	}
	return *o.StreetName
}

// GetStreetNameOk returns a tuple with the StreetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) GetStreetNameOk() (*string, bool) {
	if o == nil || IsNil(o.StreetName) {
		return nil, false
	}
	return o.StreetName, true
}

// HasStreetName returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) HasStreetName() bool {
	if o != nil && !IsNil(o.StreetName) {
		return true
	}

	return false
}

// SetStreetName gets a reference to the given string and assigns it to the StreetName field.
func (o *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) SetStreetName(v string) {
	o.StreetName = &v
}

func (o SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TaxCode) {
		toSerialize["taxCode"] = o.TaxCode
	}
	if !IsNil(o.CrifNumber) {
		toSerialize["crifNumber"] = o.CrifNumber
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Surname) {
		toSerialize["surname"] = o.Surname
	}
	if !IsNil(o.CompanyName) {
		toSerialize["companyName"] = o.CompanyName
	}
	if !IsNil(o.SinceDate) {
		toSerialize["sinceDate"] = o.SinceDate
	}
	if !IsNil(o.StreetName) {
		toSerialize["streetName"] = o.StreetName
	}
	return toSerialize, nil
}

type NullableSearchCompanyDataTypeShareholdersInfoInnerShareholdersInner struct {
	value *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner
	isSet bool
}

func (v NullableSearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) Get() *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner {
	return v.value
}

func (v *NullableSearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) Set(val *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchCompanyDataTypeShareholdersInfoInnerShareholdersInner(val *SearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) *NullableSearchCompanyDataTypeShareholdersInfoInnerShareholdersInner {
	return &NullableSearchCompanyDataTypeShareholdersInfoInnerShareholdersInner{value: val, isSet: true}
}

func (v NullableSearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchCompanyDataTypeShareholdersInfoInnerShareholdersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


