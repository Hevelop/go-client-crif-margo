/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
)

// checks if the SearchCompanyDataTypeContacts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchCompanyDataTypeContacts{}

// SearchCompanyDataTypeContacts struct for SearchCompanyDataTypeContacts
type SearchCompanyDataTypeContacts struct {
	TelephoneNumber *string `json:"telephoneNumber,omitempty"`
	Fax *string `json:"fax,omitempty"`
}

// NewSearchCompanyDataTypeContacts instantiates a new SearchCompanyDataTypeContacts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchCompanyDataTypeContacts() *SearchCompanyDataTypeContacts {
	this := SearchCompanyDataTypeContacts{}
	return &this
}

// NewSearchCompanyDataTypeContactsWithDefaults instantiates a new SearchCompanyDataTypeContacts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchCompanyDataTypeContactsWithDefaults() *SearchCompanyDataTypeContacts {
	this := SearchCompanyDataTypeContacts{}
	return &this
}

// GetTelephoneNumber returns the TelephoneNumber field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeContacts) GetTelephoneNumber() string {
	if o == nil || IsNil(o.TelephoneNumber) {
		var ret string
		return ret
	}
	return *o.TelephoneNumber
}

// GetTelephoneNumberOk returns a tuple with the TelephoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeContacts) GetTelephoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.TelephoneNumber) {
		return nil, false
	}
	return o.TelephoneNumber, true
}

// HasTelephoneNumber returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeContacts) HasTelephoneNumber() bool {
	if o != nil && !IsNil(o.TelephoneNumber) {
		return true
	}

	return false
}

// SetTelephoneNumber gets a reference to the given string and assigns it to the TelephoneNumber field.
func (o *SearchCompanyDataTypeContacts) SetTelephoneNumber(v string) {
	o.TelephoneNumber = &v
}

// GetFax returns the Fax field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeContacts) GetFax() string {
	if o == nil || IsNil(o.Fax) {
		var ret string
		return ret
	}
	return *o.Fax
}

// GetFaxOk returns a tuple with the Fax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeContacts) GetFaxOk() (*string, bool) {
	if o == nil || IsNil(o.Fax) {
		return nil, false
	}
	return o.Fax, true
}

// HasFax returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeContacts) HasFax() bool {
	if o != nil && !IsNil(o.Fax) {
		return true
	}

	return false
}

// SetFax gets a reference to the given string and assigns it to the Fax field.
func (o *SearchCompanyDataTypeContacts) SetFax(v string) {
	o.Fax = &v
}

func (o SearchCompanyDataTypeContacts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchCompanyDataTypeContacts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TelephoneNumber) {
		toSerialize["telephoneNumber"] = o.TelephoneNumber
	}
	if !IsNil(o.Fax) {
		toSerialize["fax"] = o.Fax
	}
	return toSerialize, nil
}

type NullableSearchCompanyDataTypeContacts struct {
	value *SearchCompanyDataTypeContacts
	isSet bool
}

func (v NullableSearchCompanyDataTypeContacts) Get() *SearchCompanyDataTypeContacts {
	return v.value
}

func (v *NullableSearchCompanyDataTypeContacts) Set(val *SearchCompanyDataTypeContacts) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchCompanyDataTypeContacts) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchCompanyDataTypeContacts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchCompanyDataTypeContacts(val *SearchCompanyDataTypeContacts) *NullableSearchCompanyDataTypeContacts {
	return &NullableSearchCompanyDataTypeContacts{value: val, isSet: true}
}

func (v NullableSearchCompanyDataTypeContacts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchCompanyDataTypeContacts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


