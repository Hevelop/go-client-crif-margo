/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
)

// checks if the MarketingListType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarketingListType{}

// MarketingListType struct for MarketingListType
type MarketingListType struct {
	MarketingList *string `json:"marketingList,omitempty"`
}

// NewMarketingListType instantiates a new MarketingListType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketingListType() *MarketingListType {
	this := MarketingListType{}
	return &this
}

// NewMarketingListTypeWithDefaults instantiates a new MarketingListType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketingListTypeWithDefaults() *MarketingListType {
	this := MarketingListType{}
	return &this
}

// GetMarketingList returns the MarketingList field value if set, zero value otherwise.
func (o *MarketingListType) GetMarketingList() string {
	if o == nil || IsNil(o.MarketingList) {
		var ret string
		return ret
	}
	return *o.MarketingList
}

// GetMarketingListOk returns a tuple with the MarketingList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketingListType) GetMarketingListOk() (*string, bool) {
	if o == nil || IsNil(o.MarketingList) {
		return nil, false
	}
	return o.MarketingList, true
}

// HasMarketingList returns a boolean if a field has been set.
func (o *MarketingListType) HasMarketingList() bool {
	if o != nil && !IsNil(o.MarketingList) {
		return true
	}

	return false
}

// SetMarketingList gets a reference to the given string and assigns it to the MarketingList field.
func (o *MarketingListType) SetMarketingList(v string) {
	o.MarketingList = &v
}

func (o MarketingListType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarketingListType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MarketingList) {
		toSerialize["marketingList"] = o.MarketingList
	}
	return toSerialize, nil
}

type NullableMarketingListType struct {
	value *MarketingListType
	isSet bool
}

func (v NullableMarketingListType) Get() *MarketingListType {
	return v.value
}

func (v *NullableMarketingListType) Set(val *MarketingListType) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketingListType) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketingListType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketingListType(val *MarketingListType) *NullableMarketingListType {
	return &NullableMarketingListType{value: val, isSet: true}
}

func (v NullableMarketingListType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketingListType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


