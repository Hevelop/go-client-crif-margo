/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CompanyType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompanyType{}

// CompanyType struct for CompanyType
type CompanyType struct {
	// The guid reported in this item is generated automatically by Margo system and it is the unique code that identifies the company in the portfolio.
	MargoId *string `json:"margoId,omitempty"`
	// The guid reported in this item identifies the branche of an headquarter. The companyUnitId is provided by Margo after the search service **POST /prospecting/search**. If the item contains a value, Margo uploads in the portfolio the branch data otherwise the system will upload only the headquarter data (Margo identifies the headquarter data with the value reported in the identificationCode's item).
	CompanyUnitId *string `json:"companyUnitId,omitempty"`
	// It must be one of: Vat code, Tax code, CRIF Number.
	IdentificationCode string `json:"identificationCode"`
	CompanyPortfolioStatus string `json:"companyPortfolioStatus"`
	// It's possible to insert one or more tag divided by comma. Max occurrence is 10 values.
	Tags *string `json:"tags,omitempty"`
	// It identifies the amount billed to the customer.
	Amount *float32 `json:"amount,omitempty"`
	// It must be an Area manager user id defined for the organization.
	AreaManagerId *string `json:"areaManagerId,omitempty"`
	// It must be a Sales user id defined for the organization.
	SalesId *string `json:"salesId,omitempty"`
	// It must be a Product Id defined for the organization.
	ProductId *string `json:"productId,omitempty"`
	// It indicates if a company has been enriched from the web users
	IsEnriched *bool `json:"isEnriched,omitempty"`
	CustomVariables []CustomVariableType `json:"customVariables,omitempty"`
}

type _CompanyType CompanyType

// NewCompanyType instantiates a new CompanyType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyType(identificationCode string, companyPortfolioStatus string) *CompanyType {
	this := CompanyType{}
	this.IdentificationCode = identificationCode
	this.CompanyPortfolioStatus = companyPortfolioStatus
	return &this
}

// NewCompanyTypeWithDefaults instantiates a new CompanyType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyTypeWithDefaults() *CompanyType {
	this := CompanyType{}
	return &this
}

// GetMargoId returns the MargoId field value if set, zero value otherwise.
func (o *CompanyType) GetMargoId() string {
	if o == nil || IsNil(o.MargoId) {
		var ret string
		return ret
	}
	return *o.MargoId
}

// GetMargoIdOk returns a tuple with the MargoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyType) GetMargoIdOk() (*string, bool) {
	if o == nil || IsNil(o.MargoId) {
		return nil, false
	}
	return o.MargoId, true
}

// HasMargoId returns a boolean if a field has been set.
func (o *CompanyType) HasMargoId() bool {
	if o != nil && !IsNil(o.MargoId) {
		return true
	}

	return false
}

// SetMargoId gets a reference to the given string and assigns it to the MargoId field.
func (o *CompanyType) SetMargoId(v string) {
	o.MargoId = &v
}

// GetCompanyUnitId returns the CompanyUnitId field value if set, zero value otherwise.
func (o *CompanyType) GetCompanyUnitId() string {
	if o == nil || IsNil(o.CompanyUnitId) {
		var ret string
		return ret
	}
	return *o.CompanyUnitId
}

// GetCompanyUnitIdOk returns a tuple with the CompanyUnitId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyType) GetCompanyUnitIdOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyUnitId) {
		return nil, false
	}
	return o.CompanyUnitId, true
}

// HasCompanyUnitId returns a boolean if a field has been set.
func (o *CompanyType) HasCompanyUnitId() bool {
	if o != nil && !IsNil(o.CompanyUnitId) {
		return true
	}

	return false
}

// SetCompanyUnitId gets a reference to the given string and assigns it to the CompanyUnitId field.
func (o *CompanyType) SetCompanyUnitId(v string) {
	o.CompanyUnitId = &v
}

// GetIdentificationCode returns the IdentificationCode field value
func (o *CompanyType) GetIdentificationCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdentificationCode
}

// GetIdentificationCodeOk returns a tuple with the IdentificationCode field value
// and a boolean to check if the value has been set.
func (o *CompanyType) GetIdentificationCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdentificationCode, true
}

// SetIdentificationCode sets field value
func (o *CompanyType) SetIdentificationCode(v string) {
	o.IdentificationCode = v
}

// GetCompanyPortfolioStatus returns the CompanyPortfolioStatus field value
func (o *CompanyType) GetCompanyPortfolioStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CompanyPortfolioStatus
}

// GetCompanyPortfolioStatusOk returns a tuple with the CompanyPortfolioStatus field value
// and a boolean to check if the value has been set.
func (o *CompanyType) GetCompanyPortfolioStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompanyPortfolioStatus, true
}

// SetCompanyPortfolioStatus sets field value
func (o *CompanyType) SetCompanyPortfolioStatus(v string) {
	o.CompanyPortfolioStatus = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CompanyType) GetTags() string {
	if o == nil || IsNil(o.Tags) {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyType) GetTagsOk() (*string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CompanyType) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *CompanyType) SetTags(v string) {
	o.Tags = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *CompanyType) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyType) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *CompanyType) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *CompanyType) SetAmount(v float32) {
	o.Amount = &v
}

// GetAreaManagerId returns the AreaManagerId field value if set, zero value otherwise.
func (o *CompanyType) GetAreaManagerId() string {
	if o == nil || IsNil(o.AreaManagerId) {
		var ret string
		return ret
	}
	return *o.AreaManagerId
}

// GetAreaManagerIdOk returns a tuple with the AreaManagerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyType) GetAreaManagerIdOk() (*string, bool) {
	if o == nil || IsNil(o.AreaManagerId) {
		return nil, false
	}
	return o.AreaManagerId, true
}

// HasAreaManagerId returns a boolean if a field has been set.
func (o *CompanyType) HasAreaManagerId() bool {
	if o != nil && !IsNil(o.AreaManagerId) {
		return true
	}

	return false
}

// SetAreaManagerId gets a reference to the given string and assigns it to the AreaManagerId field.
func (o *CompanyType) SetAreaManagerId(v string) {
	o.AreaManagerId = &v
}

// GetSalesId returns the SalesId field value if set, zero value otherwise.
func (o *CompanyType) GetSalesId() string {
	if o == nil || IsNil(o.SalesId) {
		var ret string
		return ret
	}
	return *o.SalesId
}

// GetSalesIdOk returns a tuple with the SalesId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyType) GetSalesIdOk() (*string, bool) {
	if o == nil || IsNil(o.SalesId) {
		return nil, false
	}
	return o.SalesId, true
}

// HasSalesId returns a boolean if a field has been set.
func (o *CompanyType) HasSalesId() bool {
	if o != nil && !IsNil(o.SalesId) {
		return true
	}

	return false
}

// SetSalesId gets a reference to the given string and assigns it to the SalesId field.
func (o *CompanyType) SetSalesId(v string) {
	o.SalesId = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *CompanyType) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyType) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *CompanyType) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *CompanyType) SetProductId(v string) {
	o.ProductId = &v
}

// GetIsEnriched returns the IsEnriched field value if set, zero value otherwise.
func (o *CompanyType) GetIsEnriched() bool {
	if o == nil || IsNil(o.IsEnriched) {
		var ret bool
		return ret
	}
	return *o.IsEnriched
}

// GetIsEnrichedOk returns a tuple with the IsEnriched field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyType) GetIsEnrichedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEnriched) {
		return nil, false
	}
	return o.IsEnriched, true
}

// HasIsEnriched returns a boolean if a field has been set.
func (o *CompanyType) HasIsEnriched() bool {
	if o != nil && !IsNil(o.IsEnriched) {
		return true
	}

	return false
}

// SetIsEnriched gets a reference to the given bool and assigns it to the IsEnriched field.
func (o *CompanyType) SetIsEnriched(v bool) {
	o.IsEnriched = &v
}

// GetCustomVariables returns the CustomVariables field value if set, zero value otherwise.
func (o *CompanyType) GetCustomVariables() []CustomVariableType {
	if o == nil || IsNil(o.CustomVariables) {
		var ret []CustomVariableType
		return ret
	}
	return o.CustomVariables
}

// GetCustomVariablesOk returns a tuple with the CustomVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyType) GetCustomVariablesOk() ([]CustomVariableType, bool) {
	if o == nil || IsNil(o.CustomVariables) {
		return nil, false
	}
	return o.CustomVariables, true
}

// HasCustomVariables returns a boolean if a field has been set.
func (o *CompanyType) HasCustomVariables() bool {
	if o != nil && !IsNil(o.CustomVariables) {
		return true
	}

	return false
}

// SetCustomVariables gets a reference to the given []CustomVariableType and assigns it to the CustomVariables field.
func (o *CompanyType) SetCustomVariables(v []CustomVariableType) {
	o.CustomVariables = v
}

func (o CompanyType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompanyType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MargoId) {
		toSerialize["margoId"] = o.MargoId
	}
	if !IsNil(o.CompanyUnitId) {
		toSerialize["companyUnitId"] = o.CompanyUnitId
	}
	toSerialize["identificationCode"] = o.IdentificationCode
	toSerialize["companyPortfolioStatus"] = o.CompanyPortfolioStatus
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.AreaManagerId) {
		toSerialize["areaManagerId"] = o.AreaManagerId
	}
	if !IsNil(o.SalesId) {
		toSerialize["salesId"] = o.SalesId
	}
	if !IsNil(o.ProductId) {
		toSerialize["productId"] = o.ProductId
	}
	if !IsNil(o.IsEnriched) {
		toSerialize["isEnriched"] = o.IsEnriched
	}
	if !IsNil(o.CustomVariables) {
		toSerialize["customVariables"] = o.CustomVariables
	}
	return toSerialize, nil
}

func (o *CompanyType) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"identificationCode",
		"companyPortfolioStatus",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCompanyType := _CompanyType{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCompanyType)

	if err != nil {
		return err
	}

	*o = CompanyType(varCompanyType)

	return err
}

type NullableCompanyType struct {
	value *CompanyType
	isSet bool
}

func (v NullableCompanyType) Get() *CompanyType {
	return v.value
}

func (v *NullableCompanyType) Set(val *CompanyType) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyType) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyType(val *CompanyType) *NullableCompanyType {
	return &NullableCompanyType{value: val, isSet: true}
}

func (v NullableCompanyType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


