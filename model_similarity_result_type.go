/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
)

// checks if the SimilarityResultType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SimilarityResultType{}

// SimilarityResultType The item `filters` contains a subset of parameters (individuated by similarity algorithm) that should be used in **POST /prospecting/search**.  `total Elements` indicates how many companies satisfied query suggest by similarity parameters
type SimilarityResultType struct {
	Filters *FiltersType `json:"filters,omitempty"`
	TotalElements *float32 `json:"totalElements,omitempty"`
}

// NewSimilarityResultType instantiates a new SimilarityResultType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSimilarityResultType() *SimilarityResultType {
	this := SimilarityResultType{}
	return &this
}

// NewSimilarityResultTypeWithDefaults instantiates a new SimilarityResultType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimilarityResultTypeWithDefaults() *SimilarityResultType {
	this := SimilarityResultType{}
	return &this
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *SimilarityResultType) GetFilters() FiltersType {
	if o == nil || IsNil(o.Filters) {
		var ret FiltersType
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimilarityResultType) GetFiltersOk() (*FiltersType, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *SimilarityResultType) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given FiltersType and assigns it to the Filters field.
func (o *SimilarityResultType) SetFilters(v FiltersType) {
	o.Filters = &v
}

// GetTotalElements returns the TotalElements field value if set, zero value otherwise.
func (o *SimilarityResultType) GetTotalElements() float32 {
	if o == nil || IsNil(o.TotalElements) {
		var ret float32
		return ret
	}
	return *o.TotalElements
}

// GetTotalElementsOk returns a tuple with the TotalElements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimilarityResultType) GetTotalElementsOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalElements) {
		return nil, false
	}
	return o.TotalElements, true
}

// HasTotalElements returns a boolean if a field has been set.
func (o *SimilarityResultType) HasTotalElements() bool {
	if o != nil && !IsNil(o.TotalElements) {
		return true
	}

	return false
}

// SetTotalElements gets a reference to the given float32 and assigns it to the TotalElements field.
func (o *SimilarityResultType) SetTotalElements(v float32) {
	o.TotalElements = &v
}

func (o SimilarityResultType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SimilarityResultType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.TotalElements) {
		toSerialize["totalElements"] = o.TotalElements
	}
	return toSerialize, nil
}

type NullableSimilarityResultType struct {
	value *SimilarityResultType
	isSet bool
}

func (v NullableSimilarityResultType) Get() *SimilarityResultType {
	return v.value
}

func (v *NullableSimilarityResultType) Set(val *SimilarityResultType) {
	v.value = val
	v.isSet = true
}

func (v NullableSimilarityResultType) IsSet() bool {
	return v.isSet
}

func (v *NullableSimilarityResultType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSimilarityResultType(val *SimilarityResultType) *NullableSimilarityResultType {
	return &NullableSimilarityResultType{value: val, isSet: true}
}

func (v NullableSimilarityResultType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSimilarityResultType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


