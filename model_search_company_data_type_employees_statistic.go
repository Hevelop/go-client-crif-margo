/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
)

// checks if the SearchCompanyDataTypeEmployeesStatistic type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchCompanyDataTypeEmployeesStatistic{}

// SearchCompanyDataTypeEmployeesStatistic struct for SearchCompanyDataTypeEmployeesStatistic
type SearchCompanyDataTypeEmployeesStatistic struct {
	FixedTermContract *float32 `json:"fixedTermContract,omitempty"`
	PermanentContract *float32 `json:"permanentContract,omitempty"`
	PartialTimeContract *float32 `json:"partialTimeContract,omitempty"`
	FullTimeContract *float32 `json:"fullTimeContract,omitempty"`
	Director *float32 `json:"director,omitempty"`
	FrameworkContract *float32 `json:"frameworkContract,omitempty"`
	WhiteCollar *float32 `json:"whiteCollar,omitempty"`
	Apprentice *float32 `json:"apprentice,omitempty"`
}

// NewSearchCompanyDataTypeEmployeesStatistic instantiates a new SearchCompanyDataTypeEmployeesStatistic object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchCompanyDataTypeEmployeesStatistic() *SearchCompanyDataTypeEmployeesStatistic {
	this := SearchCompanyDataTypeEmployeesStatistic{}
	return &this
}

// NewSearchCompanyDataTypeEmployeesStatisticWithDefaults instantiates a new SearchCompanyDataTypeEmployeesStatistic object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchCompanyDataTypeEmployeesStatisticWithDefaults() *SearchCompanyDataTypeEmployeesStatistic {
	this := SearchCompanyDataTypeEmployeesStatistic{}
	return &this
}

// GetFixedTermContract returns the FixedTermContract field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeEmployeesStatistic) GetFixedTermContract() float32 {
	if o == nil || IsNil(o.FixedTermContract) {
		var ret float32
		return ret
	}
	return *o.FixedTermContract
}

// GetFixedTermContractOk returns a tuple with the FixedTermContract field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeEmployeesStatistic) GetFixedTermContractOk() (*float32, bool) {
	if o == nil || IsNil(o.FixedTermContract) {
		return nil, false
	}
	return o.FixedTermContract, true
}

// HasFixedTermContract returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeEmployeesStatistic) HasFixedTermContract() bool {
	if o != nil && !IsNil(o.FixedTermContract) {
		return true
	}

	return false
}

// SetFixedTermContract gets a reference to the given float32 and assigns it to the FixedTermContract field.
func (o *SearchCompanyDataTypeEmployeesStatistic) SetFixedTermContract(v float32) {
	o.FixedTermContract = &v
}

// GetPermanentContract returns the PermanentContract field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeEmployeesStatistic) GetPermanentContract() float32 {
	if o == nil || IsNil(o.PermanentContract) {
		var ret float32
		return ret
	}
	return *o.PermanentContract
}

// GetPermanentContractOk returns a tuple with the PermanentContract field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeEmployeesStatistic) GetPermanentContractOk() (*float32, bool) {
	if o == nil || IsNil(o.PermanentContract) {
		return nil, false
	}
	return o.PermanentContract, true
}

// HasPermanentContract returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeEmployeesStatistic) HasPermanentContract() bool {
	if o != nil && !IsNil(o.PermanentContract) {
		return true
	}

	return false
}

// SetPermanentContract gets a reference to the given float32 and assigns it to the PermanentContract field.
func (o *SearchCompanyDataTypeEmployeesStatistic) SetPermanentContract(v float32) {
	o.PermanentContract = &v
}

// GetPartialTimeContract returns the PartialTimeContract field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeEmployeesStatistic) GetPartialTimeContract() float32 {
	if o == nil || IsNil(o.PartialTimeContract) {
		var ret float32
		return ret
	}
	return *o.PartialTimeContract
}

// GetPartialTimeContractOk returns a tuple with the PartialTimeContract field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeEmployeesStatistic) GetPartialTimeContractOk() (*float32, bool) {
	if o == nil || IsNil(o.PartialTimeContract) {
		return nil, false
	}
	return o.PartialTimeContract, true
}

// HasPartialTimeContract returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeEmployeesStatistic) HasPartialTimeContract() bool {
	if o != nil && !IsNil(o.PartialTimeContract) {
		return true
	}

	return false
}

// SetPartialTimeContract gets a reference to the given float32 and assigns it to the PartialTimeContract field.
func (o *SearchCompanyDataTypeEmployeesStatistic) SetPartialTimeContract(v float32) {
	o.PartialTimeContract = &v
}

// GetFullTimeContract returns the FullTimeContract field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeEmployeesStatistic) GetFullTimeContract() float32 {
	if o == nil || IsNil(o.FullTimeContract) {
		var ret float32
		return ret
	}
	return *o.FullTimeContract
}

// GetFullTimeContractOk returns a tuple with the FullTimeContract field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeEmployeesStatistic) GetFullTimeContractOk() (*float32, bool) {
	if o == nil || IsNil(o.FullTimeContract) {
		return nil, false
	}
	return o.FullTimeContract, true
}

// HasFullTimeContract returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeEmployeesStatistic) HasFullTimeContract() bool {
	if o != nil && !IsNil(o.FullTimeContract) {
		return true
	}

	return false
}

// SetFullTimeContract gets a reference to the given float32 and assigns it to the FullTimeContract field.
func (o *SearchCompanyDataTypeEmployeesStatistic) SetFullTimeContract(v float32) {
	o.FullTimeContract = &v
}

// GetDirector returns the Director field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeEmployeesStatistic) GetDirector() float32 {
	if o == nil || IsNil(o.Director) {
		var ret float32
		return ret
	}
	return *o.Director
}

// GetDirectorOk returns a tuple with the Director field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeEmployeesStatistic) GetDirectorOk() (*float32, bool) {
	if o == nil || IsNil(o.Director) {
		return nil, false
	}
	return o.Director, true
}

// HasDirector returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeEmployeesStatistic) HasDirector() bool {
	if o != nil && !IsNil(o.Director) {
		return true
	}

	return false
}

// SetDirector gets a reference to the given float32 and assigns it to the Director field.
func (o *SearchCompanyDataTypeEmployeesStatistic) SetDirector(v float32) {
	o.Director = &v
}

// GetFrameworkContract returns the FrameworkContract field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeEmployeesStatistic) GetFrameworkContract() float32 {
	if o == nil || IsNil(o.FrameworkContract) {
		var ret float32
		return ret
	}
	return *o.FrameworkContract
}

// GetFrameworkContractOk returns a tuple with the FrameworkContract field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeEmployeesStatistic) GetFrameworkContractOk() (*float32, bool) {
	if o == nil || IsNil(o.FrameworkContract) {
		return nil, false
	}
	return o.FrameworkContract, true
}

// HasFrameworkContract returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeEmployeesStatistic) HasFrameworkContract() bool {
	if o != nil && !IsNil(o.FrameworkContract) {
		return true
	}

	return false
}

// SetFrameworkContract gets a reference to the given float32 and assigns it to the FrameworkContract field.
func (o *SearchCompanyDataTypeEmployeesStatistic) SetFrameworkContract(v float32) {
	o.FrameworkContract = &v
}

// GetWhiteCollar returns the WhiteCollar field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeEmployeesStatistic) GetWhiteCollar() float32 {
	if o == nil || IsNil(o.WhiteCollar) {
		var ret float32
		return ret
	}
	return *o.WhiteCollar
}

// GetWhiteCollarOk returns a tuple with the WhiteCollar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeEmployeesStatistic) GetWhiteCollarOk() (*float32, bool) {
	if o == nil || IsNil(o.WhiteCollar) {
		return nil, false
	}
	return o.WhiteCollar, true
}

// HasWhiteCollar returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeEmployeesStatistic) HasWhiteCollar() bool {
	if o != nil && !IsNil(o.WhiteCollar) {
		return true
	}

	return false
}

// SetWhiteCollar gets a reference to the given float32 and assigns it to the WhiteCollar field.
func (o *SearchCompanyDataTypeEmployeesStatistic) SetWhiteCollar(v float32) {
	o.WhiteCollar = &v
}

// GetApprentice returns the Apprentice field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeEmployeesStatistic) GetApprentice() float32 {
	if o == nil || IsNil(o.Apprentice) {
		var ret float32
		return ret
	}
	return *o.Apprentice
}

// GetApprenticeOk returns a tuple with the Apprentice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeEmployeesStatistic) GetApprenticeOk() (*float32, bool) {
	if o == nil || IsNil(o.Apprentice) {
		return nil, false
	}
	return o.Apprentice, true
}

// HasApprentice returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeEmployeesStatistic) HasApprentice() bool {
	if o != nil && !IsNil(o.Apprentice) {
		return true
	}

	return false
}

// SetApprentice gets a reference to the given float32 and assigns it to the Apprentice field.
func (o *SearchCompanyDataTypeEmployeesStatistic) SetApprentice(v float32) {
	o.Apprentice = &v
}

func (o SearchCompanyDataTypeEmployeesStatistic) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchCompanyDataTypeEmployeesStatistic) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FixedTermContract) {
		toSerialize["fixedTermContract"] = o.FixedTermContract
	}
	if !IsNil(o.PermanentContract) {
		toSerialize["permanentContract"] = o.PermanentContract
	}
	if !IsNil(o.PartialTimeContract) {
		toSerialize["partialTimeContract"] = o.PartialTimeContract
	}
	if !IsNil(o.FullTimeContract) {
		toSerialize["fullTimeContract"] = o.FullTimeContract
	}
	if !IsNil(o.Director) {
		toSerialize["director"] = o.Director
	}
	if !IsNil(o.FrameworkContract) {
		toSerialize["frameworkContract"] = o.FrameworkContract
	}
	if !IsNil(o.WhiteCollar) {
		toSerialize["whiteCollar"] = o.WhiteCollar
	}
	if !IsNil(o.Apprentice) {
		toSerialize["apprentice"] = o.Apprentice
	}
	return toSerialize, nil
}

type NullableSearchCompanyDataTypeEmployeesStatistic struct {
	value *SearchCompanyDataTypeEmployeesStatistic
	isSet bool
}

func (v NullableSearchCompanyDataTypeEmployeesStatistic) Get() *SearchCompanyDataTypeEmployeesStatistic {
	return v.value
}

func (v *NullableSearchCompanyDataTypeEmployeesStatistic) Set(val *SearchCompanyDataTypeEmployeesStatistic) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchCompanyDataTypeEmployeesStatistic) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchCompanyDataTypeEmployeesStatistic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchCompanyDataTypeEmployeesStatistic(val *SearchCompanyDataTypeEmployeesStatistic) *NullableSearchCompanyDataTypeEmployeesStatistic {
	return &NullableSearchCompanyDataTypeEmployeesStatistic{value: val, isSet: true}
}

func (v NullableSearchCompanyDataTypeEmployeesStatistic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchCompanyDataTypeEmployeesStatistic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


