/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
)

// checks if the SearchCompanyDataTypeRetailAnalytics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchCompanyDataTypeRetailAnalytics{}

// SearchCompanyDataTypeRetailAnalytics struct for SearchCompanyDataTypeRetailAnalytics
type SearchCompanyDataTypeRetailAnalytics struct {
	Business *float32 `json:"business,omitempty"`
	Competitiveness *float32 `json:"competitiveness,omitempty"`
	Digitalization *float32 `json:"digitalization,omitempty"`
	Premium *float32 `json:"premium,omitempty"`
	CommercialPotential *float32 `json:"commercialPotential,omitempty"`
	CompetitionLevel *float32 `json:"competitionLevel,omitempty"`
	Performance *float32 `json:"performance,omitempty"`
	Restart *float32 `json:"restart,omitempty"`
}

// NewSearchCompanyDataTypeRetailAnalytics instantiates a new SearchCompanyDataTypeRetailAnalytics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchCompanyDataTypeRetailAnalytics() *SearchCompanyDataTypeRetailAnalytics {
	this := SearchCompanyDataTypeRetailAnalytics{}
	return &this
}

// NewSearchCompanyDataTypeRetailAnalyticsWithDefaults instantiates a new SearchCompanyDataTypeRetailAnalytics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchCompanyDataTypeRetailAnalyticsWithDefaults() *SearchCompanyDataTypeRetailAnalytics {
	this := SearchCompanyDataTypeRetailAnalytics{}
	return &this
}

// GetBusiness returns the Business field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeRetailAnalytics) GetBusiness() float32 {
	if o == nil || IsNil(o.Business) {
		var ret float32
		return ret
	}
	return *o.Business
}

// GetBusinessOk returns a tuple with the Business field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeRetailAnalytics) GetBusinessOk() (*float32, bool) {
	if o == nil || IsNil(o.Business) {
		return nil, false
	}
	return o.Business, true
}

// HasBusiness returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeRetailAnalytics) HasBusiness() bool {
	if o != nil && !IsNil(o.Business) {
		return true
	}

	return false
}

// SetBusiness gets a reference to the given float32 and assigns it to the Business field.
func (o *SearchCompanyDataTypeRetailAnalytics) SetBusiness(v float32) {
	o.Business = &v
}

// GetCompetitiveness returns the Competitiveness field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeRetailAnalytics) GetCompetitiveness() float32 {
	if o == nil || IsNil(o.Competitiveness) {
		var ret float32
		return ret
	}
	return *o.Competitiveness
}

// GetCompetitivenessOk returns a tuple with the Competitiveness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeRetailAnalytics) GetCompetitivenessOk() (*float32, bool) {
	if o == nil || IsNil(o.Competitiveness) {
		return nil, false
	}
	return o.Competitiveness, true
}

// HasCompetitiveness returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeRetailAnalytics) HasCompetitiveness() bool {
	if o != nil && !IsNil(o.Competitiveness) {
		return true
	}

	return false
}

// SetCompetitiveness gets a reference to the given float32 and assigns it to the Competitiveness field.
func (o *SearchCompanyDataTypeRetailAnalytics) SetCompetitiveness(v float32) {
	o.Competitiveness = &v
}

// GetDigitalization returns the Digitalization field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeRetailAnalytics) GetDigitalization() float32 {
	if o == nil || IsNil(o.Digitalization) {
		var ret float32
		return ret
	}
	return *o.Digitalization
}

// GetDigitalizationOk returns a tuple with the Digitalization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeRetailAnalytics) GetDigitalizationOk() (*float32, bool) {
	if o == nil || IsNil(o.Digitalization) {
		return nil, false
	}
	return o.Digitalization, true
}

// HasDigitalization returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeRetailAnalytics) HasDigitalization() bool {
	if o != nil && !IsNil(o.Digitalization) {
		return true
	}

	return false
}

// SetDigitalization gets a reference to the given float32 and assigns it to the Digitalization field.
func (o *SearchCompanyDataTypeRetailAnalytics) SetDigitalization(v float32) {
	o.Digitalization = &v
}

// GetPremium returns the Premium field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeRetailAnalytics) GetPremium() float32 {
	if o == nil || IsNil(o.Premium) {
		var ret float32
		return ret
	}
	return *o.Premium
}

// GetPremiumOk returns a tuple with the Premium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeRetailAnalytics) GetPremiumOk() (*float32, bool) {
	if o == nil || IsNil(o.Premium) {
		return nil, false
	}
	return o.Premium, true
}

// HasPremium returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeRetailAnalytics) HasPremium() bool {
	if o != nil && !IsNil(o.Premium) {
		return true
	}

	return false
}

// SetPremium gets a reference to the given float32 and assigns it to the Premium field.
func (o *SearchCompanyDataTypeRetailAnalytics) SetPremium(v float32) {
	o.Premium = &v
}

// GetCommercialPotential returns the CommercialPotential field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeRetailAnalytics) GetCommercialPotential() float32 {
	if o == nil || IsNil(o.CommercialPotential) {
		var ret float32
		return ret
	}
	return *o.CommercialPotential
}

// GetCommercialPotentialOk returns a tuple with the CommercialPotential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeRetailAnalytics) GetCommercialPotentialOk() (*float32, bool) {
	if o == nil || IsNil(o.CommercialPotential) {
		return nil, false
	}
	return o.CommercialPotential, true
}

// HasCommercialPotential returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeRetailAnalytics) HasCommercialPotential() bool {
	if o != nil && !IsNil(o.CommercialPotential) {
		return true
	}

	return false
}

// SetCommercialPotential gets a reference to the given float32 and assigns it to the CommercialPotential field.
func (o *SearchCompanyDataTypeRetailAnalytics) SetCommercialPotential(v float32) {
	o.CommercialPotential = &v
}

// GetCompetitionLevel returns the CompetitionLevel field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeRetailAnalytics) GetCompetitionLevel() float32 {
	if o == nil || IsNil(o.CompetitionLevel) {
		var ret float32
		return ret
	}
	return *o.CompetitionLevel
}

// GetCompetitionLevelOk returns a tuple with the CompetitionLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeRetailAnalytics) GetCompetitionLevelOk() (*float32, bool) {
	if o == nil || IsNil(o.CompetitionLevel) {
		return nil, false
	}
	return o.CompetitionLevel, true
}

// HasCompetitionLevel returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeRetailAnalytics) HasCompetitionLevel() bool {
	if o != nil && !IsNil(o.CompetitionLevel) {
		return true
	}

	return false
}

// SetCompetitionLevel gets a reference to the given float32 and assigns it to the CompetitionLevel field.
func (o *SearchCompanyDataTypeRetailAnalytics) SetCompetitionLevel(v float32) {
	o.CompetitionLevel = &v
}

// GetPerformance returns the Performance field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeRetailAnalytics) GetPerformance() float32 {
	if o == nil || IsNil(o.Performance) {
		var ret float32
		return ret
	}
	return *o.Performance
}

// GetPerformanceOk returns a tuple with the Performance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeRetailAnalytics) GetPerformanceOk() (*float32, bool) {
	if o == nil || IsNil(o.Performance) {
		return nil, false
	}
	return o.Performance, true
}

// HasPerformance returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeRetailAnalytics) HasPerformance() bool {
	if o != nil && !IsNil(o.Performance) {
		return true
	}

	return false
}

// SetPerformance gets a reference to the given float32 and assigns it to the Performance field.
func (o *SearchCompanyDataTypeRetailAnalytics) SetPerformance(v float32) {
	o.Performance = &v
}

// GetRestart returns the Restart field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeRetailAnalytics) GetRestart() float32 {
	if o == nil || IsNil(o.Restart) {
		var ret float32
		return ret
	}
	return *o.Restart
}

// GetRestartOk returns a tuple with the Restart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeRetailAnalytics) GetRestartOk() (*float32, bool) {
	if o == nil || IsNil(o.Restart) {
		return nil, false
	}
	return o.Restart, true
}

// HasRestart returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeRetailAnalytics) HasRestart() bool {
	if o != nil && !IsNil(o.Restart) {
		return true
	}

	return false
}

// SetRestart gets a reference to the given float32 and assigns it to the Restart field.
func (o *SearchCompanyDataTypeRetailAnalytics) SetRestart(v float32) {
	o.Restart = &v
}

func (o SearchCompanyDataTypeRetailAnalytics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchCompanyDataTypeRetailAnalytics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Business) {
		toSerialize["business"] = o.Business
	}
	if !IsNil(o.Competitiveness) {
		toSerialize["competitiveness"] = o.Competitiveness
	}
	if !IsNil(o.Digitalization) {
		toSerialize["digitalization"] = o.Digitalization
	}
	if !IsNil(o.Premium) {
		toSerialize["premium"] = o.Premium
	}
	if !IsNil(o.CommercialPotential) {
		toSerialize["commercialPotential"] = o.CommercialPotential
	}
	if !IsNil(o.CompetitionLevel) {
		toSerialize["competitionLevel"] = o.CompetitionLevel
	}
	if !IsNil(o.Performance) {
		toSerialize["performance"] = o.Performance
	}
	if !IsNil(o.Restart) {
		toSerialize["restart"] = o.Restart
	}
	return toSerialize, nil
}

type NullableSearchCompanyDataTypeRetailAnalytics struct {
	value *SearchCompanyDataTypeRetailAnalytics
	isSet bool
}

func (v NullableSearchCompanyDataTypeRetailAnalytics) Get() *SearchCompanyDataTypeRetailAnalytics {
	return v.value
}

func (v *NullableSearchCompanyDataTypeRetailAnalytics) Set(val *SearchCompanyDataTypeRetailAnalytics) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchCompanyDataTypeRetailAnalytics) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchCompanyDataTypeRetailAnalytics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchCompanyDataTypeRetailAnalytics(val *SearchCompanyDataTypeRetailAnalytics) *NullableSearchCompanyDataTypeRetailAnalytics {
	return &NullableSearchCompanyDataTypeRetailAnalytics{value: val, isSet: true}
}

func (v NullableSearchCompanyDataTypeRetailAnalytics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchCompanyDataTypeRetailAnalytics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


