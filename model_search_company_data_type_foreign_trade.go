/*
Global Marketing Solution

## Overview

API version: 1.0.0
Contact: PM_Margo@crif.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crifmargo

import (
	"encoding/json"
)

// checks if the SearchCompanyDataTypeForeignTrade type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchCompanyDataTypeForeignTrade{}

// SearchCompanyDataTypeForeignTrade struct for SearchCompanyDataTypeForeignTrade
type SearchCompanyDataTypeForeignTrade struct {
	IsImporter *bool `json:"isImporter,omitempty"`
	ImportPercentShare *float32 `json:"importPercentShare,omitempty"`
	ImportCountries *string `json:"importCountries,omitempty"`
	IsExporter *bool `json:"isExporter,omitempty"`
	ExportPercentShare *float32 `json:"exportPercentShare,omitempty"`
	ExportCountries *string `json:"exportCountries,omitempty"`
}

// NewSearchCompanyDataTypeForeignTrade instantiates a new SearchCompanyDataTypeForeignTrade object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchCompanyDataTypeForeignTrade() *SearchCompanyDataTypeForeignTrade {
	this := SearchCompanyDataTypeForeignTrade{}
	return &this
}

// NewSearchCompanyDataTypeForeignTradeWithDefaults instantiates a new SearchCompanyDataTypeForeignTrade object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchCompanyDataTypeForeignTradeWithDefaults() *SearchCompanyDataTypeForeignTrade {
	this := SearchCompanyDataTypeForeignTrade{}
	return &this
}

// GetIsImporter returns the IsImporter field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeForeignTrade) GetIsImporter() bool {
	if o == nil || IsNil(o.IsImporter) {
		var ret bool
		return ret
	}
	return *o.IsImporter
}

// GetIsImporterOk returns a tuple with the IsImporter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeForeignTrade) GetIsImporterOk() (*bool, bool) {
	if o == nil || IsNil(o.IsImporter) {
		return nil, false
	}
	return o.IsImporter, true
}

// HasIsImporter returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeForeignTrade) HasIsImporter() bool {
	if o != nil && !IsNil(o.IsImporter) {
		return true
	}

	return false
}

// SetIsImporter gets a reference to the given bool and assigns it to the IsImporter field.
func (o *SearchCompanyDataTypeForeignTrade) SetIsImporter(v bool) {
	o.IsImporter = &v
}

// GetImportPercentShare returns the ImportPercentShare field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeForeignTrade) GetImportPercentShare() float32 {
	if o == nil || IsNil(o.ImportPercentShare) {
		var ret float32
		return ret
	}
	return *o.ImportPercentShare
}

// GetImportPercentShareOk returns a tuple with the ImportPercentShare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeForeignTrade) GetImportPercentShareOk() (*float32, bool) {
	if o == nil || IsNil(o.ImportPercentShare) {
		return nil, false
	}
	return o.ImportPercentShare, true
}

// HasImportPercentShare returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeForeignTrade) HasImportPercentShare() bool {
	if o != nil && !IsNil(o.ImportPercentShare) {
		return true
	}

	return false
}

// SetImportPercentShare gets a reference to the given float32 and assigns it to the ImportPercentShare field.
func (o *SearchCompanyDataTypeForeignTrade) SetImportPercentShare(v float32) {
	o.ImportPercentShare = &v
}

// GetImportCountries returns the ImportCountries field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeForeignTrade) GetImportCountries() string {
	if o == nil || IsNil(o.ImportCountries) {
		var ret string
		return ret
	}
	return *o.ImportCountries
}

// GetImportCountriesOk returns a tuple with the ImportCountries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeForeignTrade) GetImportCountriesOk() (*string, bool) {
	if o == nil || IsNil(o.ImportCountries) {
		return nil, false
	}
	return o.ImportCountries, true
}

// HasImportCountries returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeForeignTrade) HasImportCountries() bool {
	if o != nil && !IsNil(o.ImportCountries) {
		return true
	}

	return false
}

// SetImportCountries gets a reference to the given string and assigns it to the ImportCountries field.
func (o *SearchCompanyDataTypeForeignTrade) SetImportCountries(v string) {
	o.ImportCountries = &v
}

// GetIsExporter returns the IsExporter field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeForeignTrade) GetIsExporter() bool {
	if o == nil || IsNil(o.IsExporter) {
		var ret bool
		return ret
	}
	return *o.IsExporter
}

// GetIsExporterOk returns a tuple with the IsExporter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeForeignTrade) GetIsExporterOk() (*bool, bool) {
	if o == nil || IsNil(o.IsExporter) {
		return nil, false
	}
	return o.IsExporter, true
}

// HasIsExporter returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeForeignTrade) HasIsExporter() bool {
	if o != nil && !IsNil(o.IsExporter) {
		return true
	}

	return false
}

// SetIsExporter gets a reference to the given bool and assigns it to the IsExporter field.
func (o *SearchCompanyDataTypeForeignTrade) SetIsExporter(v bool) {
	o.IsExporter = &v
}

// GetExportPercentShare returns the ExportPercentShare field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeForeignTrade) GetExportPercentShare() float32 {
	if o == nil || IsNil(o.ExportPercentShare) {
		var ret float32
		return ret
	}
	return *o.ExportPercentShare
}

// GetExportPercentShareOk returns a tuple with the ExportPercentShare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeForeignTrade) GetExportPercentShareOk() (*float32, bool) {
	if o == nil || IsNil(o.ExportPercentShare) {
		return nil, false
	}
	return o.ExportPercentShare, true
}

// HasExportPercentShare returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeForeignTrade) HasExportPercentShare() bool {
	if o != nil && !IsNil(o.ExportPercentShare) {
		return true
	}

	return false
}

// SetExportPercentShare gets a reference to the given float32 and assigns it to the ExportPercentShare field.
func (o *SearchCompanyDataTypeForeignTrade) SetExportPercentShare(v float32) {
	o.ExportPercentShare = &v
}

// GetExportCountries returns the ExportCountries field value if set, zero value otherwise.
func (o *SearchCompanyDataTypeForeignTrade) GetExportCountries() string {
	if o == nil || IsNil(o.ExportCountries) {
		var ret string
		return ret
	}
	return *o.ExportCountries
}

// GetExportCountriesOk returns a tuple with the ExportCountries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchCompanyDataTypeForeignTrade) GetExportCountriesOk() (*string, bool) {
	if o == nil || IsNil(o.ExportCountries) {
		return nil, false
	}
	return o.ExportCountries, true
}

// HasExportCountries returns a boolean if a field has been set.
func (o *SearchCompanyDataTypeForeignTrade) HasExportCountries() bool {
	if o != nil && !IsNil(o.ExportCountries) {
		return true
	}

	return false
}

// SetExportCountries gets a reference to the given string and assigns it to the ExportCountries field.
func (o *SearchCompanyDataTypeForeignTrade) SetExportCountries(v string) {
	o.ExportCountries = &v
}

func (o SearchCompanyDataTypeForeignTrade) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchCompanyDataTypeForeignTrade) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsImporter) {
		toSerialize["isImporter"] = o.IsImporter
	}
	if !IsNil(o.ImportPercentShare) {
		toSerialize["importPercentShare"] = o.ImportPercentShare
	}
	if !IsNil(o.ImportCountries) {
		toSerialize["importCountries"] = o.ImportCountries
	}
	if !IsNil(o.IsExporter) {
		toSerialize["isExporter"] = o.IsExporter
	}
	if !IsNil(o.ExportPercentShare) {
		toSerialize["exportPercentShare"] = o.ExportPercentShare
	}
	if !IsNil(o.ExportCountries) {
		toSerialize["exportCountries"] = o.ExportCountries
	}
	return toSerialize, nil
}

type NullableSearchCompanyDataTypeForeignTrade struct {
	value *SearchCompanyDataTypeForeignTrade
	isSet bool
}

func (v NullableSearchCompanyDataTypeForeignTrade) Get() *SearchCompanyDataTypeForeignTrade {
	return v.value
}

func (v *NullableSearchCompanyDataTypeForeignTrade) Set(val *SearchCompanyDataTypeForeignTrade) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchCompanyDataTypeForeignTrade) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchCompanyDataTypeForeignTrade) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchCompanyDataTypeForeignTrade(val *SearchCompanyDataTypeForeignTrade) *NullableSearchCompanyDataTypeForeignTrade {
	return &NullableSearchCompanyDataTypeForeignTrade{value: val, isSet: true}
}

func (v NullableSearchCompanyDataTypeForeignTrade) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchCompanyDataTypeForeignTrade) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


